/*! For license information please see viewer.js.LICENSE.txt */
(()=>{var t,e={3114:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(7537),i=n.n(r),o=n(3645),a=n.n(o)()(i());a.push([t.id,"/* style sheet for the panel on the left, which contains the tree view of the slides */\n\n\n\n#left-panel {\n    position : relative;\n    color : black;\n    display : flex;\n    flex-direction: column;\n    background-color: var(--very-light-blue);\n    width : 0;\n    vertical-align: top;\n    cursor: default;\n    white-space: nowrap;\n    overflow: hidden;\n    resize :horizontal;\n    font-size: 12px;\n}\n\n\n\n.tree-view-item {\n    overflow: hidden;    \n    white-space: nowrap;\n    display:block;\n    color :gray;\n    margin-bottom : 5px;\n    cursor: pointer;\n}\n\n.tree-view-item-seen {    \n    color: black;\n}\n\n.tree-view-item-loading {\n    color : red;\n}\n\n.tree-view-item i {\n    margin-right: 5px;\n    cursor : pointer;\n    font-size: 10px;\n}\n\n.slide-stack {\n    font-size: 10px;\n    margin-top : 5px;\n    margin-left: 1.5em;\n    overflow: scroll;\n}\n\n.slide-stack-hidden {\n    display : none;\n}\n\n#slide-stack-container {\n   overflow : scroll; \n   margin-top : 10px\n}\n\n.disabled-event {\n    text-decoration: line-through;\n}\n\n\n#made-using-slajdomat {\n    margin : 10px;\n    padding-left: 7px;\n}\n\n#made-using-slajdomat img {\n    width : 100px;\n}\n\n\n#logo-line {\n    font-size : 20px;\n    margin-top  : 5px;\n    margin-bottom : 5px;\n    }\n\n#logo-second-line {    \n    margin : 0px;\n}\n\n#search-panel {\n    display: flex;\n    flex-direction: column;\n    padding : 10px;\n    border-top : 1px solid var(--light-blue);\n    border-bottom : 1px solid var(--light-blue);\n}\n\n#search-box {\n    display: flex;\n    margin-top : 5px;\n}\n\n#search-box i {\n    margin : 3px;\n    font-size: 18px;\n}\n\n#search-box input {\n    width : 100%;\n}\n\n#search-results {\n    margin-left : 5px;\n    margin-top : 5px;\n}\n\n.one-result {\n    padding : 5px;\n}\n\n.one-result:hover {\n    background-color: white;\n    cursor: pointer;\n}\n\n.search-result-text {    \n    color: grey;\n\n}","",{version:3,sources:["webpack://./src/viewer/css/left-panel.css"],names:[],mappings:"AAAA,sFAAsF;;;;AAItF;IACI,mBAAmB;IACnB,aAAa;IACb,cAAc;IACd,sBAAsB;IACtB,wCAAwC;IACxC,SAAS;IACT,mBAAmB;IACnB,eAAe;IACf,mBAAmB;IACnB,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;AACnB;;;;AAIA;IACI,gBAAgB;IAChB,mBAAmB;IACnB,aAAa;IACb,WAAW;IACX,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;AAEA;GACG,iBAAiB;GACjB;AACH;;AAEA;IACI,6BAA6B;AACjC;;;AAGA;IACI,aAAa;IACb,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;;AAGA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,mBAAmB;IACnB;;AAEJ;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,cAAc;IACd,wCAAwC;IACxC,2CAA2C;AAC/C;;AAEA;IACI,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,WAAW;;AAEf",sourcesContent:["/* style sheet for the panel on the left, which contains the tree view of the slides */\n\n\n\n#left-panel {\n    position : relative;\n    color : black;\n    display : flex;\n    flex-direction: column;\n    background-color: var(--very-light-blue);\n    width : 0;\n    vertical-align: top;\n    cursor: default;\n    white-space: nowrap;\n    overflow: hidden;\n    resize :horizontal;\n    font-size: 12px;\n}\n\n\n\n.tree-view-item {\n    overflow: hidden;    \n    white-space: nowrap;\n    display:block;\n    color :gray;\n    margin-bottom : 5px;\n    cursor: pointer;\n}\n\n.tree-view-item-seen {    \n    color: black;\n}\n\n.tree-view-item-loading {\n    color : red;\n}\n\n.tree-view-item i {\n    margin-right: 5px;\n    cursor : pointer;\n    font-size: 10px;\n}\n\n.slide-stack {\n    font-size: 10px;\n    margin-top : 5px;\n    margin-left: 1.5em;\n    overflow: scroll;\n}\n\n.slide-stack-hidden {\n    display : none;\n}\n\n#slide-stack-container {\n   overflow : scroll; \n   margin-top : 10px\n}\n\n.disabled-event {\n    text-decoration: line-through;\n}\n\n\n#made-using-slajdomat {\n    margin : 10px;\n    padding-left: 7px;\n}\n\n#made-using-slajdomat img {\n    width : 100px;\n}\n\n\n#logo-line {\n    font-size : 20px;\n    margin-top  : 5px;\n    margin-bottom : 5px;\n    }\n\n#logo-second-line {    \n    margin : 0px;\n}\n\n#search-panel {\n    display: flex;\n    flex-direction: column;\n    padding : 10px;\n    border-top : 1px solid var(--light-blue);\n    border-bottom : 1px solid var(--light-blue);\n}\n\n#search-box {\n    display: flex;\n    margin-top : 5px;\n}\n\n#search-box i {\n    margin : 3px;\n    font-size: 18px;\n}\n\n#search-box input {\n    width : 100%;\n}\n\n#search-results {\n    margin-left : 5px;\n    margin-top : 5px;\n}\n\n.one-result {\n    padding : 5px;\n}\n\n.one-result:hover {\n    background-color: white;\n    cursor: pointer;\n}\n\n.search-result-text {    \n    color: grey;\n\n}"],sourceRoot:""}]);const s=a},2439:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(7537),i=n.n(r),o=n(3645),a=n.n(o)()(i());a.push([t.id,"/* ***** progress panel ***/\n#progress-panel {\n    width : 100%;\n    position : absolute;\n    bottom : 0;\n    height : 20px;\n    display : flex;\n    align-items: flex-end;\n    font-size : 12px;\n    cursor: default;\n    padding : 0;\n}\n\n.tablet #progress-panel .material-icons {\n    font-size: 40px;\n}\n\n#progress-line {\n    height: 100%;\n    flex-grow: 1;\n    display : flex;\n    align-items: center;\n    justify-content: center;\n    cursor : pointer;\n}\n#progress-line > div {\n    height : 100%;\n    background-color: var(--very-light-blue);\n    border-left : 1px solid white;\n    display:  flex;\n}\n\n\n/* #progress-line .seen {\n    background-color: var(--very-light-blue);\n   } */\n\nbody.has-sound #progress-line .nosound {\n    background-color: lightgray;\n}\n\n#progress-line .recording {\n    background-color:  red;\n}\n\nbody.has-sound #progress-line .nosound.recording {\n    background-color:  red;\n}\n\n.progress-filler {\n    height: 100%;\n    background-color: var(--light-blue);\n}\n\nbody.has-sound #progress-line .nosound .progress-filler {\n    background-color: grey;\n}\n\n\n#progress-controls {\n    /* width : 110px; */\n    z-index: 5;\n    display : flex; \n    align-items: center;\n    padding-left: 5px;\n    padding-right:5px;\n}\n\n#progress-controls i {\n    cursor: pointer;\n}\n\n#progress-controls div {\n  flex-grow: 1;\n}\n\n\n#progress-controls div {\n    display : flex; \n    align-items: center;\n}\n\n#page-count {\n    width : 80px;\n    display : flex;\n    align-items: center;\n    justify-content: center;\n}\n\n#page-count-enumerator {\n    font-size: 15px;\n}\n\n.playing #page-count-enumerator {\n    display : none;\n}\n\n.playing #page-count-denominator {\n    display : none;\n}\n\n#progress-panel:not(.playing) #time-elapsed {\n    display : none;\n}\n\n#progress-panel:not(.playing) #sound-speed {\n    opacity : 0;\n}\n\nbody:not(.has-sound) #play-button {\n    display: none;\n}\n\nbody:not(.has-sound) #sound-speed {\n    display : none;\n}\n\n#sound-speed {\n    cursor : pointer;\n}\n\n#page-count-denominator {\n    color :darkgray;\n}\n#next-event {\n    right: 0%;\n}","",{version:3,sources:["webpack://./src/viewer/css/progress.css"],names:[],mappings:"AAAA,2BAA2B;AAC3B;IACI,YAAY;IACZ,mBAAmB;IACnB,UAAU;IACV,aAAa;IACb,cAAc;IACd,qBAAqB;IACrB,gBAAgB;IAChB,eAAe;IACf,WAAW;AACf;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,cAAc;IACd,mBAAmB;IACnB,uBAAuB;IACvB,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,wCAAwC;IACxC,6BAA6B;IAC7B,cAAc;AAClB;;;AAGA;;MAEM;;AAEN;IACI,2BAA2B;AAC/B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,mCAAmC;AACvC;;AAEA;IACI,sBAAsB;AAC1B;;;AAGA;IACI,mBAAmB;IACnB,UAAU;IACV,cAAc;IACd,mBAAmB;IACnB,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,eAAe;AACnB;;AAEA;EACE,YAAY;AACd;;;AAGA;IACI,cAAc;IACd,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,cAAc;IACd,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;AACA;IACI,SAAS;AACb",sourcesContent:["/* ***** progress panel ***/\n#progress-panel {\n    width : 100%;\n    position : absolute;\n    bottom : 0;\n    height : 20px;\n    display : flex;\n    align-items: flex-end;\n    font-size : 12px;\n    cursor: default;\n    padding : 0;\n}\n\n.tablet #progress-panel .material-icons {\n    font-size: 40px;\n}\n\n#progress-line {\n    height: 100%;\n    flex-grow: 1;\n    display : flex;\n    align-items: center;\n    justify-content: center;\n    cursor : pointer;\n}\n#progress-line > div {\n    height : 100%;\n    background-color: var(--very-light-blue);\n    border-left : 1px solid white;\n    display:  flex;\n}\n\n\n/* #progress-line .seen {\n    background-color: var(--very-light-blue);\n   } */\n\nbody.has-sound #progress-line .nosound {\n    background-color: lightgray;\n}\n\n#progress-line .recording {\n    background-color:  red;\n}\n\nbody.has-sound #progress-line .nosound.recording {\n    background-color:  red;\n}\n\n.progress-filler {\n    height: 100%;\n    background-color: var(--light-blue);\n}\n\nbody.has-sound #progress-line .nosound .progress-filler {\n    background-color: grey;\n}\n\n\n#progress-controls {\n    /* width : 110px; */\n    z-index: 5;\n    display : flex; \n    align-items: center;\n    padding-left: 5px;\n    padding-right:5px;\n}\n\n#progress-controls i {\n    cursor: pointer;\n}\n\n#progress-controls div {\n  flex-grow: 1;\n}\n\n\n#progress-controls div {\n    display : flex; \n    align-items: center;\n}\n\n#page-count {\n    width : 80px;\n    display : flex;\n    align-items: center;\n    justify-content: center;\n}\n\n#page-count-enumerator {\n    font-size: 15px;\n}\n\n.playing #page-count-enumerator {\n    display : none;\n}\n\n.playing #page-count-denominator {\n    display : none;\n}\n\n#progress-panel:not(.playing) #time-elapsed {\n    display : none;\n}\n\n#progress-panel:not(.playing) #sound-speed {\n    opacity : 0;\n}\n\nbody:not(.has-sound) #play-button {\n    display: none;\n}\n\nbody:not(.has-sound) #sound-speed {\n    display : none;\n}\n\n#sound-speed {\n    cursor : pointer;\n}\n\n#page-count-denominator {\n    color :darkgray;\n}\n#next-event {\n    right: 0%;\n}"],sourceRoot:""}]);const s=a},6658:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(7537),i=n.n(r),o=n(3645),a=n.n(o)()(i());a.push([t.id,"\n  /* the sketch panel *********** */\n  .tool-panel {\n    position: fixed;\n    display : none;\n    right: 0;\n    width : 20px;\n    top : 50%;\n    transform: translate(0,-50%);\n    /* width : 40%; */\n    /* left : 30%; */\n    padding-top : 20px;\n    padding-bottom : 20px;\n     padding-left : 5px; \n     padding-right : 5px; \n    border-radius: 10px;\n    /* border-top-left-radius: 25px;\n    border-top-right-radius: 25px; */\n    background-color:lightcyan;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    z-index : 10;\n    /* border : 1px solid black; */\n}\n\n.tool-panel div {\n    font-family: Roboto;\n    margin : 5px;\n    padding : 2px;\n}\n\n.noselect {\n  -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n     -khtml-user-select: none; /* Konqueror HTML */\n       -moz-user-select: none; /* Old versions of Firefox */\n        -ms-user-select: none; /* Internet Explorer/Edge */\n            user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n}\n\n.tool-panel i {\n    margin : 5px;\n    cursor : pointer;\n    border-radius : 5px;\n    padding : 2px;\n    font-size: 18px;\n}\n\n.tool-panel .disabled {\n  color : lightgrey;\n  cursor : default;\n}\n\n.tool-panel .selected {\n    border : 1px solid grey\n}\n\n#sketch-red {\n    color :red;\n}\n\n#sketch-blue {\n  color :blue;\n}\n\n","",{version:3,sources:["webpack://./src/viewer/css/sketch.css"],names:[],mappings:";EACE,iCAAiC;EACjC;IACE,eAAe;IACf,cAAc;IACd,QAAQ;IACR,YAAY;IACZ,SAAS;IACT,4BAA4B;IAC5B,iBAAiB;IACjB,gBAAgB;IAChB,kBAAkB;IAClB,qBAAqB;KACpB,kBAAkB;KAClB,mBAAmB;IACpB,mBAAmB;IACnB;oCACgC;IAChC,0BAA0B;IAC1B,mBAAmB;IACnB,uBAAuB;IACvB,sBAAsB;IACtB,YAAY;IACZ,8BAA8B;AAClC;;AAEA;IACI,mBAAmB;IACnB,YAAY;IACZ,aAAa;AACjB;;AAEA;EACE,2BAA2B,EAAE,eAAe;IAC1C,yBAAyB,EAAE,WAAW;KACrC,wBAAwB,EAAE,mBAAmB;OAC3C,sBAAsB,EAAE,4BAA4B;QACnD,qBAAqB,EAAE,2BAA2B;YAC9C,iBAAiB,EAAE;gFACiD;AAChF;;AAEA;IACI,YAAY;IACZ,gBAAgB;IAChB,mBAAmB;IACnB,aAAa;IACb,eAAe;AACnB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;IACI;AACJ;;AAEA;IACI,UAAU;AACd;;AAEA;EACE,WAAW;AACb",sourcesContent:["\n  /* the sketch panel *********** */\n  .tool-panel {\n    position: fixed;\n    display : none;\n    right: 0;\n    width : 20px;\n    top : 50%;\n    transform: translate(0,-50%);\n    /* width : 40%; */\n    /* left : 30%; */\n    padding-top : 20px;\n    padding-bottom : 20px;\n     padding-left : 5px; \n     padding-right : 5px; \n    border-radius: 10px;\n    /* border-top-left-radius: 25px;\n    border-top-right-radius: 25px; */\n    background-color:lightcyan;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    z-index : 10;\n    /* border : 1px solid black; */\n}\n\n.tool-panel div {\n    font-family: Roboto;\n    margin : 5px;\n    padding : 2px;\n}\n\n.noselect {\n  -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n     -khtml-user-select: none; /* Konqueror HTML */\n       -moz-user-select: none; /* Old versions of Firefox */\n        -ms-user-select: none; /* Internet Explorer/Edge */\n            user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n}\n\n.tool-panel i {\n    margin : 5px;\n    cursor : pointer;\n    border-radius : 5px;\n    padding : 2px;\n    font-size: 18px;\n}\n\n.tool-panel .disabled {\n  color : lightgrey;\n  cursor : default;\n}\n\n.tool-panel .selected {\n    border : 1px solid grey\n}\n\n#sketch-red {\n    color :red;\n}\n\n#sketch-blue {\n  color :blue;\n}\n\n"],sourceRoot:""}]);const s=a},2175:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(7537),i=n.n(r),o=n(3645),a=n.n(o)()(i());a.push([t.id,":root {\n    --grafitowy : #2c2c2c;\n      --niebieski : #18A0FB;\n    --select-color : #daebf7;\n    --disabled-color : Silver;\n    --blue : #4646FF;\n    --light-blue : #B4C8FF;\n    --very-light-blue : #DCE6FF;\n  }\n\nbody, html {\n    height : 100%;\n    overflow: hidden;\n}\n\nbody, div {\n    font-family: 'Roboto';\n    font-weight: 200;\n}\n\nbody {\n    margin : 0;\n}\n\n\n#upper-panel {\n    position: absolute;\n    top : 0;\n    bottom : 20px;\n    width :100%;\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n    flex-shrink : 1;\n}\n\n#text-alert-box {\n    position : fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    z-index: 3;\n    display : none; \n}\n\n#text-alert-background {\n    position : absolute;\n    width : 100%;\n    height : 100%;\n    background-color : lightgray;\n    opacity: 90%; \n}\n\n#text-alert {\n padding: 10px;\n z-index: 1;\n}\n\n.hidden-svg {\n    position: absolute;\n    width : 0px;\n    height : 0px; \n}\n\n#svg-container {\n    flex-grow : 1;\n    flex-direction: column;\n    /* align-items : center; */\n}\n\n#svg { \n    flex-grow : 1;\n}\n\n/* this counters a display bug in figma */\npath:not([fill]) {\n    fill : transparent;\n}\n\n.sound-icon {\n    position : absolute;\n    color: red;\n    z-index : 2;\n}\n\n.invisible {\n    display: none;\n}\n\n","",{version:3,sources:["webpack://./src/viewer/css/viewer.css"],names:[],mappings:"AAAA;IACI,qBAAqB;MACnB,qBAAqB;IACvB,wBAAwB;IACxB,yBAAyB;IACzB,gBAAgB;IAChB,sBAAsB;IACtB,2BAA2B;EAC7B;;AAEF;IACI,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,UAAU;AACd;;;AAGA;IACI,kBAAkB;IAClB,OAAO;IACP,aAAa;IACb,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,SAAS;IACT,OAAO;IACP,QAAQ;IACR,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,UAAU;IACV,cAAc;AAClB;;AAEA;IACI,mBAAmB;IACnB,YAAY;IACZ,aAAa;IACb,4BAA4B;IAC5B,YAAY;AAChB;;AAEA;CACC,aAAa;CACb,UAAU;AACX;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,0BAA0B;AAC9B;;AAEA;IACI,aAAa;AACjB;;AAEA,yCAAyC;AACzC;IACI,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;IACnB,UAAU;IACV,WAAW;AACf;;AAEA;IACI,aAAa;AACjB",sourcesContent:[":root {\n    --grafitowy : #2c2c2c;\n      --niebieski : #18A0FB;\n    --select-color : #daebf7;\n    --disabled-color : Silver;\n    --blue : #4646FF;\n    --light-blue : #B4C8FF;\n    --very-light-blue : #DCE6FF;\n  }\n\nbody, html {\n    height : 100%;\n    overflow: hidden;\n}\n\nbody, div {\n    font-family: 'Roboto';\n    font-weight: 200;\n}\n\nbody {\n    margin : 0;\n}\n\n\n#upper-panel {\n    position: absolute;\n    top : 0;\n    bottom : 20px;\n    width :100%;\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n    flex-shrink : 1;\n}\n\n#text-alert-box {\n    position : fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    z-index: 3;\n    display : none; \n}\n\n#text-alert-background {\n    position : absolute;\n    width : 100%;\n    height : 100%;\n    background-color : lightgray;\n    opacity: 90%; \n}\n\n#text-alert {\n padding: 10px;\n z-index: 1;\n}\n\n.hidden-svg {\n    position: absolute;\n    width : 0px;\n    height : 0px; \n}\n\n#svg-container {\n    flex-grow : 1;\n    flex-direction: column;\n    /* align-items : center; */\n}\n\n#svg { \n    flex-grow : 1;\n}\n\n/* this counters a display bug in figma */\npath:not([fill]) {\n    fill : transparent;\n}\n\n.sound-icon {\n    position : absolute;\n    color: red;\n    z-index : 2;\n}\n\n.invisible {\n    display: none;\n}\n\n"],sourceRoot:""}]);const s=a},3645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,i,o){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var u=this[s][0];null!=u&&(a[u]=!0)}for(var l=0;l<t.length;l++){var c=[].concat(t[l]);r&&a[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},7537:t=>{"use strict";t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},8820:t=>{"use strict";var e={}.hasOwnProperty,n=/[ -,\.\/:-@\[-\^`\{-~]/,r=/[ -,\.\/:-@\[\]\^`\{-~]/,i=/(^|\\+)?(\\[A-F0-9]{1,6})\x20(?![a-fA-F0-9\x20])/g,o=function t(o,a){"single"!=(a=function(t,n){if(!t)return n;var r={};for(var i in n)r[i]=e.call(t,i)?t[i]:n[i];return r}(a,t.options)).quotes&&"double"!=a.quotes&&(a.quotes="single");for(var s="double"==a.quotes?'"':"'",u=a.isIdentifier,l=o.charAt(0),c="",h=0,f=o.length;h<f;){var d=o.charAt(h++),p=d.charCodeAt(),g=void 0;if(p<32||p>126){if(p>=55296&&p<=56319&&h<f){var m=o.charCodeAt(h++);56320==(64512&m)?p=((1023&p)<<10)+(1023&m)+65536:h--}g="\\"+p.toString(16).toUpperCase()+" "}else g=a.escapeEverything?n.test(d)?"\\"+d:"\\"+p.toString(16).toUpperCase()+" ":/[\t\n\f\r\x0B]/.test(d)?"\\"+p.toString(16).toUpperCase()+" ":"\\"==d||!u&&('"'==d&&s==d||"'"==d&&s==d)||u&&r.test(d)?"\\"+d:d;c+=g}return u&&(/^-[-\d]/.test(c)?c="\\-"+c.slice(1):/\d/.test(l)&&(c="\\3"+l+" "+c.slice(1))),c=c.replace(i,(function(t,e,n){return e&&e.length%2?t:(e||"")+n})),!u&&a.wrap?s+c+s:c};o.options={escapeEverything:!1,isIdentifier:!1,quotes:"single",wrap:!1},o.version="3.0.0",t.exports=o},3804:t=>{var e=/[a-z0-9_-]/i,n=/[\s\t]/,r=/[^a-z0-9_-]/i;t.exports={parse:function(t){for(var r,i,o=!0,a=0,s="",u=0,l=[];;){if(i=t[u],0===a){if(!i&&o)break;if(!i&&!o)throw new Error("Parse error");if('"'===i||"'"===i)r=i,a=1,o=!1;else if(n.test(i));else{if(!e.test(i))throw new Error("Parse error");a=3,o=!1,u--}}else if(1===a){if(!i)throw new Error("Parse Error");"\\"===i?a=2:i===r?(l.push(s),s="",a=4):s+=i}else if(2===a){if(i!==r&&"\\"!==i)throw new Error("Parse error");s+=i,a=1}else if(3===a){if(!i){l.push(s);break}e.test(i)?s+=i:","===i?(l.push(s),s="",a=0):n.test(i)?a=5:"\\"===i&&(a=6)}else if(6===a){if(/[0-9a-f]/i.test(i))throw new Error("Parse error");s+=i,a=3}else if(5===a){if(!i){l.push(s);break}if(e.test(i))s+=" "+i,a=3;else if(","===i)l.push(s),s="",a=0;else if(!n.test(i))throw new Error("Parse error")}else if(4===a){if(!i)break;if(","===i)a=0;else if(!n.test(i))throw new Error("Parse error")}u++}return l},stringify:function(t,e){var n=e&&e.quote||'"';if('"'!==n&&"'"!==n)throw new Error("Quote must be `'` or `\"`");for(var i=new RegExp(n,"g"),o=[],a=0;a<t.length;++a){var s=t[a];r.test(s)&&(s=n+(s=s.replace(/\\/g,"\\\\").replace(i,"\\"+n))+n),o.push(s)}return o.join(", ")}}},4221:(t,e,n)=>{"use strict";function r(t){return Array.isArray?Array.isArray(t):"[object Array]"===l(t)}n.r(e),n.d(e,{default:()=>U});function i(t){return"string"==typeof t}function o(t){return"number"==typeof t}function a(t){return"object"==typeof t}function s(t){return null!=t}function u(t){return!t.trim().length}function l(t){return null==t?void 0===t?"[object Undefined]":"[object Null]":Object.prototype.toString.call(t)}const c=t=>`Missing ${t} property in key`,h=t=>`Property 'weight' in key '${t}' must be a positive integer`,f=Object.prototype.hasOwnProperty;class d{constructor(t){this._keys=[],this._keyMap={};let e=0;t.forEach((t=>{let n=p(t);e+=n.weight,this._keys.push(n),this._keyMap[n.id]=n,e+=n.weight})),this._keys.forEach((t=>{t.weight/=e}))}get(t){return this._keyMap[t]}keys(){return this._keys}toJSON(){return JSON.stringify(this._keys)}}function p(t){let e=null,n=null,o=null,a=1,s=null;if(i(t)||r(t))o=t,e=g(t),n=m(t);else{if(!f.call(t,"name"))throw new Error(c("name"));const r=t.name;if(o=r,f.call(t,"weight")&&(a=t.weight,a<=0))throw new Error(h(r));e=g(r),n=m(r),s=t.getFn}return{path:e,id:n,weight:a,src:o,getFn:s}}function g(t){return r(t)?t:t.split(".")}function m(t){return r(t)?t.join("."):t}var v={isCaseSensitive:!1,includeScore:!1,keys:[],shouldSort:!0,sortFn:(t,e)=>t.score===e.score?t.idx<e.idx?-1:1:t.score<e.score?-1:1,includeMatches:!1,findAllMatches:!1,minMatchCharLength:1,location:0,threshold:.6,distance:100,useExtendedSearch:!1,getFn:function(t,e){let n=[],u=!1;const c=(t,e,h)=>{if(s(t))if(e[h]){const f=t[e[h]];if(!s(f))return;if(h===e.length-1&&(i(f)||o(f)||function(t){return!0===t||!1===t||function(t){return a(t)&&null!==t}(t)&&"[object Boolean]"==l(t)}(f)))n.push(function(t){return null==t?"":function(t){if("string"==typeof t)return t;let e=t+"";return"0"==e&&1/t==-1/0?"-0":e}(t)}(f));else if(r(f)){u=!0;for(let t=0,n=f.length;t<n;t+=1)c(f[t],e,h+1)}else e.length&&c(f,e,h+1)}else n.push(t)};return c(t,i(e)?e.split("."):e,0),u?n:n[0]},ignoreLocation:!1,ignoreFieldNorm:!1,fieldNormWeight:1};const y=/[^ ]+/g;class b{constructor({getFn:t=v.getFn,fieldNormWeight:e=v.fieldNormWeight}={}){this.norm=function(t=1,e=3){const n=new Map,r=Math.pow(10,e);return{get(e){const i=e.match(y).length;if(n.has(i))return n.get(i);const o=1/Math.pow(i,.5*t),a=parseFloat(Math.round(o*r)/r);return n.set(i,a),a},clear(){n.clear()}}}(e,3),this.getFn=t,this.isCreated=!1,this.setIndexRecords()}setSources(t=[]){this.docs=t}setIndexRecords(t=[]){this.records=t}setKeys(t=[]){this.keys=t,this._keysMap={},t.forEach(((t,e)=>{this._keysMap[t.id]=e}))}create(){!this.isCreated&&this.docs.length&&(this.isCreated=!0,i(this.docs[0])?this.docs.forEach(((t,e)=>{this._addString(t,e)})):this.docs.forEach(((t,e)=>{this._addObject(t,e)})),this.norm.clear())}add(t){const e=this.size();i(t)?this._addString(t,e):this._addObject(t,e)}removeAt(t){this.records.splice(t,1);for(let e=t,n=this.size();e<n;e+=1)this.records[e].i-=1}getValueForItemAtKeyId(t,e){return t[this._keysMap[e]]}size(){return this.records.length}_addString(t,e){if(!s(t)||u(t))return;let n={v:t,i:e,n:this.norm.get(t)};this.records.push(n)}_addObject(t,e){let n={i:e,$:{}};this.keys.forEach(((e,o)=>{let a=e.getFn?e.getFn(t):this.getFn(t,e.path);if(s(a))if(r(a)){let t=[];const e=[{nestedArrIndex:-1,value:a}];for(;e.length;){const{nestedArrIndex:n,value:o}=e.pop();if(s(o))if(i(o)&&!u(o)){let e={v:o,i:n,n:this.norm.get(o)};t.push(e)}else r(o)&&o.forEach(((t,n)=>{e.push({nestedArrIndex:n,value:t})}))}n.$[o]=t}else if(i(a)&&!u(a)){let t={v:a,n:this.norm.get(a)};n.$[o]=t}})),this.records.push(n)}toJSON(){return{keys:this.keys,records:this.records}}}function w(t,e,{getFn:n=v.getFn,fieldNormWeight:r=v.fieldNormWeight}={}){const i=new b({getFn:n,fieldNormWeight:r});return i.setKeys(t.map(p)),i.setSources(e),i.create(),i}function A(t,{errors:e=0,currentLocation:n=0,expectedLocation:r=0,distance:i=v.distance,ignoreLocation:o=v.ignoreLocation}={}){const a=e/t.length;if(o)return a;const s=Math.abs(r-n);return i?a+s/i:s?1:a}const x=32;function _(t){let e={};for(let n=0,r=t.length;n<r;n+=1){const i=t.charAt(n);e[i]=(e[i]||0)|1<<r-n-1}return e}class S{constructor(t,{location:e=v.location,threshold:n=v.threshold,distance:r=v.distance,includeMatches:i=v.includeMatches,findAllMatches:o=v.findAllMatches,minMatchCharLength:a=v.minMatchCharLength,isCaseSensitive:s=v.isCaseSensitive,ignoreLocation:u=v.ignoreLocation}={}){if(this.options={location:e,threshold:n,distance:r,includeMatches:i,findAllMatches:o,minMatchCharLength:a,isCaseSensitive:s,ignoreLocation:u},this.pattern=s?t:t.toLowerCase(),this.chunks=[],!this.pattern.length)return;const l=(t,e)=>{this.chunks.push({pattern:t,alphabet:_(t),startIndex:e})},c=this.pattern.length;if(c>x){let t=0;const e=c%x,n=c-e;for(;t<n;)l(this.pattern.substr(t,x),t),t+=x;if(e){const t=c-x;l(this.pattern.substr(t),t)}}else l(this.pattern,0)}searchIn(t){const{isCaseSensitive:e,includeMatches:n}=this.options;if(e||(t=t.toLowerCase()),this.pattern===t){let e={isMatch:!0,score:0};return n&&(e.indices=[[0,t.length-1]]),e}const{location:r,distance:i,threshold:o,findAllMatches:a,minMatchCharLength:s,ignoreLocation:u}=this.options;let l=[],c=0,h=!1;this.chunks.forEach((({pattern:e,alphabet:f,startIndex:d})=>{const{isMatch:p,score:g,indices:m}=function(t,e,n,{location:r=v.location,distance:i=v.distance,threshold:o=v.threshold,findAllMatches:a=v.findAllMatches,minMatchCharLength:s=v.minMatchCharLength,includeMatches:u=v.includeMatches,ignoreLocation:l=v.ignoreLocation}={}){if(e.length>x)throw new Error("Pattern length exceeds max of 32.");const c=e.length,h=t.length,f=Math.max(0,Math.min(r,h));let d=o,p=f;const g=s>1||u,m=g?Array(h):[];let y;for(;(y=t.indexOf(e,p))>-1;){let t=A(e,{currentLocation:y,expectedLocation:f,distance:i,ignoreLocation:l});if(d=Math.min(t,d),p=y+c,g){let t=0;for(;t<c;)m[y+t]=1,t+=1}}p=-1;let b=[],w=1,_=c+h;const S=1<<c-1;for(let r=0;r<c;r+=1){let o=0,s=_;for(;o<s;)A(e,{errors:r,currentLocation:f+s,expectedLocation:f,distance:i,ignoreLocation:l})<=d?o=s:_=s,s=Math.floor((_-o)/2+o);_=s;let u=Math.max(1,f-s+1),v=a?h:Math.min(f+s,h)+c,y=Array(v+2);y[v+1]=(1<<r)-1;for(let o=v;o>=u;o-=1){let a=o-1,s=n[t.charAt(a)];if(g&&(m[a]=+!!s),y[o]=(y[o+1]<<1|1)&s,r&&(y[o]|=(b[o+1]|b[o])<<1|1|b[o+1]),y[o]&S&&(w=A(e,{errors:r,currentLocation:a,expectedLocation:f,distance:i,ignoreLocation:l}),w<=d)){if(d=w,p=a,p<=f)break;u=Math.max(1,2*f-p)}}if(A(e,{errors:r+1,currentLocation:f,expectedLocation:f,distance:i,ignoreLocation:l})>d)break;b=y}const L={isMatch:p>=0,score:Math.max(.001,w)};if(g){const t=function(t=[],e=v.minMatchCharLength){let n=[],r=-1,i=-1,o=0;for(let a=t.length;o<a;o+=1){let a=t[o];a&&-1===r?r=o:a||-1===r||(i=o-1,i-r+1>=e&&n.push([r,i]),r=-1)}return t[o-1]&&o-r>=e&&n.push([r,o-1]),n}(m,s);t.length?u&&(L.indices=t):L.isMatch=!1}return L}(t,e,f,{location:r+d,distance:i,threshold:o,findAllMatches:a,minMatchCharLength:s,includeMatches:n,ignoreLocation:u});p&&(h=!0),c+=g,p&&m&&(l=[...l,...m])}));let f={isMatch:h,score:h?c/this.chunks.length:1};return h&&n&&(f.indices=l),f}}class L{constructor(t){this.pattern=t}static isMultiMatch(t){return N(t,this.multiRegex)}static isSingleMatch(t){return N(t,this.singleRegex)}search(){}}function N(t,e){const n=t.match(e);return n?n[1]:null}class k extends L{constructor(t,{location:e=v.location,threshold:n=v.threshold,distance:r=v.distance,includeMatches:i=v.includeMatches,findAllMatches:o=v.findAllMatches,minMatchCharLength:a=v.minMatchCharLength,isCaseSensitive:s=v.isCaseSensitive,ignoreLocation:u=v.ignoreLocation}={}){super(t),this._bitapSearch=new S(t,{location:e,threshold:n,distance:r,includeMatches:i,findAllMatches:o,minMatchCharLength:a,isCaseSensitive:s,ignoreLocation:u})}static get type(){return"fuzzy"}static get multiRegex(){return/^"(.*)"$/}static get singleRegex(){return/^(.*)$/}search(t){return this._bitapSearch.searchIn(t)}}class C extends L{constructor(t){super(t)}static get type(){return"include"}static get multiRegex(){return/^'"(.*)"$/}static get singleRegex(){return/^'(.*)$/}search(t){let e,n=0;const r=[],i=this.pattern.length;for(;(e=t.indexOf(this.pattern,n))>-1;)n=e+i,r.push([e,n-1]);const o=!!r.length;return{isMatch:o,score:o?0:1,indices:r}}}const P=[class extends L{constructor(t){super(t)}static get type(){return"exact"}static get multiRegex(){return/^="(.*)"$/}static get singleRegex(){return/^=(.*)$/}search(t){const e=t===this.pattern;return{isMatch:e,score:e?0:1,indices:[0,this.pattern.length-1]}}},C,class extends L{constructor(t){super(t)}static get type(){return"prefix-exact"}static get multiRegex(){return/^\^"(.*)"$/}static get singleRegex(){return/^\^(.*)$/}search(t){const e=t.startsWith(this.pattern);return{isMatch:e,score:e?0:1,indices:[0,this.pattern.length-1]}}},class extends L{constructor(t){super(t)}static get type(){return"inverse-prefix-exact"}static get multiRegex(){return/^!\^"(.*)"$/}static get singleRegex(){return/^!\^(.*)$/}search(t){const e=!t.startsWith(this.pattern);return{isMatch:e,score:e?0:1,indices:[0,t.length-1]}}},class extends L{constructor(t){super(t)}static get type(){return"inverse-suffix-exact"}static get multiRegex(){return/^!"(.*)"\$$/}static get singleRegex(){return/^!(.*)\$$/}search(t){const e=!t.endsWith(this.pattern);return{isMatch:e,score:e?0:1,indices:[0,t.length-1]}}},class extends L{constructor(t){super(t)}static get type(){return"suffix-exact"}static get multiRegex(){return/^"(.*)"\$$/}static get singleRegex(){return/^(.*)\$$/}search(t){const e=t.endsWith(this.pattern);return{isMatch:e,score:e?0:1,indices:[t.length-this.pattern.length,t.length-1]}}},class extends L{constructor(t){super(t)}static get type(){return"inverse-exact"}static get multiRegex(){return/^!"(.*)"$/}static get singleRegex(){return/^!(.*)$/}search(t){const e=-1===t.indexOf(this.pattern);return{isMatch:e,score:e?0:1,indices:[0,t.length-1]}}},k],I=P.length,M=/ +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/,B=new Set([k.type,C.type]);const F=[];function T(t,e){for(let n=0,r=F.length;n<r;n+=1){let r=F[n];if(r.condition(t,e))return new r(t,e)}return new S(t,e)}const E="$and",O="$path",j=t=>!(!t[E]&&!t.$or),R=t=>({[E]:Object.keys(t).map((e=>({[e]:t[e]})))});function D(t,e,{auto:n=!0}={}){const o=t=>{let s=Object.keys(t);const u=(t=>!!t[O])(t);if(!u&&s.length>1&&!j(t))return o(R(t));if((t=>!r(t)&&a(t)&&!j(t))(t)){const r=u?t[O]:s[0],o=u?t.$val:t[r];if(!i(o))throw new Error((t=>`Invalid value for key ${t}`)(r));const a={keyId:m(r),pattern:o};return n&&(a.searcher=T(o,e)),a}let l={children:[],operator:s[0]};return s.forEach((e=>{const n=t[e];r(n)&&n.forEach((t=>{l.children.push(o(t))}))})),l};return j(t)||(t=R(t)),o(t)}function q(t,e){const n=t.matches;e.matches=[],s(n)&&n.forEach((t=>{if(!s(t.indices)||!t.indices.length)return;const{indices:n,value:r}=t;let i={indices:n,value:r};t.key&&(i.key=t.key.src),t.idx>-1&&(i.refIndex=t.idx),e.matches.push(i)}))}function z(t,e){e.score=t.score}class U{constructor(t,e={},n){this.options={...v,...e},this.options.useExtendedSearch,this._keyStore=new d(this.options.keys),this.setCollection(t,n)}setCollection(t,e){if(this._docs=t,e&&!(e instanceof b))throw new Error("Incorrect 'index' type");this._myIndex=e||w(this.options.keys,this._docs,{getFn:this.options.getFn,fieldNormWeight:this.options.fieldNormWeight})}add(t){s(t)&&(this._docs.push(t),this._myIndex.add(t))}remove(t=(()=>!1)){const e=[];for(let n=0,r=this._docs.length;n<r;n+=1){const i=this._docs[n];t(i,n)&&(this.removeAt(n),n-=1,r-=1,e.push(i))}return e}removeAt(t){this._docs.splice(t,1),this._myIndex.removeAt(t)}getIndex(){return this._myIndex}search(t,{limit:e=-1}={}){const{includeMatches:n,includeScore:r,shouldSort:a,sortFn:s,ignoreFieldNorm:u}=this.options;let l=i(t)?i(this._docs[0])?this._searchStringList(t):this._searchObjectList(t):this._searchLogical(t);return function(t,{ignoreFieldNorm:e=v.ignoreFieldNorm}){t.forEach((t=>{let n=1;t.matches.forEach((({key:t,norm:r,score:i})=>{const o=t?t.weight:null;n*=Math.pow(0===i&&o?Number.EPSILON:i,(o||1)*(e?1:r))})),t.score=n}))}(l,{ignoreFieldNorm:u}),a&&l.sort(s),o(e)&&e>-1&&(l=l.slice(0,e)),function(t,e,{includeMatches:n=v.includeMatches,includeScore:r=v.includeScore}={}){const i=[];return n&&i.push(q),r&&i.push(z),t.map((t=>{const{idx:n}=t,r={item:e[n],refIndex:n};return i.length&&i.forEach((e=>{e(t,r)})),r}))}(l,this._docs,{includeMatches:n,includeScore:r})}_searchStringList(t){const e=T(t,this.options),{records:n}=this._myIndex,r=[];return n.forEach((({v:t,i:n,n:i})=>{if(!s(t))return;const{isMatch:o,score:a,indices:u}=e.searchIn(t);o&&r.push({item:t,idx:n,matches:[{score:a,value:t,norm:i,indices:u}]})})),r}_searchLogical(t){const e=D(t,this.options),n=(t,e,r)=>{if(!t.children){const{keyId:n,searcher:i}=t,o=this._findMatches({key:this._keyStore.get(n),value:this._myIndex.getValueForItemAtKeyId(e,n),searcher:i});return o&&o.length?[{idx:r,item:e,matches:o}]:[]}const i=[];for(let o=0,a=t.children.length;o<a;o+=1){const a=t.children[o],s=n(a,e,r);if(s.length)i.push(...s);else if(t.operator===E)return[]}return i},r=this._myIndex.records,i={},o=[];return r.forEach((({$:t,i:r})=>{if(s(t)){let a=n(e,t,r);a.length&&(i[r]||(i[r]={idx:r,item:t,matches:[]},o.push(i[r])),a.forEach((({matches:t})=>{i[r].matches.push(...t)})))}})),o}_searchObjectList(t){const e=T(t,this.options),{keys:n,records:r}=this._myIndex,i=[];return r.forEach((({$:t,i:r})=>{if(!s(t))return;let o=[];n.forEach(((n,r)=>{o.push(...this._findMatches({key:n,value:t[r],searcher:e}))})),o.length&&i.push({idx:r,item:t,matches:o})})),i}_findMatches({key:t,value:e,searcher:n}){if(!s(e))return[];let i=[];if(r(e))e.forEach((({v:e,i:r,n:o})=>{if(!s(e))return;const{isMatch:a,score:u,indices:l}=n.searchIn(e);a&&i.push({score:u,key:t,value:e,idx:r,norm:o,indices:l})}));else{const{v:r,n:o}=e,{isMatch:a,score:s,indices:u}=n.searchIn(r);a&&i.push({score:s,key:t,value:r,norm:o,indices:u})}return i}}U.version="6.6.2",U.createIndex=w,U.parseIndex=function(t,{getFn:e=v.getFn,fieldNormWeight:n=v.fieldNormWeight}={}){const{keys:r,records:i}=t,o=new b({getFn:e,fieldNormWeight:n});return o.setKeys(r),o.setIndexRecords(i),o},U.config=v,U.parseQuery=D,function(...t){F.push(...t)}(class{constructor(t,{isCaseSensitive:e=v.isCaseSensitive,includeMatches:n=v.includeMatches,minMatchCharLength:r=v.minMatchCharLength,ignoreLocation:i=v.ignoreLocation,findAllMatches:o=v.findAllMatches,location:a=v.location,threshold:s=v.threshold,distance:u=v.distance}={}){this.query=null,this.options={isCaseSensitive:e,includeMatches:n,minMatchCharLength:r,findAllMatches:o,ignoreLocation:i,location:a,threshold:s,distance:u},this.pattern=e?t:t.toLowerCase(),this.query=function(t,e={}){return t.split("|").map((t=>{let n=t.trim().split(M).filter((t=>t&&!!t.trim())),r=[];for(let t=0,i=n.length;t<i;t+=1){const i=n[t];let o=!1,a=-1;for(;!o&&++a<I;){const t=P[a];let n=t.isMultiMatch(i);n&&(r.push(new t(n,e)),o=!0)}if(!o)for(a=-1;++a<I;){const t=P[a];let n=t.isSingleMatch(i);if(n){r.push(new t(n,e));break}}}return r}))}(this.pattern,this.options)}static condition(t,e){return e.useExtendedSearch}searchIn(t){const e=this.query;if(!e)return{isMatch:!1,score:1};const{includeMatches:n,isCaseSensitive:r}=this.options;t=r?t:t.toLowerCase();let i=0,o=[],a=0;for(let r=0,s=e.length;r<s;r+=1){const s=e[r];o.length=0,i=0;for(let e=0,r=s.length;e<r;e+=1){const r=s[e],{isMatch:u,indices:l,score:c}=r.search(t);if(!u){a=0,i=0,o.length=0;break}if(i+=1,a+=c,n){const t=r.constructor.type;B.has(t)?o=[...o,...l]:o.push(l)}}if(i){let t={isMatch:!0,score:a/i};return n&&(t.indices=o),t}}return{isMatch:!1,score:1}}})},6358:(t,e,n)=>{"use strict";function r(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function i(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}n.r(e),n.d(e,{Back:()=>Gn,Bounce:()=>Xn,CSSPlugin:()=>li,Circ:()=>$n,Cubic:()=>zn,Elastic:()=>Vn,Expo:()=>Kn,Linear:()=>Dn,Power0:()=>Tn,Power1:()=>En,Power2:()=>On,Power3:()=>jn,Power4:()=>Rn,Quad:()=>qn,Quart:()=>Un,Quint:()=>Hn,Sine:()=>Jn,SteppedEase:()=>Yn,Strong:()=>Wn,TimelineLite:()=>qe,TimelineMax:()=>qe,TweenLite:()=>$e,TweenMax:()=>hi,default:()=>ci,gsap:()=>ci});var o,a,s,u,l,c,h,f,d,p,g,m,v,y,b,w={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},A={duration:.5,overwrite:!1,delay:0},x=1e8,_=1e-8,S=2*Math.PI,L=S/4,N=0,k=Math.sqrt,C=Math.cos,P=Math.sin,I=function(t){return"string"==typeof t},M=function(t){return"function"==typeof t},B=function(t){return"number"==typeof t},F=function(t){return void 0===t},T=function(t){return"object"==typeof t},E=function(t){return!1!==t},O=function(){return"undefined"!=typeof window},j=function(t){return M(t)||I(t)},R="function"==typeof ArrayBuffer&&ArrayBuffer.isView||function(){},D=Array.isArray,q=/(?:-?\.?\d|\.)+/gi,z=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,U=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,H=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,W=/[+-]=-?[.\d]+/,V=/[^,'"\[\]\s]+/gi,G=/^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,Y={},X={},J=function(t){return(X=St(t,Y))&&Ln},K=function(t,e){return console.warn("Invalid property",t,"set to",e,"Missing plugin? gsap.registerPlugin()")},$=function(t,e){return!e&&console.warn(t)},Z=function(t,e){return t&&(Y[t]=e)&&X&&(X[t]=e)||Y},Q=function(){return 0},tt={suppressEvents:!0,isStart:!0,kill:!1},et={suppressEvents:!0,kill:!1},nt={suppressEvents:!0},rt={},it=[],ot={},at={},st={},ut=30,lt=[],ct="",ht=function(t){var e,n,r=t[0];if(T(r)||M(r)||(t=[t]),!(e=(r._gsap||{}).harness)){for(n=lt.length;n--&&!lt[n].targetTest(r););e=lt[n]}for(n=t.length;n--;)t[n]&&(t[n]._gsap||(t[n]._gsap=new Re(t[n],e)))||t.splice(n,1);return t},ft=function(t){return t._gsap||ht(ee(t))[0]._gsap},dt=function(t,e,n){return(n=t[e])&&M(n)?t[e]():F(n)&&t.getAttribute&&t.getAttribute(e)||n},pt=function(t,e){return(t=t.split(",")).forEach(e)||t},gt=function(t){return Math.round(1e5*t)/1e5||0},mt=function(t){return Math.round(1e7*t)/1e7||0},vt=function(t,e){var n=e.charAt(0),r=parseFloat(e.substr(2));return t=parseFloat(t),"+"===n?t+r:"-"===n?t-r:"*"===n?t*r:t/r},yt=function(t,e){for(var n=e.length,r=0;t.indexOf(e[r])<0&&++r<n;);return r<n},bt=function(){var t,e,n=it.length,r=it.slice(0);for(ot={},it.length=0,t=0;t<n;t++)(e=r[t])&&e._lazy&&(e.render(e._lazy[0],e._lazy[1],!0)._lazy=0)},wt=function(t,e,n,r){it.length&&!a&&bt(),t.render(e,n,r||a&&e<0&&(t._initted||t._startAt)),it.length&&!a&&bt()},At=function(t){var e=parseFloat(t);return(e||0===e)&&(t+"").match(V).length<2?e:I(t)?t.trim():t},xt=function(t){return t},_t=function(t,e){for(var n in e)n in t||(t[n]=e[n]);return t},St=function(t,e){for(var n in e)t[n]=e[n];return t},Lt=function t(e,n){for(var r in n)"__proto__"!==r&&"constructor"!==r&&"prototype"!==r&&(e[r]=T(n[r])?t(e[r]||(e[r]={}),n[r]):n[r]);return e},Nt=function(t,e){var n,r={};for(n in t)n in e||(r[n]=t[n]);return r},kt=function(t){var e,n=t.parent||u,r=t.keyframes?(e=D(t.keyframes),function(t,n){for(var r in n)r in t||"duration"===r&&e||"ease"===r||(t[r]=n[r])}):_t;if(E(t.inherit))for(;n;)r(t,n.vars.defaults),n=n.parent||n._dp;return t},Ct=function(t,e,n,r,i){void 0===n&&(n="_first"),void 0===r&&(r="_last");var o,a=t[r];if(i)for(o=e[i];a&&a[i]>o;)a=a._prev;return a?(e._next=a._next,a._next=e):(e._next=t[n],t[n]=e),e._next?e._next._prev=e:t[r]=e,e._prev=a,e.parent=e._dp=t,e},Pt=function(t,e,n,r){void 0===n&&(n="_first"),void 0===r&&(r="_last");var i=e._prev,o=e._next;i?i._next=o:t[n]===e&&(t[n]=o),o?o._prev=i:t[r]===e&&(t[r]=i),e._next=e._prev=e.parent=null},It=function(t,e){t.parent&&(!e||t.parent.autoRemoveChildren)&&t.parent.remove&&t.parent.remove(t),t._act=0},Mt=function(t,e){if(t&&(!e||e._end>t._dur||e._start<0))for(var n=t;n;)n._dirty=1,n=n.parent;return t},Bt=function(t,e,n,r){return t._startAt&&(a?t._startAt.revert(et):t.vars.immediateRender&&!t.vars.autoRevert||t._startAt.render(e,!0,r))},Ft=function t(e){return!e||e._ts&&t(e.parent)},Tt=function(t){return t._repeat?Et(t._tTime,t=t.duration()+t._rDelay)*t:0},Et=function(t,e){var n=Math.floor(t/=e);return t&&n===t?n-1:n},Ot=function(t,e){return(t-e._start)*e._ts+(e._ts>=0?0:e._dirty?e.totalDuration():e._tDur)},jt=function(t){return t._end=mt(t._start+(t._tDur/Math.abs(t._ts||t._rts||_)||0))},Rt=function(t,e){var n=t._dp;return n&&n.smoothChildTiming&&t._ts&&(t._start=mt(n._time-(t._ts>0?e/t._ts:((t._dirty?t.totalDuration():t._tDur)-e)/-t._ts)),jt(t),n._dirty||Mt(n,t)),t},Dt=function(t,e){var n;if((e._time||!e._dur&&e._initted||e._start<t._time&&(e._dur||!e.add))&&(n=Ot(t.rawTime(),e),(!e._dur||$t(0,e.totalDuration(),n)-e._tTime>_)&&e.render(n,!0)),Mt(t,e)._dp&&t._initted&&t._time>=t._dur&&t._ts){if(t._dur<t.duration())for(n=t;n._dp;)n.rawTime()>=0&&n.totalTime(n._tTime),n=n._dp;t._zTime=-1e-8}},qt=function(t,e,n,r){return e.parent&&It(e),e._start=mt((B(n)?n:n||t!==u?Xt(t,n,e):t._time)+e._delay),e._end=mt(e._start+(e.totalDuration()/Math.abs(e.timeScale())||0)),Ct(t,e,"_first","_last",t._sort?"_start":0),Wt(e)||(t._recent=e),r||Dt(t,e),t._ts<0&&Rt(t,t._tTime),t},zt=function(t,e){return(Y.ScrollTrigger||K("scrollTrigger",e))&&Y.ScrollTrigger.create(e,t)},Ut=function(t,e,n,r,i){return Ge(t,e,i),t._initted?!n&&t._pt&&!a&&(t._dur&&!1!==t.vars.lazy||!t._dur&&t.vars.lazy)&&d!==Le.frame?(it.push(t),t._lazy=[i,r],1):void 0:1},Ht=function t(e){var n=e.parent;return n&&n._ts&&n._initted&&!n._lock&&(n.rawTime()<0||t(n))},Wt=function(t){var e=t.data;return"isFromStart"===e||"isStart"===e},Vt=function(t,e,n,r){var i=t._repeat,o=mt(e)||0,a=t._tTime/t._tDur;return a&&!r&&(t._time*=o/t._dur),t._dur=o,t._tDur=i?i<0?1e10:mt(o*(i+1)+t._rDelay*i):o,a>0&&!r&&Rt(t,t._tTime=t._tDur*a),t.parent&&jt(t),n||Mt(t.parent,t),t},Gt=function(t){return t instanceof qe?Mt(t):Vt(t,t._dur)},Yt={_start:0,endTime:Q,totalDuration:Q},Xt=function t(e,n,r){var i,o,a,s=e.labels,u=e._recent||Yt,l=e.duration()>=x?u.endTime(!1):e._dur;return I(n)&&(isNaN(n)||n in s)?(o=n.charAt(0),a="%"===n.substr(-1),i=n.indexOf("="),"<"===o||">"===o?(i>=0&&(n=n.replace(/=/,"")),("<"===o?u._start:u.endTime(u._repeat>=0))+(parseFloat(n.substr(1))||0)*(a?(i<0?u:r).totalDuration()/100:1)):i<0?(n in s||(s[n]=l),s[n]):(o=parseFloat(n.charAt(i-1)+n.substr(i+1)),a&&r&&(o=o/100*(D(r)?r[0]:r).totalDuration()),i>1?t(e,n.substr(0,i-1),r)+o:l+o)):null==n?l:+n},Jt=function(t,e,n){var r,i,o=B(e[1]),a=(o?2:1)+(t<2?0:1),s=e[a];if(o&&(s.duration=e[1]),s.parent=n,t){for(r=s,i=n;i&&!("immediateRender"in r);)r=i.vars.defaults||{},i=E(i.vars.inherit)&&i.parent;s.immediateRender=E(r.immediateRender),t<2?s.runBackwards=1:s.startAt=e[a-1]}return new $e(e[0],s,e[a+1])},Kt=function(t,e){return t||0===t?e(t):e},$t=function(t,e,n){return n<t?t:n>e?e:n},Zt=function(t,e){return I(t)&&(e=G.exec(t))?e[1]:""},Qt=[].slice,te=function(t,e){return t&&T(t)&&"length"in t&&(!e&&!t.length||t.length-1 in t&&T(t[0]))&&!t.nodeType&&t!==l},ee=function(t,e,n){return s&&!e&&s.selector?s.selector(t):!I(t)||n||!c&&Ne()?D(t)?function(t,e,n){return void 0===n&&(n=[]),t.forEach((function(t){var r;return I(t)&&!e||te(t,1)?(r=n).push.apply(r,ee(t)):n.push(t)}))||n}(t,n):te(t)?Qt.call(t,0):t?[t]:[]:Qt.call((e||h).querySelectorAll(t),0)},ne=function(t){return t=ee(t)[0]||$("Invalid scope")||{},function(e){var n=t.current||t.nativeElement||t;return ee(e,n.querySelectorAll?n:n===t?$("Invalid scope")||h.createElement("div"):t)}},re=function(t){return t.sort((function(){return.5-Math.random()}))},ie=function(t){if(M(t))return t;var e=T(t)?t:{each:t},n=Fe(e.ease),r=e.from||0,i=parseFloat(e.base)||0,o={},a=r>0&&r<1,s=isNaN(r)||a,u=e.axis,l=r,c=r;return I(r)?l=c={center:.5,edges:.5,end:1}[r]||0:!a&&s&&(l=r[0],c=r[1]),function(t,a,h){var f,d,p,g,m,v,y,b,w,A=(h||e).length,_=o[A];if(!_){if(!(w="auto"===e.grid?0:(e.grid||[1,x])[1])){for(y=-x;y<(y=h[w++].getBoundingClientRect().left)&&w<A;);w--}for(_=o[A]=[],f=s?Math.min(w,A)*l-.5:r%w,d=w===x?0:s?A*c/w-.5:r/w|0,y=0,b=x,v=0;v<A;v++)p=v%w-f,g=d-(v/w|0),_[v]=m=u?Math.abs("y"===u?g:p):k(p*p+g*g),m>y&&(y=m),m<b&&(b=m);"random"===r&&re(_),_.max=y-b,_.min=b,_.v=A=(parseFloat(e.amount)||parseFloat(e.each)*(w>A?A-1:u?"y"===u?A/w:w:Math.max(w,A/w))||0)*("edges"===r?-1:1),_.b=A<0?i-A:i,_.u=Zt(e.amount||e.each)||0,n=n&&A<0?Me(n):n}return A=(_[t]-_.min)/_.max||0,mt(_.b+(n?n(A):A)*_.v)+_.u}},oe=function(t){var e=Math.pow(10,((t+"").split(".")[1]||"").length);return function(n){var r=mt(Math.round(parseFloat(n)/t)*t*e);return(r-r%1)/e+(B(n)?0:Zt(n))}},ae=function(t,e){var n,r,i=D(t);return!i&&T(t)&&(n=i=t.radius||x,t.values?(t=ee(t.values),(r=!B(t[0]))&&(n*=n)):t=oe(t.increment)),Kt(e,i?M(t)?function(e){return r=t(e),Math.abs(r-e)<=n?r:e}:function(e){for(var i,o,a=parseFloat(r?e.x:e),s=parseFloat(r?e.y:0),u=x,l=0,c=t.length;c--;)(i=r?(i=t[c].x-a)*i+(o=t[c].y-s)*o:Math.abs(t[c]-a))<u&&(u=i,l=c);return l=!n||u<=n?t[l]:e,r||l===e||B(e)?l:l+Zt(e)}:oe(t))},se=function(t,e,n,r){return Kt(D(t)?!e:!0===n?!!(n=0):!r,(function(){return D(t)?t[~~(Math.random()*t.length)]:(n=n||1e-5)&&(r=n<1?Math.pow(10,(n+"").length-2):1)&&Math.floor(Math.round((t-n/2+Math.random()*(e-t+.99*n))/n)*n*r)/r}))},ue=function(t,e,n){return Kt(n,(function(n){return t[~~e(n)]}))},le=function(t){for(var e,n,r,i,o=0,a="";~(e=t.indexOf("random(",o));)r=t.indexOf(")",e),i="["===t.charAt(e+7),n=t.substr(e+7,r-e-7).match(i?V:q),a+=t.substr(o,e-o)+se(i?n:+n[0],i?0:+n[1],+n[2]||1e-5),o=r+1;return a+t.substr(o,t.length-o)},ce=function(t,e,n,r,i){var o=e-t,a=r-n;return Kt(i,(function(e){return n+((e-t)/o*a||0)}))},he=function(t,e,n){var r,i,o,a=t.labels,s=x;for(r in a)(i=a[r]-e)<0==!!n&&i&&s>(i=Math.abs(i))&&(o=r,s=i);return o},fe=function(t,e,n){var r,i,o,a=t.vars,u=a[e],l=s,c=t._ctx;if(u)return r=a[e+"Params"],i=a.callbackScope||t,n&&it.length&&bt(),c&&(s=c),o=r?u.apply(i,r):u.call(i),s=l,o},de=function(t){return It(t),t.scrollTrigger&&t.scrollTrigger.kill(!!a),t.progress()<1&&fe(t,"onInterrupt"),t},pe=[],ge=function(t){if(O()&&t){var e=(t=!t.name&&t.default||t).name,n=M(t),r=e&&!n&&t.init?function(){this._props=[]}:t,i={init:Q,render:sn,add:We,kill:ln,modifier:un,rawVars:0},o={targetTest:0,get:0,getSetter:nn,aliases:{},register:0};if(Ne(),t!==r){if(at[e])return;_t(r,_t(Nt(t,i),o)),St(r.prototype,St(i,Nt(t,o))),at[r.prop=e]=r,t.targetTest&&(lt.push(r),rt[e]=1),e=("css"===e?"CSS":e.charAt(0).toUpperCase()+e.substr(1))+"Plugin"}Z(e,r),t.register&&t.register(Ln,r,fn)}else t&&pe.push(t)},me=255,ve={aqua:[0,me,me],lime:[0,me,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,me],navy:[0,0,128],white:[me,me,me],olive:[128,128,0],yellow:[me,me,0],orange:[me,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[me,0,0],pink:[me,192,203],cyan:[0,me,me],transparent:[me,me,me,0]},ye=function(t,e,n){return(6*(t+=t<0?1:t>1?-1:0)<1?e+(n-e)*t*6:t<.5?n:3*t<2?e+(n-e)*(2/3-t)*6:e)*me+.5|0},be=function(t,e,n){var r,i,o,a,s,u,l,c,h,f,d=t?B(t)?[t>>16,t>>8&me,t&me]:0:ve.black;if(!d){if(","===t.substr(-1)&&(t=t.substr(0,t.length-1)),ve[t])d=ve[t];else if("#"===t.charAt(0)){if(t.length<6&&(r=t.charAt(1),i=t.charAt(2),o=t.charAt(3),t="#"+r+r+i+i+o+o+(5===t.length?t.charAt(4)+t.charAt(4):"")),9===t.length)return[(d=parseInt(t.substr(1,6),16))>>16,d>>8&me,d&me,parseInt(t.substr(7),16)/255];d=[(t=parseInt(t.substr(1),16))>>16,t>>8&me,t&me]}else if("hsl"===t.substr(0,3))if(d=f=t.match(q),e){if(~t.indexOf("="))return d=t.match(z),n&&d.length<4&&(d[3]=1),d}else a=+d[0]%360/360,s=+d[1]/100,r=2*(u=+d[2]/100)-(i=u<=.5?u*(s+1):u+s-u*s),d.length>3&&(d[3]*=1),d[0]=ye(a+1/3,r,i),d[1]=ye(a,r,i),d[2]=ye(a-1/3,r,i);else d=t.match(q)||ve.transparent;d=d.map(Number)}return e&&!f&&(r=d[0]/me,i=d[1]/me,o=d[2]/me,u=((l=Math.max(r,i,o))+(c=Math.min(r,i,o)))/2,l===c?a=s=0:(h=l-c,s=u>.5?h/(2-l-c):h/(l+c),a=l===r?(i-o)/h+(i<o?6:0):l===i?(o-r)/h+2:(r-i)/h+4,a*=60),d[0]=~~(a+.5),d[1]=~~(100*s+.5),d[2]=~~(100*u+.5)),n&&d.length<4&&(d[3]=1),d},we=function(t){var e=[],n=[],r=-1;return t.split(xe).forEach((function(t){var i=t.match(U)||[];e.push.apply(e,i),n.push(r+=i.length+1)})),e.c=n,e},Ae=function(t,e,n){var r,i,o,a,s="",u=(t+s).match(xe),l=e?"hsla(":"rgba(",c=0;if(!u)return t;if(u=u.map((function(t){return(t=be(t,e,1))&&l+(e?t[0]+","+t[1]+"%,"+t[2]+"%,"+t[3]:t.join(","))+")"})),n&&(o=we(t),(r=n.c).join(s)!==o.c.join(s)))for(a=(i=t.replace(xe,"1").split(U)).length-1;c<a;c++)s+=i[c]+(~r.indexOf(c)?u.shift()||l+"0,0,0,0)":(o.length?o:u.length?u:n).shift());if(!i)for(a=(i=t.split(xe)).length-1;c<a;c++)s+=i[c]+u[c];return s+i[a]},xe=function(){var t,e="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b";for(t in ve)e+="|"+t+"\\b";return new RegExp(e+")","gi")}(),_e=/hsl[a]?\(/,Se=function(t){var e,n=t.join(" ");if(xe.lastIndex=0,xe.test(n))return e=_e.test(n),t[1]=Ae(t[1],e),t[0]=Ae(t[0],e,we(t[1])),!0},Le=function(){var t,e,n,r,i,o,a=Date.now,s=500,u=33,d=a(),p=d,m=1e3/240,v=m,y=[],b=function n(l){var c,h,f,g,b=a()-p,w=!0===l;if(b>s&&(d+=b-u),((c=(f=(p+=b)-d)-v)>0||w)&&(g=++r.frame,i=f-1e3*r.time,r.time=f/=1e3,v+=c+(c>=m?4:m-c),h=1),w||(t=e(n)),h)for(o=0;o<y.length;o++)y[o](f,i,g,l)};return r={time:0,frame:0,tick:function(){b(!0)},deltaRatio:function(t){return i/(1e3/(t||60))},wake:function(){f&&(!c&&O()&&(l=c=window,h=l.document||{},Y.gsap=Ln,(l.gsapVersions||(l.gsapVersions=[])).push(Ln.version),J(X||l.GreenSockGlobals||!l.gsap&&l||{}),n=l.requestAnimationFrame,pe.forEach(ge)),t&&r.sleep(),e=n||function(t){return setTimeout(t,v-1e3*r.time+1|0)},g=1,b(2))},sleep:function(){(n?l.cancelAnimationFrame:clearTimeout)(t),g=0,e=Q},lagSmoothing:function(t,e){s=t||1/0,u=Math.min(e||33,s)},fps:function(t){m=1e3/(t||240),v=1e3*r.time+m},add:function(t,e,n){var i=e?function(e,n,o,a){t(e,n,o,a),r.remove(i)}:t;return r.remove(t),y[n?"unshift":"push"](i),Ne(),i},remove:function(t,e){~(e=y.indexOf(t))&&y.splice(e,1)&&o>=e&&o--},_listeners:y}}(),Ne=function(){return!g&&Le.wake()},ke={},Ce=/^[\d.\-M][\d.\-,\s]/,Pe=/["']/g,Ie=function(t){for(var e,n,r,i={},o=t.substr(1,t.length-3).split(":"),a=o[0],s=1,u=o.length;s<u;s++)n=o[s],e=s!==u-1?n.lastIndexOf(","):n.length,r=n.substr(0,e),i[a]=isNaN(r)?r.replace(Pe,"").trim():+r,a=n.substr(e+1).trim();return i},Me=function(t){return function(e){return 1-t(1-e)}},Be=function t(e,n){for(var r,i=e._first;i;)i instanceof qe?t(i,n):!i.vars.yoyoEase||i._yoyo&&i._repeat||i._yoyo===n||(i.timeline?t(i.timeline,n):(r=i._ease,i._ease=i._yEase,i._yEase=r,i._yoyo=n)),i=i._next},Fe=function(t,e){return t&&(M(t)?t:ke[t]||function(t){var e=(t+"").split("("),n=ke[e[0]];return n&&e.length>1&&n.config?n.config.apply(null,~t.indexOf("{")?[Ie(e[1])]:function(t){var e=t.indexOf("(")+1,n=t.indexOf(")"),r=t.indexOf("(",e);return t.substring(e,~r&&r<n?t.indexOf(")",n+1):n)}(t).split(",").map(At)):ke._CE&&Ce.test(t)?ke._CE("",t):n}(t))||e},Te=function(t,e,n,r){void 0===n&&(n=function(t){return 1-e(1-t)}),void 0===r&&(r=function(t){return t<.5?e(2*t)/2:1-e(2*(1-t))/2});var i,o={easeIn:e,easeOut:n,easeInOut:r};return pt(t,(function(t){for(var e in ke[t]=Y[t]=o,ke[i=t.toLowerCase()]=n,o)ke[i+("easeIn"===e?".in":"easeOut"===e?".out":".inOut")]=ke[t+"."+e]=o[e]})),o},Ee=function(t){return function(e){return e<.5?(1-t(1-2*e))/2:.5+t(2*(e-.5))/2}},Oe=function t(e,n,r){var i=n>=1?n:1,o=(r||(e?.3:.45))/(n<1?n:1),a=o/S*(Math.asin(1/i)||0),s=function(t){return 1===t?1:i*Math.pow(2,-10*t)*P((t-a)*o)+1},u="out"===e?s:"in"===e?function(t){return 1-s(1-t)}:Ee(s);return o=S/o,u.config=function(n,r){return t(e,n,r)},u},je=function t(e,n){void 0===n&&(n=1.70158);var r=function(t){return t?--t*t*((n+1)*t+n)+1:0},i="out"===e?r:"in"===e?function(t){return 1-r(1-t)}:Ee(r);return i.config=function(n){return t(e,n)},i};pt("Linear,Quad,Cubic,Quart,Quint,Strong",(function(t,e){var n=e<5?e+1:e;Te(t+",Power"+(n-1),e?function(t){return Math.pow(t,n)}:function(t){return t},(function(t){return 1-Math.pow(1-t,n)}),(function(t){return t<.5?Math.pow(2*t,n)/2:1-Math.pow(2*(1-t),n)/2}))})),ke.Linear.easeNone=ke.none=ke.Linear.easeIn,Te("Elastic",Oe("in"),Oe("out"),Oe()),m=7.5625,y=1/(v=2.75),Te("Bounce",(function(t){return 1-b(1-t)}),b=function(t){return t<y?m*t*t:t<.7272727272727273?m*Math.pow(t-1.5/v,2)+.75:t<.9090909090909092?m*(t-=2.25/v)*t+.9375:m*Math.pow(t-2.625/v,2)+.984375}),Te("Expo",(function(t){return t?Math.pow(2,10*(t-1)):0})),Te("Circ",(function(t){return-(k(1-t*t)-1)})),Te("Sine",(function(t){return 1===t?1:1-C(t*L)})),Te("Back",je("in"),je("out"),je()),ke.SteppedEase=ke.steps=Y.SteppedEase={config:function(t,e){void 0===t&&(t=1);var n=1/t,r=t+(e?0:1),i=e?1:0;return function(t){return((r*$t(0,.99999999,t)|0)+i)*n}}},A.ease=ke["quad.out"],pt("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",(function(t){return ct+=t+","+t+"Params,"}));var Re=function(t,e){this.id=N++,t._gsap=this,this.target=t,this.harness=e,this.get=e?e.get:dt,this.set=e?e.getSetter:nn},De=function(){function t(t){this.vars=t,this._delay=+t.delay||0,(this._repeat=t.repeat===1/0?-2:t.repeat||0)&&(this._rDelay=t.repeatDelay||0,this._yoyo=!!t.yoyo||!!t.yoyoEase),this._ts=1,Vt(this,+t.duration,1,1),this.data=t.data,s&&(this._ctx=s,s.data.push(this)),g||Le.wake()}var e=t.prototype;return e.delay=function(t){return t||0===t?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+t-this._delay),this._delay=t,this):this._delay},e.duration=function(t){return arguments.length?this.totalDuration(this._repeat>0?t+(t+this._rDelay)*this._repeat:t):this.totalDuration()&&this._dur},e.totalDuration=function(t){return arguments.length?(this._dirty=0,Vt(this,this._repeat<0?t:(t-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},e.totalTime=function(t,e){if(Ne(),!arguments.length)return this._tTime;var n=this._dp;if(n&&n.smoothChildTiming&&this._ts){for(Rt(this,t),!n._dp||n.parent||Dt(n,this);n&&n.parent;)n.parent._time!==n._start+(n._ts>=0?n._tTime/n._ts:(n.totalDuration()-n._tTime)/-n._ts)&&n.totalTime(n._tTime,!0),n=n.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&t<this._tDur||this._ts<0&&t>0||!this._tDur&&!t)&&qt(this._dp,this,this._start-this._delay)}return(this._tTime!==t||!this._dur&&!e||this._initted&&Math.abs(this._zTime)===_||!t&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=t),wt(this,t,e)),this},e.time=function(t,e){return arguments.length?this.totalTime(Math.min(this.totalDuration(),t+Tt(this))%(this._dur+this._rDelay)||(t?this._dur:0),e):this._time},e.totalProgress=function(t,e){return arguments.length?this.totalTime(this.totalDuration()*t,e):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.ratio},e.progress=function(t,e){return arguments.length?this.totalTime(this.duration()*(!this._yoyo||1&this.iteration()?t:1-t)+Tt(this),e):this.duration()?Math.min(1,this._time/this._dur):this.ratio},e.iteration=function(t,e){var n=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(t-1)*n,e):this._repeat?Et(this._tTime,n)+1:1},e.timeScale=function(t){if(!arguments.length)return-1e-8===this._rts?0:this._rts;if(this._rts===t)return this;var e=this.parent&&this._ts?Ot(this.parent._time,this):this._tTime;return this._rts=+t||0,this._ts=this._ps||-1e-8===t?0:this._rts,this.totalTime($t(-Math.abs(this._delay),this._tDur,e),!0),jt(this),function(t){for(var e=t.parent;e&&e.parent;)e._dirty=1,e.totalDuration(),e=e.parent;return t}(this)},e.paused=function(t){return arguments.length?(this._ps!==t&&(this._ps=t,t?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(Ne(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,1===this.progress()&&Math.abs(this._zTime)!==_&&(this._tTime-=_)))),this):this._ps},e.startTime=function(t){if(arguments.length){this._start=t;var e=this.parent||this._dp;return e&&(e._sort||!this.parent)&&qt(e,this,t-this._delay),this}return this._start},e.endTime=function(t){return this._start+(E(t)?this.totalDuration():this.duration())/Math.abs(this._ts||1)},e.rawTime=function(t){var e=this.parent||this._dp;return e?t&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?Ot(e.rawTime(t),this):this._tTime:this._tTime},e.revert=function(t){void 0===t&&(t=nt);var e=a;return a=t,(this._initted||this._startAt)&&(this.timeline&&this.timeline.revert(t),this.totalTime(-.01,t.suppressEvents)),"nested"!==this.data&&!1!==t.kill&&this.kill(),a=e,this},e.globalTime=function(t){for(var e=this,n=arguments.length?t:e.rawTime();e;)n=e._start+n/(e._ts||1),e=e._dp;return!this.parent&&this._sat?this._sat.vars.immediateRender?-1/0:this._sat.globalTime(t):n},e.repeat=function(t){return arguments.length?(this._repeat=t===1/0?-2:t,Gt(this)):-2===this._repeat?1/0:this._repeat},e.repeatDelay=function(t){if(arguments.length){var e=this._time;return this._rDelay=t,Gt(this),e?this.time(e):this}return this._rDelay},e.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},e.seek=function(t,e){return this.totalTime(Xt(this,t),E(e))},e.restart=function(t,e){return this.play().totalTime(t?-this._delay:0,E(e))},e.play=function(t,e){return null!=t&&this.seek(t,e),this.reversed(!1).paused(!1)},e.reverse=function(t,e){return null!=t&&this.seek(t||this.totalDuration(),e),this.reversed(!0).paused(!1)},e.pause=function(t,e){return null!=t&&this.seek(t,e),this.paused(!0)},e.resume=function(){return this.paused(!1)},e.reversed=function(t){return arguments.length?(!!t!==this.reversed()&&this.timeScale(-this._rts||(t?-1e-8:0)),this):this._rts<0},e.invalidate=function(){return this._initted=this._act=0,this._zTime=-1e-8,this},e.isActive=function(){var t,e=this.parent||this._dp,n=this._start;return!(e&&!(this._ts&&this._initted&&e.isActive()&&(t=e.rawTime(!0))>=n&&t<this.endTime(!0)-_))},e.eventCallback=function(t,e,n){var r=this.vars;return arguments.length>1?(e?(r[t]=e,n&&(r[t+"Params"]=n),"onUpdate"===t&&(this._onUpdate=e)):delete r[t],this):r[t]},e.then=function(t){var e=this;return new Promise((function(n){var r=M(t)?t:xt,i=function(){var t=e.then;e.then=null,M(r)&&(r=r(e))&&(r.then||r===e)&&(e.then=t),n(r),e.then=t};e._initted&&1===e.totalProgress()&&e._ts>=0||!e._tTime&&e._ts<0?i():e._prom=i}))},e.kill=function(){de(this)},t}();_t(De.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-1e-8,_prom:0,_ps:!1,_rts:1});var qe=function(t){function e(e,n){var i;return void 0===e&&(e={}),(i=t.call(this,e)||this).labels={},i.smoothChildTiming=!!e.smoothChildTiming,i.autoRemoveChildren=!!e.autoRemoveChildren,i._sort=E(e.sortChildren),u&&qt(e.parent||u,r(i),n),e.reversed&&i.reverse(),e.paused&&i.paused(!0),e.scrollTrigger&&zt(r(i),e.scrollTrigger),i}i(e,t);var n=e.prototype;return n.to=function(t,e,n){return Jt(0,arguments,this),this},n.from=function(t,e,n){return Jt(1,arguments,this),this},n.fromTo=function(t,e,n,r){return Jt(2,arguments,this),this},n.set=function(t,e,n){return e.duration=0,e.parent=this,kt(e).repeatDelay||(e.repeat=0),e.immediateRender=!!e.immediateRender,new $e(t,e,Xt(this,n),1),this},n.call=function(t,e,n){return qt(this,$e.delayedCall(0,t,e),n)},n.staggerTo=function(t,e,n,r,i,o,a){return n.duration=e,n.stagger=n.stagger||r,n.onComplete=o,n.onCompleteParams=a,n.parent=this,new $e(t,n,Xt(this,i)),this},n.staggerFrom=function(t,e,n,r,i,o,a){return n.runBackwards=1,kt(n).immediateRender=E(n.immediateRender),this.staggerTo(t,e,n,r,i,o,a)},n.staggerFromTo=function(t,e,n,r,i,o,a,s){return r.startAt=n,kt(r).immediateRender=E(r.immediateRender),this.staggerTo(t,e,r,i,o,a,s)},n.render=function(t,e,n){var r,i,o,s,l,c,h,f,d,p,g,m,v=this._time,y=this._dirty?this.totalDuration():this._tDur,b=this._dur,w=t<=0?0:mt(t),A=this._zTime<0!=t<0&&(this._initted||!b);if(this!==u&&w>y&&t>=0&&(w=y),w!==this._tTime||n||A){if(v!==this._time&&b&&(w+=this._time-v,t+=this._time-v),r=w,d=this._start,c=!(f=this._ts),A&&(b||(v=this._zTime),(t||!e)&&(this._zTime=t)),this._repeat){if(g=this._yoyo,l=b+this._rDelay,this._repeat<-1&&t<0)return this.totalTime(100*l+t,e,n);if(r=mt(w%l),w===y?(s=this._repeat,r=b):((s=~~(w/l))&&s===w/l&&(r=b,s--),r>b&&(r=b)),p=Et(this._tTime,l),!v&&this._tTime&&p!==s&&this._tTime-p*l-this._dur<=0&&(p=s),g&&1&s&&(r=b-r,m=1),s!==p&&!this._lock){var x=g&&1&p,S=x===(g&&1&s);if(s<p&&(x=!x),v=x?0:w%b?b:w,this._lock=1,this.render(v||(m?0:mt(s*l)),e,!b)._lock=0,this._tTime=w,!e&&this.parent&&fe(this,"onRepeat"),this.vars.repeatRefresh&&!m&&(this.invalidate()._lock=1),v&&v!==this._time||c!==!this._ts||this.vars.onRepeat&&!this.parent&&!this._act)return this;if(b=this._dur,y=this._tDur,S&&(this._lock=2,v=x?b:-1e-4,this.render(v,!0),this.vars.repeatRefresh&&!m&&this.invalidate()),this._lock=0,!this._ts&&!c)return this;Be(this,m)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(h=function(t,e,n){var r;if(n>e)for(r=t._first;r&&r._start<=n;){if("isPause"===r.data&&r._start>e)return r;r=r._next}else for(r=t._last;r&&r._start>=n;){if("isPause"===r.data&&r._start<e)return r;r=r._prev}}(this,mt(v),mt(r)),h&&(w-=r-(r=h._start))),this._tTime=w,this._time=r,this._act=!f,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=t,v=0),!v&&r&&!e&&!s&&(fe(this,"onStart"),this._tTime!==w))return this;if(r>=v&&t>=0)for(i=this._first;i;){if(o=i._next,(i._act||r>=i._start)&&i._ts&&h!==i){if(i.parent!==this)return this.render(t,e,n);if(i.render(i._ts>0?(r-i._start)*i._ts:(i._dirty?i.totalDuration():i._tDur)+(r-i._start)*i._ts,e,n),r!==this._time||!this._ts&&!c){h=0,o&&(w+=this._zTime=-1e-8);break}}i=o}else{i=this._last;for(var L=t<0?t:r;i;){if(o=i._prev,(i._act||L<=i._end)&&i._ts&&h!==i){if(i.parent!==this)return this.render(t,e,n);if(i.render(i._ts>0?(L-i._start)*i._ts:(i._dirty?i.totalDuration():i._tDur)+(L-i._start)*i._ts,e,n||a&&(i._initted||i._startAt)),r!==this._time||!this._ts&&!c){h=0,o&&(w+=this._zTime=L?-1e-8:_);break}}i=o}}if(h&&!e&&(this.pause(),h.render(r>=v?0:-1e-8)._zTime=r>=v?1:-1,this._ts))return this._start=d,jt(this),this.render(t,e,n);this._onUpdate&&!e&&fe(this,"onUpdate",!0),(w===y&&this._tTime>=this.totalDuration()||!w&&v)&&(d!==this._start&&Math.abs(f)===Math.abs(this._ts)||this._lock||((t||!b)&&(w===y&&this._ts>0||!w&&this._ts<0)&&It(this,1),e||t<0&&!v||!w&&!v&&y||(fe(this,w===y&&t>=0?"onComplete":"onReverseComplete",!0),this._prom&&!(w<y&&this.timeScale()>0)&&this._prom())))}return this},n.add=function(t,e){var n=this;if(B(e)||(e=Xt(this,e,t)),!(t instanceof De)){if(D(t))return t.forEach((function(t){return n.add(t,e)})),this;if(I(t))return this.addLabel(t,e);if(!M(t))return this;t=$e.delayedCall(0,t)}return this!==t?qt(this,t,e):this},n.getChildren=function(t,e,n,r){void 0===t&&(t=!0),void 0===e&&(e=!0),void 0===n&&(n=!0),void 0===r&&(r=-x);for(var i=[],o=this._first;o;)o._start>=r&&(o instanceof $e?e&&i.push(o):(n&&i.push(o),t&&i.push.apply(i,o.getChildren(!0,e,n)))),o=o._next;return i},n.getById=function(t){for(var e=this.getChildren(1,1,1),n=e.length;n--;)if(e[n].vars.id===t)return e[n]},n.remove=function(t){return I(t)?this.removeLabel(t):M(t)?this.killTweensOf(t):(Pt(this,t),t===this._recent&&(this._recent=this._last),Mt(this))},n.totalTime=function(e,n){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=mt(Le.time-(this._ts>0?e/this._ts:(this.totalDuration()-e)/-this._ts))),t.prototype.totalTime.call(this,e,n),this._forcing=0,this):this._tTime},n.addLabel=function(t,e){return this.labels[t]=Xt(this,e),this},n.removeLabel=function(t){return delete this.labels[t],this},n.addPause=function(t,e,n){var r=$e.delayedCall(0,e||Q,n);return r.data="isPause",this._hasPause=1,qt(this,r,Xt(this,t))},n.removePause=function(t){var e=this._first;for(t=Xt(this,t);e;)e._start===t&&"isPause"===e.data&&It(e),e=e._next},n.killTweensOf=function(t,e,n){for(var r=this.getTweensOf(t,n),i=r.length;i--;)ze!==r[i]&&r[i].kill(t,e);return this},n.getTweensOf=function(t,e){for(var n,r=[],i=ee(t),o=this._first,a=B(e);o;)o instanceof $e?yt(o._targets,i)&&(a?(!ze||o._initted&&o._ts)&&o.globalTime(0)<=e&&o.globalTime(o.totalDuration())>e:!e||o.isActive())&&r.push(o):(n=o.getTweensOf(i,e)).length&&r.push.apply(r,n),o=o._next;return r},n.tweenTo=function(t,e){e=e||{};var n,r=this,i=Xt(r,t),o=e,a=o.startAt,s=o.onStart,u=o.onStartParams,l=o.immediateRender,c=$e.to(r,_t({ease:e.ease||"none",lazy:!1,immediateRender:!1,time:i,overwrite:"auto",duration:e.duration||Math.abs((i-(a&&"time"in a?a.time:r._time))/r.timeScale())||_,onStart:function(){if(r.pause(),!n){var t=e.duration||Math.abs((i-(a&&"time"in a?a.time:r._time))/r.timeScale());c._dur!==t&&Vt(c,t,0,1).render(c._time,!0,!0),n=1}s&&s.apply(c,u||[])}},e));return l?c.render(0):c},n.tweenFromTo=function(t,e,n){return this.tweenTo(e,_t({startAt:{time:Xt(this,t)}},n))},n.recent=function(){return this._recent},n.nextLabel=function(t){return void 0===t&&(t=this._time),he(this,Xt(this,t))},n.previousLabel=function(t){return void 0===t&&(t=this._time),he(this,Xt(this,t),1)},n.currentLabel=function(t){return arguments.length?this.seek(t,!0):this.previousLabel(this._time+_)},n.shiftChildren=function(t,e,n){void 0===n&&(n=0);for(var r,i=this._first,o=this.labels;i;)i._start>=n&&(i._start+=t,i._end+=t),i=i._next;if(e)for(r in o)o[r]>=n&&(o[r]+=t);return Mt(this)},n.invalidate=function(e){var n=this._first;for(this._lock=0;n;)n.invalidate(e),n=n._next;return t.prototype.invalidate.call(this,e)},n.clear=function(t){void 0===t&&(t=!0);for(var e,n=this._first;n;)e=n._next,this.remove(n),n=e;return this._dp&&(this._time=this._tTime=this._pTime=0),t&&(this.labels={}),Mt(this)},n.totalDuration=function(t){var e,n,r,i=0,o=this,a=o._last,s=x;if(arguments.length)return o.timeScale((o._repeat<0?o.duration():o.totalDuration())/(o.reversed()?-t:t));if(o._dirty){for(r=o.parent;a;)e=a._prev,a._dirty&&a.totalDuration(),(n=a._start)>s&&o._sort&&a._ts&&!o._lock?(o._lock=1,qt(o,a,n-a._delay,1)._lock=0):s=n,n<0&&a._ts&&(i-=n,(!r&&!o._dp||r&&r.smoothChildTiming)&&(o._start+=n/o._ts,o._time-=n,o._tTime-=n),o.shiftChildren(-n,!1,-Infinity),s=0),a._end>i&&a._ts&&(i=a._end),a=e;Vt(o,o===u&&o._time>i?o._time:i,1,1),o._dirty=0}return o._tDur},e.updateRoot=function(t){if(u._ts&&(wt(u,Ot(t,u)),d=Le.frame),Le.frame>=ut){ut+=w.autoSleep||120;var e=u._first;if((!e||!e._ts)&&w.autoSleep&&Le._listeners.length<2){for(;e&&!e._ts;)e=e._next;e||Le.sleep()}}},e}(De);_t(qe.prototype,{_lock:0,_hasPause:0,_forcing:0});var ze,Ue,He=function(t,e,n,r,i,o,a){var s,u,l,c,h,f,d,p,g=new fn(this._pt,t,e,0,1,an,null,i),m=0,v=0;for(g.b=n,g.e=r,n+="",(d=~(r+="").indexOf("random("))&&(r=le(r)),o&&(o(p=[n,r],t,e),n=p[0],r=p[1]),u=n.match(H)||[];s=H.exec(r);)c=s[0],h=r.substring(m,s.index),l?l=(l+1)%5:"rgba("===h.substr(-5)&&(l=1),c!==u[v++]&&(f=parseFloat(u[v-1])||0,g._pt={_next:g._pt,p:h||1===v?h:",",s:f,c:"="===c.charAt(1)?vt(f,c)-f:parseFloat(c)-f,m:l&&l<4?Math.round:0},m=H.lastIndex);return g.c=m<r.length?r.substring(m,r.length):"",g.fp=a,(W.test(r)||d)&&(g.e=0),this._pt=g,g},We=function(t,e,n,r,i,o,a,s,u,l){M(r)&&(r=r(i||0,t,o));var c,h=t[e],f="get"!==n?n:M(h)?u?t[e.indexOf("set")||!M(t["get"+e.substr(3)])?e:"get"+e.substr(3)](u):t[e]():h,d=M(h)?u?tn:Qe:Ze;if(I(r)&&(~r.indexOf("random(")&&(r=le(r)),"="===r.charAt(1)&&((c=vt(f,r)+(Zt(f)||0))||0===c)&&(r=c)),!l||f!==r||Ue)return isNaN(f*r)||""===r?(!h&&!(e in t)&&K(e,r),He.call(this,t,e,f,r,d,s||w.stringFilter,u)):(c=new fn(this._pt,t,e,+f||0,r-(f||0),"boolean"==typeof h?on:rn,0,d),u&&(c.fp=u),a&&c.modifier(a,this,t),this._pt=c)},Ve=function(t,e,n,r,i,o){var a,s,u,l;if(at[t]&&!1!==(a=new at[t]).init(i,a.rawVars?e[t]:function(t,e,n,r,i){if(M(t)&&(t=Xe(t,i,e,n,r)),!T(t)||t.style&&t.nodeType||D(t)||R(t))return I(t)?Xe(t,i,e,n,r):t;var o,a={};for(o in t)a[o]=Xe(t[o],i,e,n,r);return a}(e[t],r,i,o,n),n,r,o)&&(n._pt=s=new fn(n._pt,i,t,0,1,a.render,a,0,a.priority),n!==p))for(u=n._ptLookup[n._targets.indexOf(i)],l=a._props.length;l--;)u[a._props[l]]=s;return a},Ge=function t(e,n,r){var i,s,l,c,h,f,d,p,g,m,v,y,b,w=e.vars,S=w.ease,L=w.startAt,N=w.immediateRender,k=w.lazy,C=w.onUpdate,P=w.onUpdateParams,I=w.callbackScope,M=w.runBackwards,B=w.yoyoEase,F=w.keyframes,T=w.autoRevert,O=e._dur,j=e._startAt,R=e._targets,D=e.parent,q=D&&"nested"===D.data?D.vars.targets:R,z="auto"===e._overwrite&&!o,U=e.timeline;if(U&&(!F||!S)&&(S="none"),e._ease=Fe(S,A.ease),e._yEase=B?Me(Fe(!0===B?S:B,A.ease)):0,B&&e._yoyo&&!e._repeat&&(B=e._yEase,e._yEase=e._ease,e._ease=B),e._from=!U&&!!w.runBackwards,!U||F&&!w.stagger){if(y=(p=R[0]?ft(R[0]).harness:0)&&w[p.prop],i=Nt(w,rt),j&&(j._zTime<0&&j.progress(1),n<0&&M&&N&&!T?j.render(-1,!0):j.revert(M&&O?et:tt),j._lazy=0),L){if(It(e._startAt=$e.set(R,_t({data:"isStart",overwrite:!1,parent:D,immediateRender:!0,lazy:!j&&E(k),startAt:null,delay:0,onUpdate:C,onUpdateParams:P,callbackScope:I,stagger:0},L))),e._startAt._dp=0,e._startAt._sat=e,n<0&&(a||!N&&!T)&&e._startAt.revert(et),N&&O&&n<=0&&r<=0)return void(n&&(e._zTime=n))}else if(M&&O&&!j)if(n&&(N=!1),l=_t({overwrite:!1,data:"isFromStart",lazy:N&&!j&&E(k),immediateRender:N,stagger:0,parent:D},i),y&&(l[p.prop]=y),It(e._startAt=$e.set(R,l)),e._startAt._dp=0,e._startAt._sat=e,n<0&&(a?e._startAt.revert(et):e._startAt.render(-1,!0)),e._zTime=n,N){if(!n)return}else t(e._startAt,_,_);for(e._pt=e._ptCache=0,k=O&&E(k)||k&&!O,s=0;s<R.length;s++){if(d=(h=R[s])._gsap||ht(R)[s]._gsap,e._ptLookup[s]=m={},ot[d.id]&&it.length&&bt(),v=q===R?s:q.indexOf(h),p&&!1!==(g=new p).init(h,y||i,e,v,q)&&(e._pt=c=new fn(e._pt,h,g.name,0,1,g.render,g,0,g.priority),g._props.forEach((function(t){m[t]=c})),g.priority&&(f=1)),!p||y)for(l in i)at[l]&&(g=Ve(l,i,e,v,h,q))?g.priority&&(f=1):m[l]=c=We.call(e,h,l,"get",i[l],v,q,0,w.stringFilter);e._op&&e._op[s]&&e.kill(h,e._op[s]),z&&e._pt&&(ze=e,u.killTweensOf(h,m,e.globalTime(n)),b=!e.parent,ze=0),e._pt&&k&&(ot[d.id]=1)}f&&hn(e),e._onInit&&e._onInit(e)}e._onUpdate=C,e._initted=(!e._op||e._pt)&&!b,F&&n<=0&&U.render(x,!0,!0)},Ye=function(t,e,n,r){var i,o,a=e.ease||r||"power1.inOut";if(D(e))o=n[t]||(n[t]=[]),e.forEach((function(t,n){return o.push({t:n/(e.length-1)*100,v:t,e:a})}));else for(i in e)o=n[i]||(n[i]=[]),"ease"===i||o.push({t:parseFloat(t),v:e[i],e:a})},Xe=function(t,e,n,r,i){return M(t)?t.call(e,n,r,i):I(t)&&~t.indexOf("random(")?le(t):t},Je=ct+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",Ke={};pt(Je+",id,stagger,delay,duration,paused,scrollTrigger",(function(t){return Ke[t]=1}));var $e=function(t){function e(e,n,i,a){var s;"number"==typeof n&&(i.duration=n,n=i,i=null);var l,c,h,f,d,p,g,m,v=(s=t.call(this,a?n:kt(n))||this).vars,y=v.duration,b=v.delay,A=v.immediateRender,x=v.stagger,_=v.overwrite,S=v.keyframes,L=v.defaults,N=v.scrollTrigger,k=v.yoyoEase,C=n.parent||u,P=(D(e)||R(e)?B(e[0]):"length"in n)?[e]:ee(e);if(s._targets=P.length?ht(P):$("GSAP target "+e+" not found. https://greensock.com",!w.nullTargetWarn)||[],s._ptLookup=[],s._overwrite=_,S||x||j(y)||j(b)){if(n=s.vars,(l=s.timeline=new qe({data:"nested",defaults:L||{},targets:C&&"nested"===C.data?C.vars.targets:P})).kill(),l.parent=l._dp=r(s),l._start=0,x||j(y)||j(b)){if(f=P.length,g=x&&ie(x),T(x))for(d in x)~Je.indexOf(d)&&(m||(m={}),m[d]=x[d]);for(c=0;c<f;c++)(h=Nt(n,Ke)).stagger=0,k&&(h.yoyoEase=k),m&&St(h,m),p=P[c],h.duration=+Xe(y,r(s),c,p,P),h.delay=(+Xe(b,r(s),c,p,P)||0)-s._delay,!x&&1===f&&h.delay&&(s._delay=b=h.delay,s._start+=b,h.delay=0),l.to(p,h,g?g(c,p,P):0),l._ease=ke.none;l.duration()?y=b=0:s.timeline=0}else if(S){kt(_t(l.vars.defaults,{ease:"none"})),l._ease=Fe(S.ease||n.ease||"none");var I,M,F,O=0;if(D(S))S.forEach((function(t){return l.to(P,t,">")})),l.duration();else{for(d in h={},S)"ease"===d||"easeEach"===d||Ye(d,S[d],h,S.easeEach);for(d in h)for(I=h[d].sort((function(t,e){return t.t-e.t})),O=0,c=0;c<I.length;c++)(F={ease:(M=I[c]).e,duration:(M.t-(c?I[c-1].t:0))/100*y})[d]=M.v,l.to(P,F,O),O+=F.duration;l.duration()<y&&l.to({},{duration:y-l.duration()})}}y||s.duration(y=l.duration())}else s.timeline=0;return!0!==_||o||(ze=r(s),u.killTweensOf(P),ze=0),qt(C,r(s),i),n.reversed&&s.reverse(),n.paused&&s.paused(!0),(A||!y&&!S&&s._start===mt(C._time)&&E(A)&&Ft(r(s))&&"nested"!==C.data)&&(s._tTime=-1e-8,s.render(Math.max(0,-b)||0)),N&&zt(r(s),N),s}i(e,t);var n=e.prototype;return n.render=function(t,e,n){var r,i,o,s,u,l,c,h,f,d=this._time,p=this._tDur,g=this._dur,m=t<0,v=t>p-_&&!m?p:t<_?0:t;if(g){if(v!==this._tTime||!t||n||!this._initted&&this._tTime||this._startAt&&this._zTime<0!==m){if(r=v,h=this.timeline,this._repeat){if(s=g+this._rDelay,this._repeat<-1&&m)return this.totalTime(100*s+t,e,n);if(r=mt(v%s),v===p?(o=this._repeat,r=g):((o=~~(v/s))&&o===v/s&&(r=g,o--),r>g&&(r=g)),(l=this._yoyo&&1&o)&&(f=this._yEase,r=g-r),u=Et(this._tTime,s),r===d&&!n&&this._initted)return this._tTime=v,this;o!==u&&(h&&this._yEase&&Be(h,l),!this.vars.repeatRefresh||l||this._lock||(this._lock=n=1,this.render(mt(s*o),!0).invalidate()._lock=0))}if(!this._initted){if(Ut(this,m?t:r,n,e,v))return this._tTime=0,this;if(d!==this._time)return this;if(g!==this._dur)return this.render(t,e,n)}if(this._tTime=v,this._time=r,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=c=(f||this._ease)(r/g),this._from&&(this.ratio=c=1-c),r&&!d&&!e&&!o&&(fe(this,"onStart"),this._tTime!==v))return this;for(i=this._pt;i;)i.r(c,i.d),i=i._next;h&&h.render(t<0?t:!r&&l?-1e-8:h._dur*h._ease(r/this._dur),e,n)||this._startAt&&(this._zTime=t),this._onUpdate&&!e&&(m&&Bt(this,t,0,n),fe(this,"onUpdate")),this._repeat&&o!==u&&this.vars.onRepeat&&!e&&this.parent&&fe(this,"onRepeat"),v!==this._tDur&&v||this._tTime!==v||(m&&!this._onUpdate&&Bt(this,t,0,!0),(t||!g)&&(v===this._tDur&&this._ts>0||!v&&this._ts<0)&&It(this,1),e||m&&!d||!(v||d||l)||(fe(this,v===p?"onComplete":"onReverseComplete",!0),this._prom&&!(v<p&&this.timeScale()>0)&&this._prom()))}}else!function(t,e,n,r){var i,o,s,u=t.ratio,l=e<0||!e&&(!t._start&&Ht(t)&&(t._initted||!Wt(t))||(t._ts<0||t._dp._ts<0)&&!Wt(t))?0:1,c=t._rDelay,h=0;if(c&&t._repeat&&(h=$t(0,t._tDur,e),o=Et(h,c),t._yoyo&&1&o&&(l=1-l),o!==Et(t._tTime,c)&&(u=1-l,t.vars.repeatRefresh&&t._initted&&t.invalidate())),l!==u||a||r||t._zTime===_||!e&&t._zTime){if(!t._initted&&Ut(t,e,r,n,h))return;for(s=t._zTime,t._zTime=e||(n?_:0),n||(n=e&&!s),t.ratio=l,t._from&&(l=1-l),t._time=0,t._tTime=h,i=t._pt;i;)i.r(l,i.d),i=i._next;e<0&&Bt(t,e,0,!0),t._onUpdate&&!n&&fe(t,"onUpdate"),h&&t._repeat&&!n&&t.parent&&fe(t,"onRepeat"),(e>=t._tDur||e<0)&&t.ratio===l&&(l&&It(t,1),n||a||(fe(t,l?"onComplete":"onReverseComplete",!0),t._prom&&t._prom()))}else t._zTime||(t._zTime=e)}(this,t,e,n);return this},n.targets=function(){return this._targets},n.invalidate=function(e){return(!e||!this.vars.runBackwards)&&(this._startAt=0),this._pt=this._op=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(e),t.prototype.invalidate.call(this,e)},n.resetTo=function(t,e,n,r){g||Le.wake(),this._ts||this.play();var i=Math.min(this._dur,(this._dp._time-this._start)*this._ts);return this._initted||Ge(this,i),function(t,e,n,r,i,o,a){var s,u,l,c,h=(t._pt&&t._ptCache||(t._ptCache={}))[e];if(!h)for(h=t._ptCache[e]=[],l=t._ptLookup,c=t._targets.length;c--;){if((s=l[c][e])&&s.d&&s.d._pt)for(s=s.d._pt;s&&s.p!==e&&s.fp!==e;)s=s._next;if(!s)return Ue=1,t.vars[e]="+=0",Ge(t,a),Ue=0,1;h.push(s)}for(c=h.length;c--;)(s=(u=h[c])._pt||u).s=!r&&0!==r||i?s.s+(r||0)+o*s.c:r,s.c=n-s.s,u.e&&(u.e=gt(n)+Zt(u.e)),u.b&&(u.b=s.s+Zt(u.b))}(this,t,e,n,r,this._ease(i/this._dur),i)?this.resetTo(t,e,n,r):(Rt(this,0),this.parent||Ct(this._dp,this,"_first","_last",this._dp._sort?"_start":0),this.render(0))},n.kill=function(t,e){if(void 0===e&&(e="all"),!(t||e&&"all"!==e))return this._lazy=this._pt=0,this.parent?de(this):this;if(this.timeline){var n=this.timeline.totalDuration();return this.timeline.killTweensOf(t,e,ze&&!0!==ze.vars.overwrite)._first||de(this),this.parent&&n!==this.timeline.totalDuration()&&Vt(this,this._dur*this.timeline._tDur/n,0,1),this}var r,i,o,a,s,u,l,c=this._targets,h=t?ee(t):c,f=this._ptLookup,d=this._pt;if((!e||"all"===e)&&function(t,e){for(var n=t.length,r=n===e.length;r&&n--&&t[n]===e[n];);return n<0}(c,h))return"all"===e&&(this._pt=0),de(this);for(r=this._op=this._op||[],"all"!==e&&(I(e)&&(s={},pt(e,(function(t){return s[t]=1})),e=s),e=function(t,e){var n,r,i,o,a=t[0]?ft(t[0]).harness:0,s=a&&a.aliases;if(!s)return e;for(r in n=St({},e),s)if(r in n)for(i=(o=s[r].split(",")).length;i--;)n[o[i]]=n[r];return n}(c,e)),l=c.length;l--;)if(~h.indexOf(c[l]))for(s in i=f[l],"all"===e?(r[l]=e,a=i,o={}):(o=r[l]=r[l]||{},a=e),a)(u=i&&i[s])&&("kill"in u.d&&!0!==u.d.kill(s)||Pt(this,u,"_pt"),delete i[s]),"all"!==o&&(o[s]=1);return this._initted&&!this._pt&&d&&de(this),this},e.to=function(t,n){return new e(t,n,arguments[2])},e.from=function(t,e){return Jt(1,arguments)},e.delayedCall=function(t,n,r,i){return new e(n,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:t,onComplete:n,onReverseComplete:n,onCompleteParams:r,onReverseCompleteParams:r,callbackScope:i})},e.fromTo=function(t,e,n){return Jt(2,arguments)},e.set=function(t,n){return n.duration=0,n.repeatDelay||(n.repeat=0),new e(t,n)},e.killTweensOf=function(t,e,n){return u.killTweensOf(t,e,n)},e}(De);_t($e.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0}),pt("staggerTo,staggerFrom,staggerFromTo",(function(t){$e[t]=function(){var e=new qe,n=Qt.call(arguments,0);return n.splice("staggerFromTo"===t?5:4,0,0),e[t].apply(e,n)}}));var Ze=function(t,e,n){return t[e]=n},Qe=function(t,e,n){return t[e](n)},tn=function(t,e,n,r){return t[e](r.fp,n)},en=function(t,e,n){return t.setAttribute(e,n)},nn=function(t,e){return M(t[e])?Qe:F(t[e])&&t.setAttribute?en:Ze},rn=function(t,e){return e.set(e.t,e.p,Math.round(1e6*(e.s+e.c*t))/1e6,e)},on=function(t,e){return e.set(e.t,e.p,!!(e.s+e.c*t),e)},an=function(t,e){var n=e._pt,r="";if(!t&&e.b)r=e.b;else if(1===t&&e.e)r=e.e;else{for(;n;)r=n.p+(n.m?n.m(n.s+n.c*t):Math.round(1e4*(n.s+n.c*t))/1e4)+r,n=n._next;r+=e.c}e.set(e.t,e.p,r,e)},sn=function(t,e){for(var n=e._pt;n;)n.r(t,n.d),n=n._next},un=function(t,e,n,r){for(var i,o=this._pt;o;)i=o._next,o.p===r&&o.modifier(t,e,n),o=i},ln=function(t){for(var e,n,r=this._pt;r;)n=r._next,r.p===t&&!r.op||r.op===t?Pt(this,r,"_pt"):r.dep||(e=1),r=n;return!e},cn=function(t,e,n,r){r.mSet(t,e,r.m.call(r.tween,n,r.mt),r)},hn=function(t){for(var e,n,r,i,o=t._pt;o;){for(e=o._next,n=r;n&&n.pr>o.pr;)n=n._next;(o._prev=n?n._prev:i)?o._prev._next=o:r=o,(o._next=n)?n._prev=o:i=o,o=e}t._pt=r},fn=function(){function t(t,e,n,r,i,o,a,s,u){this.t=e,this.s=r,this.c=i,this.p=n,this.r=o||rn,this.d=a||this,this.set=s||Ze,this.pr=u||0,this._next=t,t&&(t._prev=this)}return t.prototype.modifier=function(t,e,n){this.mSet=this.mSet||this.set,this.set=cn,this.m=t,this.mt=n,this.tween=e},t}();pt(ct+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",(function(t){return rt[t]=1})),Y.TweenMax=Y.TweenLite=$e,Y.TimelineLite=Y.TimelineMax=qe,u=new qe({sortChildren:!1,defaults:A,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0}),w.stringFilter=Se;var dn=[],pn={},gn=[],mn=0,vn=0,yn=function(t){return(pn[t]||gn).map((function(t){return t()}))},bn=function(){var t=Date.now(),e=[];t-mn>2&&(yn("matchMediaInit"),dn.forEach((function(t){var n,r,i,o,a=t.queries,s=t.conditions;for(r in a)(n=l.matchMedia(a[r]).matches)&&(i=1),n!==s[r]&&(s[r]=n,o=1);o&&(t.revert(),i&&e.push(t))})),yn("matchMediaRevert"),e.forEach((function(t){return t.onMatch(t)})),mn=t,yn("matchMedia"))},wn=function(){function t(t,e){this.selector=e&&ne(e),this.data=[],this._r=[],this.isReverted=!1,this.id=vn++,t&&this.add(t)}var e=t.prototype;return e.add=function(t,e,n){M(t)&&(n=e,e=t,t=M);var r=this,i=function(){var t,i=s,o=r.selector;return i&&i!==r&&i.data.push(r),n&&(r.selector=ne(n)),s=r,t=e.apply(r,arguments),M(t)&&r._r.push(t),s=i,r.selector=o,r.isReverted=!1,t};return r.last=i,t===M?i(r):t?r[t]=i:i},e.ignore=function(t){var e=s;s=null,t(this),s=e},e.getTweens=function(){var e=[];return this.data.forEach((function(n){return n instanceof t?e.push.apply(e,n.getTweens()):n instanceof $e&&!(n.parent&&"nested"===n.parent.data)&&e.push(n)})),e},e.clear=function(){this._r.length=this.data.length=0},e.kill=function(t,e){var n=this;if(t){var r=this.getTweens();this.data.forEach((function(t){"isFlip"===t.data&&(t.revert(),t.getChildren(!0,!0,!1).forEach((function(t){return r.splice(r.indexOf(t),1)})))})),r.map((function(t){return{g:t.globalTime(0),t}})).sort((function(t,e){return e.g-t.g||-1/0})).forEach((function(e){return e.t.revert(t)})),this.data.forEach((function(e){return!(e instanceof $e)&&e.revert&&e.revert(t)})),this._r.forEach((function(e){return e(t,n)})),this.isReverted=!0}else this.data.forEach((function(t){return t.kill&&t.kill()}));if(this.clear(),e)for(var i=dn.length;i--;)dn[i].id===this.id&&dn.splice(i,1)},e.revert=function(t){this.kill(t||{})},t}(),An=function(){function t(t){this.contexts=[],this.scope=t}var e=t.prototype;return e.add=function(t,e,n){T(t)||(t={matches:t});var r,i,o,a=new wn(0,n||this.scope),u=a.conditions={};for(i in s&&!a.selector&&(a.selector=s.selector),this.contexts.push(a),e=a.add("onMatch",e),a.queries=t,t)"all"===i?o=1:(r=l.matchMedia(t[i]))&&(dn.indexOf(a)<0&&dn.push(a),(u[i]=r.matches)&&(o=1),r.addListener?r.addListener(bn):r.addEventListener("change",bn));return o&&e(a),this},e.revert=function(t){this.kill(t||{})},e.kill=function(t){this.contexts.forEach((function(e){return e.kill(t,!0)}))},t}(),xn={registerPlugin:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];e.forEach((function(t){return ge(t)}))},timeline:function(t){return new qe(t)},getTweensOf:function(t,e){return u.getTweensOf(t,e)},getProperty:function(t,e,n,r){I(t)&&(t=ee(t)[0]);var i=ft(t||{}).get,o=n?xt:At;return"native"===n&&(n=""),t?e?o((at[e]&&at[e].get||i)(t,e,n,r)):function(e,n,r){return o((at[e]&&at[e].get||i)(t,e,n,r))}:t},quickSetter:function(t,e,n){if((t=ee(t)).length>1){var r=t.map((function(t){return Ln.quickSetter(t,e,n)})),i=r.length;return function(t){for(var e=i;e--;)r[e](t)}}t=t[0]||{};var o=at[e],a=ft(t),s=a.harness&&(a.harness.aliases||{})[e]||e,u=o?function(e){var r=new o;p._pt=0,r.init(t,n?e+n:e,p,0,[t]),r.render(1,r),p._pt&&sn(1,p)}:a.set(t,s);return o?u:function(e){return u(t,s,n?e+n:e,a,1)}},quickTo:function(t,e,n){var r,i=Ln.to(t,St(((r={})[e]="+=0.1",r.paused=!0,r),n||{})),o=function(t,n,r){return i.resetTo(e,t,n,r)};return o.tween=i,o},isTweening:function(t){return u.getTweensOf(t,!0).length>0},defaults:function(t){return t&&t.ease&&(t.ease=Fe(t.ease,A.ease)),Lt(A,t||{})},config:function(t){return Lt(w,t||{})},registerEffect:function(t){var e=t.name,n=t.effect,r=t.plugins,i=t.defaults,o=t.extendTimeline;(r||"").split(",").forEach((function(t){return t&&!at[t]&&!Y[t]&&$(e+" effect requires "+t+" plugin.")})),st[e]=function(t,e,r){return n(ee(t),_t(e||{},i),r)},o&&(qe.prototype[e]=function(t,n,r){return this.add(st[e](t,T(n)?n:(r=n)&&{},this),r)})},registerEase:function(t,e){ke[t]=Fe(e)},parseEase:function(t,e){return arguments.length?Fe(t,e):ke},getById:function(t){return u.getById(t)},exportRoot:function(t,e){void 0===t&&(t={});var n,r,i=new qe(t);for(i.smoothChildTiming=E(t.smoothChildTiming),u.remove(i),i._dp=0,i._time=i._tTime=u._time,n=u._first;n;)r=n._next,!e&&!n._dur&&n instanceof $e&&n.vars.onComplete===n._targets[0]||qt(i,n,n._start-n._delay),n=r;return qt(u,i,0),i},context:function(t,e){return t?new wn(t,e):s},matchMedia:function(t){return new An(t)},matchMediaRefresh:function(){return dn.forEach((function(t){var e,n,r=t.conditions;for(n in r)r[n]&&(r[n]=!1,e=1);e&&t.revert()}))||bn()},addEventListener:function(t,e){var n=pn[t]||(pn[t]=[]);~n.indexOf(e)||n.push(e)},removeEventListener:function(t,e){var n=pn[t],r=n&&n.indexOf(e);r>=0&&n.splice(r,1)},utils:{wrap:function t(e,n,r){var i=n-e;return D(e)?ue(e,t(0,e.length),n):Kt(r,(function(t){return(i+(t-e)%i)%i+e}))},wrapYoyo:function t(e,n,r){var i=n-e,o=2*i;return D(e)?ue(e,t(0,e.length-1),n):Kt(r,(function(t){return e+((t=(o+(t-e)%o)%o||0)>i?o-t:t)}))},distribute:ie,random:se,snap:ae,normalize:function(t,e,n){return ce(t,e,0,1,n)},getUnit:Zt,clamp:function(t,e,n){return Kt(n,(function(n){return $t(t,e,n)}))},splitColor:be,toArray:ee,selector:ne,mapRange:ce,pipe:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return function(t){return e.reduce((function(t,e){return e(t)}),t)}},unitize:function(t,e){return function(n){return t(parseFloat(n))+(e||Zt(n))}},interpolate:function t(e,n,r,i){var o=isNaN(e+n)?0:function(t){return(1-t)*e+t*n};if(!o){var a,s,u,l,c,h=I(e),f={};if(!0===r&&(i=1)&&(r=null),h)e={p:e},n={p:n};else if(D(e)&&!D(n)){for(u=[],l=e.length,c=l-2,s=1;s<l;s++)u.push(t(e[s-1],e[s]));l--,o=function(t){t*=l;var e=Math.min(c,~~t);return u[e](t-e)},r=n}else i||(e=St(D(e)?[]:{},e));if(!u){for(a in n)We.call(f,e,a,"get",n[a]);o=function(t){return sn(t,f)||(h?e.p:e)}}}return Kt(r,o)},shuffle:re},install:J,effects:st,ticker:Le,updateRoot:qe.updateRoot,plugins:at,globalTimeline:u,core:{PropTween:fn,globals:Z,Tween:$e,Timeline:qe,Animation:De,getCache:ft,_removeLinkedListItem:Pt,reverting:function(){return a},context:function(t){return t&&s&&(s.data.push(t),t._ctx=s),s},suppressOverwrites:function(t){return o=t}}};pt("to,from,fromTo,delayedCall,set,killTweensOf",(function(t){return xn[t]=$e[t]})),Le.add(qe.updateRoot),p=xn.to({},{duration:0});var _n=function(t,e){for(var n=t._pt;n&&n.p!==e&&n.op!==e&&n.fp!==e;)n=n._next;return n},Sn=function(t,e){return{name:t,rawVars:1,init:function(t,n,r){r._onInit=function(t){var r,i;if(I(n)&&(r={},pt(n,(function(t){return r[t]=1})),n=r),e){for(i in r={},n)r[i]=e(n[i]);n=r}!function(t,e){var n,r,i,o=t._targets;for(n in e)for(r=o.length;r--;)(i=t._ptLookup[r][n])&&(i=i.d)&&(i._pt&&(i=_n(i,n)),i&&i.modifier&&i.modifier(e[n],t,o[r],n))}(t,n)}}}},Ln=xn.registerPlugin({name:"attr",init:function(t,e,n,r,i){var o,a,s;for(o in this.tween=n,e)s=t.getAttribute(o)||"",(a=this.add(t,"setAttribute",(s||0)+"",e[o],r,i,0,0,o)).op=o,a.b=s,this._props.push(o)},render:function(t,e){for(var n=e._pt;n;)a?n.set(n.t,n.p,n.b,n):n.r(t,n.d),n=n._next}},{name:"endArray",init:function(t,e){for(var n=e.length;n--;)this.add(t,n,t[n]||0,e[n],0,0,0,0,0,1)}},Sn("roundProps",oe),Sn("modifiers"),Sn("snap",ae))||xn;$e.version=qe.version=Ln.version="3.12.2",f=1,O()&&Ne();var Nn,kn,Cn,Pn,In,Mn,Bn,Fn,Tn=ke.Power0,En=ke.Power1,On=ke.Power2,jn=ke.Power3,Rn=ke.Power4,Dn=ke.Linear,qn=ke.Quad,zn=ke.Cubic,Un=ke.Quart,Hn=ke.Quint,Wn=ke.Strong,Vn=ke.Elastic,Gn=ke.Back,Yn=ke.SteppedEase,Xn=ke.Bounce,Jn=ke.Sine,Kn=ke.Expo,$n=ke.Circ,Zn={},Qn=180/Math.PI,tr=Math.PI/180,er=Math.atan2,nr=/([A-Z])/g,rr=/(left|right|width|margin|padding|x)/i,ir=/[\s,\(]\S/,or={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},ar=function(t,e){return e.set(e.t,e.p,Math.round(1e4*(e.s+e.c*t))/1e4+e.u,e)},sr=function(t,e){return e.set(e.t,e.p,1===t?e.e:Math.round(1e4*(e.s+e.c*t))/1e4+e.u,e)},ur=function(t,e){return e.set(e.t,e.p,t?Math.round(1e4*(e.s+e.c*t))/1e4+e.u:e.b,e)},lr=function(t,e){var n=e.s+e.c*t;e.set(e.t,e.p,~~(n+(n<0?-.5:.5))+e.u,e)},cr=function(t,e){return e.set(e.t,e.p,t?e.e:e.b,e)},hr=function(t,e){return e.set(e.t,e.p,1!==t?e.b:e.e,e)},fr=function(t,e,n){return t.style[e]=n},dr=function(t,e,n){return t.style.setProperty(e,n)},pr=function(t,e,n){return t._gsap[e]=n},gr=function(t,e,n){return t._gsap.scaleX=t._gsap.scaleY=n},mr=function(t,e,n,r,i){var o=t._gsap;o.scaleX=o.scaleY=n,o.renderTransform(i,o)},vr=function(t,e,n,r,i){var o=t._gsap;o[e]=n,o.renderTransform(i,o)},yr="transform",br=yr+"Origin",wr=function t(e,n){var r=this,i=this.target,o=i.style;if(e in Zn&&o){if(this.tfm=this.tfm||{},"transform"===e)return or.transform.split(",").forEach((function(e){return t.call(r,e,n)}));if(~(e=or[e]||e).indexOf(",")?e.split(",").forEach((function(t){return r.tfm[t]=Rr(i,t)})):this.tfm[e]=i._gsap.x?i._gsap[e]:Rr(i,e),this.props.indexOf(yr)>=0)return;i._gsap.svg&&(this.svgo=i.getAttribute("data-svg-origin"),this.props.push(br,n,"")),e=yr}(o||n)&&this.props.push(e,n,o[e])},Ar=function(t){t.translate&&(t.removeProperty("translate"),t.removeProperty("scale"),t.removeProperty("rotate"))},xr=function(){var t,e,n=this.props,r=this.target,i=r.style,o=r._gsap;for(t=0;t<n.length;t+=3)n[t+1]?r[n[t]]=n[t+2]:n[t+2]?i[n[t]]=n[t+2]:i.removeProperty("--"===n[t].substr(0,2)?n[t]:n[t].replace(nr,"-$1").toLowerCase());if(this.tfm){for(e in this.tfm)o[e]=this.tfm[e];o.svg&&(o.renderTransform(),r.setAttribute("data-svg-origin",this.svgo||"")),(t=Bn())&&t.isStart||i[yr]||(Ar(i),o.uncache=1)}},_r=function(t,e){var n={target:t,props:[],revert:xr,save:wr};return t._gsap||Ln.core.getCache(t),e&&e.split(",").forEach((function(t){return n.save(t)})),n},Sr=function(t,e){var n=kn.createElementNS?kn.createElementNS((e||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),t):kn.createElement(t);return n.style?n:kn.createElement(t)},Lr=function t(e,n,r){var i=getComputedStyle(e);return i[n]||i.getPropertyValue(n.replace(nr,"-$1").toLowerCase())||i.getPropertyValue(n)||!r&&t(e,kr(n)||n,1)||""},Nr="O,Moz,ms,Ms,Webkit".split(","),kr=function(t,e,n){var r=(e||In).style,i=5;if(t in r&&!n)return t;for(t=t.charAt(0).toUpperCase()+t.substr(1);i--&&!(Nr[i]+t in r););return i<0?null:(3===i?"ms":i>=0?Nr[i]:"")+t},Cr=function(){"undefined"!=typeof window&&window.document&&(Nn=window,kn=Nn.document,Cn=kn.documentElement,In=Sr("div")||{style:{}},Sr("div"),yr=kr(yr),br=yr+"Origin",In.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",Fn=!!kr("perspective"),Bn=Ln.core.reverting,Pn=1)},Pr=function t(e){var n,r=Sr("svg",this.ownerSVGElement&&this.ownerSVGElement.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),i=this.parentNode,o=this.nextSibling,a=this.style.cssText;if(Cn.appendChild(r),r.appendChild(this),this.style.display="block",e)try{n=this.getBBox(),this._gsapBBox=this.getBBox,this.getBBox=t}catch(t){}else this._gsapBBox&&(n=this._gsapBBox());return i&&(o?i.insertBefore(this,o):i.appendChild(this)),Cn.removeChild(r),this.style.cssText=a,n},Ir=function(t,e){for(var n=e.length;n--;)if(t.hasAttribute(e[n]))return t.getAttribute(e[n])},Mr=function(t){var e;try{e=t.getBBox()}catch(n){e=Pr.call(t,!0)}return e&&(e.width||e.height)||t.getBBox===Pr||(e=Pr.call(t,!0)),!e||e.width||e.x||e.y?e:{x:+Ir(t,["x","cx","x1"])||0,y:+Ir(t,["y","cy","y1"])||0,width:0,height:0}},Br=function(t){return!(!t.getCTM||t.parentNode&&!t.ownerSVGElement||!Mr(t))},Fr=function(t,e){if(e){var n=t.style;e in Zn&&e!==br&&(e=yr),n.removeProperty?("ms"!==e.substr(0,2)&&"webkit"!==e.substr(0,6)||(e="-"+e),n.removeProperty(e.replace(nr,"-$1").toLowerCase())):n.removeAttribute(e)}},Tr=function(t,e,n,r,i,o){var a=new fn(t._pt,e,n,0,1,o?hr:cr);return t._pt=a,a.b=r,a.e=i,t._props.push(n),a},Er={deg:1,rad:1,turn:1},Or={grid:1,flex:1},jr=function t(e,n,r,i){var o,a,s,u,l=parseFloat(r)||0,c=(r+"").trim().substr((l+"").length)||"px",h=In.style,f=rr.test(n),d="svg"===e.tagName.toLowerCase(),p=(d?"client":"offset")+(f?"Width":"Height"),g=100,m="px"===i,v="%"===i;return i===c||!l||Er[i]||Er[c]?l:("px"!==c&&!m&&(l=t(e,n,r,"px")),u=e.getCTM&&Br(e),!v&&"%"!==c||!Zn[n]&&!~n.indexOf("adius")?(h[f?"width":"height"]=g+(m?c:i),a=~n.indexOf("adius")||"em"===i&&e.appendChild&&!d?e:e.parentNode,u&&(a=(e.ownerSVGElement||{}).parentNode),a&&a!==kn&&a.appendChild||(a=kn.body),(s=a._gsap)&&v&&s.width&&f&&s.time===Le.time&&!s.uncache?gt(l/s.width*g):((v||"%"===c)&&!Or[Lr(a,"display")]&&(h.position=Lr(e,"position")),a===e&&(h.position="static"),a.appendChild(In),o=In[p],a.removeChild(In),h.position="absolute",f&&v&&((s=ft(a)).time=Le.time,s.width=a[p]),gt(m?o*l/g:o&&l?g/o*l:0))):(o=u?e.getBBox()[f?"width":"height"]:e[p],gt(v?l/o*g:l/100*o)))},Rr=function(t,e,n,r){var i;return Pn||Cr(),e in or&&"transform"!==e&&~(e=or[e]).indexOf(",")&&(e=e.split(",")[0]),Zn[e]&&"transform"!==e?(i=Jr(t,r),i="transformOrigin"!==e?i[e]:i.svg?i.origin:Kr(Lr(t,br))+" "+i.zOrigin+"px"):(!(i=t.style[e])||"auto"===i||r||~(i+"").indexOf("calc("))&&(i=Ur[e]&&Ur[e](t,e,n)||Lr(t,e)||dt(t,e)||("opacity"===e?1:0)),n&&!~(i+"").trim().indexOf(" ")?jr(t,e,i,n)+n:i},Dr=function(t,e,n,r){if(!n||"none"===n){var i=kr(e,t,1),o=i&&Lr(t,i,1);o&&o!==n?(e=i,n=o):"borderColor"===e&&(n=Lr(t,"borderTopColor"))}var a,s,u,l,c,h,f,d,p,g,m,v=new fn(this._pt,t.style,e,0,1,an),y=0,b=0;if(v.b=n,v.e=r,n+="","auto"==(r+="")&&(t.style[e]=r,r=Lr(t,e)||r,t.style[e]=n),Se(a=[n,r]),r=a[1],u=(n=a[0]).match(U)||[],(r.match(U)||[]).length){for(;s=U.exec(r);)f=s[0],p=r.substring(y,s.index),c?c=(c+1)%5:"rgba("!==p.substr(-5)&&"hsla("!==p.substr(-5)||(c=1),f!==(h=u[b++]||"")&&(l=parseFloat(h)||0,m=h.substr((l+"").length),"="===f.charAt(1)&&(f=vt(l,f)+m),d=parseFloat(f),g=f.substr((d+"").length),y=U.lastIndex-g.length,g||(g=g||w.units[e]||m,y===r.length&&(r+=g,v.e+=g)),m!==g&&(l=jr(t,e,h,g)||0),v._pt={_next:v._pt,p:p||1===b?p:",",s:l,c:d-l,m:c&&c<4||"zIndex"===e?Math.round:0});v.c=y<r.length?r.substring(y,r.length):""}else v.r="display"===e&&"none"===r?hr:cr;return W.test(r)&&(v.e=0),this._pt=v,v},qr={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},zr=function(t,e){if(e.tween&&e.tween._time===e.tween._dur){var n,r,i,o=e.t,a=o.style,s=e.u,u=o._gsap;if("all"===s||!0===s)a.cssText="",r=1;else for(i=(s=s.split(",")).length;--i>-1;)n=s[i],Zn[n]&&(r=1,n="transformOrigin"===n?br:yr),Fr(o,n);r&&(Fr(o,yr),u&&(u.svg&&o.removeAttribute("transform"),Jr(o,1),u.uncache=1,Ar(a)))}},Ur={clearProps:function(t,e,n,r,i){if("isFromStart"!==i.data){var o=t._pt=new fn(t._pt,e,n,0,0,zr);return o.u=r,o.pr=-10,o.tween=i,t._props.push(n),1}}},Hr=[1,0,0,1,0,0],Wr={},Vr=function(t){return"matrix(1, 0, 0, 1, 0, 0)"===t||"none"===t||!t},Gr=function(t){var e=Lr(t,yr);return Vr(e)?Hr:e.substr(7).match(z).map(gt)},Yr=function(t,e){var n,r,i,o,a=t._gsap||ft(t),s=t.style,u=Gr(t);return a.svg&&t.getAttribute("transform")?"1,0,0,1,0,0"===(u=[(i=t.transform.baseVal.consolidate().matrix).a,i.b,i.c,i.d,i.e,i.f]).join(",")?Hr:u:(u!==Hr||t.offsetParent||t===Cn||a.svg||(i=s.display,s.display="block",(n=t.parentNode)&&t.offsetParent||(o=1,r=t.nextElementSibling,Cn.appendChild(t)),u=Gr(t),i?s.display=i:Fr(t,"display"),o&&(r?n.insertBefore(t,r):n?n.appendChild(t):Cn.removeChild(t))),e&&u.length>6?[u[0],u[1],u[4],u[5],u[12],u[13]]:u)},Xr=function(t,e,n,r,i,o){var a,s,u,l=t._gsap,c=i||Yr(t,!0),h=l.xOrigin||0,f=l.yOrigin||0,d=l.xOffset||0,p=l.yOffset||0,g=c[0],m=c[1],v=c[2],y=c[3],b=c[4],w=c[5],A=e.split(" "),x=parseFloat(A[0])||0,_=parseFloat(A[1])||0;n?c!==Hr&&(s=g*y-m*v)&&(u=x*(-m/s)+_*(g/s)-(g*w-m*b)/s,x=x*(y/s)+_*(-v/s)+(v*w-y*b)/s,_=u):(x=(a=Mr(t)).x+(~A[0].indexOf("%")?x/100*a.width:x),_=a.y+(~(A[1]||A[0]).indexOf("%")?_/100*a.height:_)),r||!1!==r&&l.smooth?(b=x-h,w=_-f,l.xOffset=d+(b*g+w*v)-b,l.yOffset=p+(b*m+w*y)-w):l.xOffset=l.yOffset=0,l.xOrigin=x,l.yOrigin=_,l.smooth=!!r,l.origin=e,l.originIsAbsolute=!!n,t.style[br]="0px 0px",o&&(Tr(o,l,"xOrigin",h,x),Tr(o,l,"yOrigin",f,_),Tr(o,l,"xOffset",d,l.xOffset),Tr(o,l,"yOffset",p,l.yOffset)),t.setAttribute("data-svg-origin",x+" "+_)},Jr=function(t,e){var n=t._gsap||new Re(t);if("x"in n&&!e&&!n.uncache)return n;var r,i,o,a,s,u,l,c,h,f,d,p,g,m,v,y,b,A,x,_,S,L,N,k,C,P,I,M,B,F,T,E,O=t.style,j=n.scaleX<0,R="px",D="deg",q=getComputedStyle(t),z=Lr(t,br)||"0";return r=i=o=u=l=c=h=f=d=0,a=s=1,n.svg=!(!t.getCTM||!Br(t)),q.translate&&("none"===q.translate&&"none"===q.scale&&"none"===q.rotate||(O[yr]=("none"!==q.translate?"translate3d("+(q.translate+" 0 0").split(" ").slice(0,3).join(", ")+") ":"")+("none"!==q.rotate?"rotate("+q.rotate+") ":"")+("none"!==q.scale?"scale("+q.scale.split(" ").join(",")+") ":"")+("none"!==q[yr]?q[yr]:"")),O.scale=O.rotate=O.translate="none"),m=Yr(t,n.svg),n.svg&&(n.uncache?(C=t.getBBox(),z=n.xOrigin-C.x+"px "+(n.yOrigin-C.y)+"px",k=""):k=!e&&t.getAttribute("data-svg-origin"),Xr(t,k||z,!!k||n.originIsAbsolute,!1!==n.smooth,m)),p=n.xOrigin||0,g=n.yOrigin||0,m!==Hr&&(A=m[0],x=m[1],_=m[2],S=m[3],r=L=m[4],i=N=m[5],6===m.length?(a=Math.sqrt(A*A+x*x),s=Math.sqrt(S*S+_*_),u=A||x?er(x,A)*Qn:0,(h=_||S?er(_,S)*Qn+u:0)&&(s*=Math.abs(Math.cos(h*tr))),n.svg&&(r-=p-(p*A+g*_),i-=g-(p*x+g*S))):(E=m[6],F=m[7],I=m[8],M=m[9],B=m[10],T=m[11],r=m[12],i=m[13],o=m[14],l=(v=er(E,B))*Qn,v&&(k=L*(y=Math.cos(-v))+I*(b=Math.sin(-v)),C=N*y+M*b,P=E*y+B*b,I=L*-b+I*y,M=N*-b+M*y,B=E*-b+B*y,T=F*-b+T*y,L=k,N=C,E=P),c=(v=er(-_,B))*Qn,v&&(y=Math.cos(-v),T=S*(b=Math.sin(-v))+T*y,A=k=A*y-I*b,x=C=x*y-M*b,_=P=_*y-B*b),u=(v=er(x,A))*Qn,v&&(k=A*(y=Math.cos(v))+x*(b=Math.sin(v)),C=L*y+N*b,x=x*y-A*b,N=N*y-L*b,A=k,L=C),l&&Math.abs(l)+Math.abs(u)>359.9&&(l=u=0,c=180-c),a=gt(Math.sqrt(A*A+x*x+_*_)),s=gt(Math.sqrt(N*N+E*E)),v=er(L,N),h=Math.abs(v)>2e-4?v*Qn:0,d=T?1/(T<0?-T:T):0),n.svg&&(k=t.getAttribute("transform"),n.forceCSS=t.setAttribute("transform","")||!Vr(Lr(t,yr)),k&&t.setAttribute("transform",k))),Math.abs(h)>90&&Math.abs(h)<270&&(j?(a*=-1,h+=u<=0?180:-180,u+=u<=0?180:-180):(s*=-1,h+=h<=0?180:-180)),e=e||n.uncache,n.x=r-((n.xPercent=r&&(!e&&n.xPercent||(Math.round(t.offsetWidth/2)===Math.round(-r)?-50:0)))?t.offsetWidth*n.xPercent/100:0)+R,n.y=i-((n.yPercent=i&&(!e&&n.yPercent||(Math.round(t.offsetHeight/2)===Math.round(-i)?-50:0)))?t.offsetHeight*n.yPercent/100:0)+R,n.z=o+R,n.scaleX=gt(a),n.scaleY=gt(s),n.rotation=gt(u)+D,n.rotationX=gt(l)+D,n.rotationY=gt(c)+D,n.skewX=h+D,n.skewY=f+D,n.transformPerspective=d+R,(n.zOrigin=parseFloat(z.split(" ")[2])||0)&&(O[br]=Kr(z)),n.xOffset=n.yOffset=0,n.force3D=w.force3D,n.renderTransform=n.svg?ri:Fn?ni:Zr,n.uncache=0,n},Kr=function(t){return(t=t.split(" "))[0]+" "+t[1]},$r=function(t,e,n){var r=Zt(e);return gt(parseFloat(e)+parseFloat(jr(t,"x",n+"px",r)))+r},Zr=function(t,e){e.z="0px",e.rotationY=e.rotationX="0deg",e.force3D=0,ni(t,e)},Qr="0deg",ti="0px",ei=") ",ni=function(t,e){var n=e||this,r=n.xPercent,i=n.yPercent,o=n.x,a=n.y,s=n.z,u=n.rotation,l=n.rotationY,c=n.rotationX,h=n.skewX,f=n.skewY,d=n.scaleX,p=n.scaleY,g=n.transformPerspective,m=n.force3D,v=n.target,y=n.zOrigin,b="",w="auto"===m&&t&&1!==t||!0===m;if(y&&(c!==Qr||l!==Qr)){var A,x=parseFloat(l)*tr,_=Math.sin(x),S=Math.cos(x);x=parseFloat(c)*tr,A=Math.cos(x),o=$r(v,o,_*A*-y),a=$r(v,a,-Math.sin(x)*-y),s=$r(v,s,S*A*-y+y)}g!==ti&&(b+="perspective("+g+ei),(r||i)&&(b+="translate("+r+"%, "+i+"%) "),(w||o!==ti||a!==ti||s!==ti)&&(b+=s!==ti||w?"translate3d("+o+", "+a+", "+s+") ":"translate("+o+", "+a+ei),u!==Qr&&(b+="rotate("+u+ei),l!==Qr&&(b+="rotateY("+l+ei),c!==Qr&&(b+="rotateX("+c+ei),h===Qr&&f===Qr||(b+="skew("+h+", "+f+ei),1===d&&1===p||(b+="scale("+d+", "+p+ei),v.style[yr]=b||"translate(0, 0)"},ri=function(t,e){var n,r,i,o,a,s=e||this,u=s.xPercent,l=s.yPercent,c=s.x,h=s.y,f=s.rotation,d=s.skewX,p=s.skewY,g=s.scaleX,m=s.scaleY,v=s.target,y=s.xOrigin,b=s.yOrigin,w=s.xOffset,A=s.yOffset,x=s.forceCSS,_=parseFloat(c),S=parseFloat(h);f=parseFloat(f),d=parseFloat(d),(p=parseFloat(p))&&(d+=p=parseFloat(p),f+=p),f||d?(f*=tr,d*=tr,n=Math.cos(f)*g,r=Math.sin(f)*g,i=Math.sin(f-d)*-m,o=Math.cos(f-d)*m,d&&(p*=tr,a=Math.tan(d-p),i*=a=Math.sqrt(1+a*a),o*=a,p&&(a=Math.tan(p),n*=a=Math.sqrt(1+a*a),r*=a)),n=gt(n),r=gt(r),i=gt(i),o=gt(o)):(n=g,o=m,r=i=0),(_&&!~(c+"").indexOf("px")||S&&!~(h+"").indexOf("px"))&&(_=jr(v,"x",c,"px"),S=jr(v,"y",h,"px")),(y||b||w||A)&&(_=gt(_+y-(y*n+b*i)+w),S=gt(S+b-(y*r+b*o)+A)),(u||l)&&(a=v.getBBox(),_=gt(_+u/100*a.width),S=gt(S+l/100*a.height)),a="matrix("+n+","+r+","+i+","+o+","+_+","+S+")",v.setAttribute("transform",a),x&&(v.style[yr]=a)},ii=function(t,e,n,r,i){var o,a,s=360,u=I(i),l=parseFloat(i)*(u&&~i.indexOf("rad")?Qn:1)-r,c=r+l+"deg";return u&&("short"===(o=i.split("_")[1])&&(l%=s)!=l%180&&(l+=l<0?s:-360),"cw"===o&&l<0?l=(l+36e9)%s-~~(l/s)*s:"ccw"===o&&l>0&&(l=(l-36e9)%s-~~(l/s)*s)),t._pt=a=new fn(t._pt,e,n,r,l,sr),a.e=c,a.u="deg",t._props.push(n),a},oi=function(t,e){for(var n in e)t[n]=e[n];return t},ai=function(t,e,n){var r,i,o,a,s,u,l,c=oi({},n._gsap),h=n.style;for(i in c.svg?(o=n.getAttribute("transform"),n.setAttribute("transform",""),h[yr]=e,r=Jr(n,1),Fr(n,yr),n.setAttribute("transform",o)):(o=getComputedStyle(n)[yr],h[yr]=e,r=Jr(n,1),h[yr]=o),Zn)(o=c[i])!==(a=r[i])&&"perspective,force3D,transformOrigin,svgOrigin".indexOf(i)<0&&(s=Zt(o)!==(l=Zt(a))?jr(n,i,o,l):parseFloat(o),u=parseFloat(a),t._pt=new fn(t._pt,r,i,s,u-s,ar),t._pt.u=l||0,t._props.push(i));oi(r,c)};pt("padding,margin,Width,Radius",(function(t,e){var n="Top",r="Right",i="Bottom",o="Left",a=(e<3?[n,r,i,o]:[n+o,n+r,i+r,i+o]).map((function(n){return e<2?t+n:"border"+n+t}));Ur[e>1?"border"+t:t]=function(t,e,n,r,i){var o,s;if(arguments.length<4)return o=a.map((function(e){return Rr(t,e,n)})),5===(s=o.join(" ")).split(o[0]).length?o[0]:s;o=(r+"").split(" "),s={},a.forEach((function(t,e){return s[t]=o[e]=o[e]||o[(e-1)/2|0]})),t.init(e,s,i)}}));var si,ui,li={name:"css",register:Cr,targetTest:function(t){return t.style&&t.nodeType},init:function(t,e,n,r,i){var o,a,s,u,l,c,h,f,d,p,g,m,v,y,b,A,x,_,S,L,N=this._props,k=t.style,C=n.vars.startAt;for(h in Pn||Cr(),this.styles=this.styles||_r(t),A=this.styles.props,this.tween=n,e)if("autoRound"!==h&&(a=e[h],!at[h]||!Ve(h,e,n,r,t,i)))if(l=typeof a,c=Ur[h],"function"===l&&(l=typeof(a=a.call(n,r,t,i))),"string"===l&&~a.indexOf("random(")&&(a=le(a)),c)c(this,t,h,a,n)&&(b=1);else if("--"===h.substr(0,2))o=(getComputedStyle(t).getPropertyValue(h)+"").trim(),a+="",xe.lastIndex=0,xe.test(o)||(f=Zt(o),d=Zt(a)),d?f!==d&&(o=jr(t,h,o,d)+d):f&&(a+=f),this.add(k,"setProperty",o,a,r,i,0,0,h),N.push(h),A.push(h,0,k[h]);else if("undefined"!==l){if(C&&h in C?(o="function"==typeof C[h]?C[h].call(n,r,t,i):C[h],I(o)&&~o.indexOf("random(")&&(o=le(o)),Zt(o+"")||(o+=w.units[h]||Zt(Rr(t,h))||""),"="===(o+"").charAt(1)&&(o=Rr(t,h))):o=Rr(t,h),u=parseFloat(o),(p="string"===l&&"="===a.charAt(1)&&a.substr(0,2))&&(a=a.substr(2)),s=parseFloat(a),h in or&&("autoAlpha"===h&&(1===u&&"hidden"===Rr(t,"visibility")&&s&&(u=0),A.push("visibility",0,k.visibility),Tr(this,k,"visibility",u?"inherit":"hidden",s?"inherit":"hidden",!s)),"scale"!==h&&"transform"!==h&&~(h=or[h]).indexOf(",")&&(h=h.split(",")[0])),g=h in Zn)if(this.styles.save(h),m||((v=t._gsap).renderTransform&&!e.parseTransform||Jr(t,e.parseTransform),y=!1!==e.smoothOrigin&&v.smooth,(m=this._pt=new fn(this._pt,k,yr,0,1,v.renderTransform,v,0,-1)).dep=1),"scale"===h)this._pt=new fn(this._pt,v,"scaleY",v.scaleY,(p?vt(v.scaleY,p+s):s)-v.scaleY||0,ar),this._pt.u=0,N.push("scaleY",h),h+="X";else{if("transformOrigin"===h){A.push(br,0,k[br]),_=void 0,S=void 0,L=void 0,S=(_=(x=a).split(" "))[0],L=_[1]||"50%","top"!==S&&"bottom"!==S&&"left"!==L&&"right"!==L||(x=S,S=L,L=x),_[0]=qr[S]||S,_[1]=qr[L]||L,a=_.join(" "),v.svg?Xr(t,a,0,y,0,this):((d=parseFloat(a.split(" ")[2])||0)!==v.zOrigin&&Tr(this,v,"zOrigin",v.zOrigin,d),Tr(this,k,h,Kr(o),Kr(a)));continue}if("svgOrigin"===h){Xr(t,a,1,y,0,this);continue}if(h in Wr){ii(this,v,h,u,p?vt(u,p+a):a);continue}if("smoothOrigin"===h){Tr(this,v,"smooth",v.smooth,a);continue}if("force3D"===h){v[h]=a;continue}if("transform"===h){ai(this,a,t);continue}}else h in k||(h=kr(h)||h);if(g||(s||0===s)&&(u||0===u)&&!ir.test(a)&&h in k)s||(s=0),(f=(o+"").substr((u+"").length))!==(d=Zt(a)||(h in w.units?w.units[h]:f))&&(u=jr(t,h,o,d)),this._pt=new fn(this._pt,g?v:k,h,u,(p?vt(u,p+s):s)-u,g||"px"!==d&&"zIndex"!==h||!1===e.autoRound?ar:lr),this._pt.u=d||0,f!==d&&"%"!==d&&(this._pt.b=o,this._pt.r=ur);else if(h in k)Dr.call(this,t,h,o,p?p+a:a);else if(h in t)this.add(t,h,o||t[h],p?p+a:a,r,i);else if("parseTransform"!==h){K(h,a);continue}g||(h in k?A.push(h,0,k[h]):A.push(h,1,o||t[h])),N.push(h)}b&&hn(this)},render:function(t,e){if(e.tween._time||!Bn())for(var n=e._pt;n;)n.r(t,n.d),n=n._next;else e.styles.revert()},get:Rr,aliases:or,getSetter:function(t,e,n){var r=or[e];return r&&r.indexOf(",")<0&&(e=r),e in Zn&&e!==br&&(t._gsap.x||Rr(t,"x"))?n&&Mn===n?"scale"===e?gr:pr:(Mn=n||{})&&("scale"===e?mr:vr):t.style&&!F(t.style[e])?fr:~e.indexOf("-")?dr:nn(t,e)},core:{_removeProperty:Fr,_getMatrix:Yr}};Ln.utils.checkPrefix=kr,Ln.core.getStyleSaver=_r,ui=pt("x,y,z,scale,scaleX,scaleY,xPercent,yPercent"+","+(si="rotation,rotationX,rotationY,skewX,skewY")+",transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective",(function(t){Zn[t]=1})),pt(si,(function(t){w.units[t]="deg",Wr[t]=1})),or[ui[13]]="x,y,z,scale,scaleX,scaleY,xPercent,yPercent,"+si,pt("0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY",(function(t){var e=t.split(":");or[e[1]]=ui[e[0]]})),pt("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",(function(t){w.units[t]="px"})),Ln.registerPlugin(li);var ci=Ln.registerPlugin(li)||Ln,hi=ci.core.Tween},1006:(t,e,n)=>{"use strict";n.r(e),n.d(e,{AcroForm:()=>pe,AcroFormAppearance:()=>ce,AcroFormButton:()=>re,AcroFormCheckBox:()=>se,AcroFormChoiceField:()=>Qt,AcroFormComboBox:()=>ee,AcroFormEditBox:()=>ne,AcroFormListBox:()=>te,AcroFormPasswordField:()=>le,AcroFormPushButton:()=>ie,AcroFormRadioButton:()=>oe,AcroFormTextField:()=>ue,GState:()=>At,ShadingPattern:()=>_t,TilingPattern:()=>St,default:()=>fn,jsPDF:()=>Lt});var r=n(8698),i=n.n(r);try{require("worker_threads").Worker}catch(de){}var o=Uint8Array,a=Uint16Array,s=Uint32Array,u=new o([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),l=new o([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),c=new o([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),h=function(t,e){for(var n=new a(31),r=0;r<31;++r)n[r]=e+=1<<t[r-1];var i=new s(n[30]);for(r=1;r<30;++r)for(var o=n[r];o<n[r+1];++o)i[o]=o-n[r]<<5|r;return[n,i]},f=h(u,2),d=f[0],p=f[1];d[28]=258,p[258]=28;for(var g=h(l,0),m=g[0],v=g[1],y=new a(32768),b=0;b<32768;++b){var w=(43690&b)>>>1|(21845&b)<<1;w=(61680&(w=(52428&w)>>>2|(13107&w)<<2))>>>4|(3855&w)<<4,y[b]=((65280&w)>>>8|(255&w)<<8)>>>1}var A=function(t,e,n){for(var r=t.length,i=0,o=new a(e);i<r;++i)++o[t[i]-1];var s,u=new a(e);for(i=0;i<e;++i)u[i]=u[i-1]+o[i-1]<<1;if(n){s=new a(1<<e);var l=15-e;for(i=0;i<r;++i)if(t[i])for(var c=i<<4|t[i],h=e-t[i],f=u[t[i]-1]++<<h,d=f|(1<<h)-1;f<=d;++f)s[y[f]>>>l]=c}else for(s=new a(r),i=0;i<r;++i)s[i]=y[u[t[i]-1]++]>>>15-t[i];return s},x=new o(288);for(b=0;b<144;++b)x[b]=8;for(b=144;b<256;++b)x[b]=9;for(b=256;b<280;++b)x[b]=7;for(b=280;b<288;++b)x[b]=8;var _=new o(32);for(b=0;b<32;++b)_[b]=5;var S=A(x,9,0),L=A(x,9,1),N=A(_,5,0),k=A(_,5,1),C=function(t){for(var e=t[0],n=1;n<t.length;++n)t[n]>e&&(e=t[n]);return e},P=function(t,e,n){var r=e/8>>0;return(t[r]|t[r+1]<<8)>>>(7&e)&n},I=function(t,e){var n=e/8>>0;return(t[n]|t[n+1]<<8|t[n+2]<<16)>>>(7&e)},M=function(t){return(t/8>>0)+(7&t&&1)},B=function(t,e,n){(null==e||e<0)&&(e=0),(null==n||n>t.length)&&(n=t.length);var r=new(t instanceof a?a:t instanceof s?s:o)(n-e);return r.set(t.subarray(e,n)),r},F=function(t,e,n){n<<=7&e;var r=e/8>>0;t[r]|=n,t[r+1]|=n>>>8},T=function(t,e,n){n<<=7&e;var r=e/8>>0;t[r]|=n,t[r+1]|=n>>>8,t[r+2]|=n>>>16},E=function(t,e){for(var n=[],r=0;r<t.length;++r)t[r]&&n.push({s:r,f:t[r]});var i=n.length,s=n.slice();if(!i)return[new o(0),0];if(1==i){var u=new o(n[0].s+1);return u[n[0].s]=1,[u,1]}n.sort((function(t,e){return t.f-e.f})),n.push({s:-1,f:25001});var l=n[0],c=n[1],h=0,f=1,d=2;for(n[0]={s:-1,f:l.f+c.f,l,r:c};f!=i-1;)l=n[n[h].f<n[d].f?h++:d++],c=n[h!=f&&n[h].f<n[d].f?h++:d++],n[f++]={s:-1,f:l.f+c.f,l,r:c};var p=s[0].s;for(r=1;r<i;++r)s[r].s>p&&(p=s[r].s);var g=new a(p+1),m=O(n[f-1],g,0);if(m>e){r=0;var v=0,y=m-e,b=1<<y;for(s.sort((function(t,e){return g[e.s]-g[t.s]||t.f-e.f}));r<i;++r){var w=s[r].s;if(!(g[w]>e))break;v+=b-(1<<m-g[w]),g[w]=e}for(v>>>=y;v>0;){var A=s[r].s;g[A]<e?v-=1<<e-g[A]++-1:++r}for(;r>=0&&v;--r){var x=s[r].s;g[x]==e&&(--g[x],++v)}m=e}return[new o(g),m]},O=function(t,e,n){return-1==t.s?Math.max(O(t.l,e,n+1),O(t.r,e,n+1)):e[t.s]=n},j=function(t){for(var e=t.length;e&&!t[--e];);for(var n=new a(++e),r=0,i=t[0],o=1,s=function(t){n[r++]=t},u=1;u<=e;++u)if(t[u]==i&&u!=e)++o;else{if(!i&&o>2){for(;o>138;o-=138)s(32754);o>2&&(s(o>10?o-11<<5|28690:o-3<<5|12305),o=0)}else if(o>3){for(s(i),--o;o>6;o-=6)s(8304);o>2&&(s(o-3<<5|8208),o=0)}for(;o--;)s(i);o=1,i=t[u]}return[n.subarray(0,r),e]},R=function(t,e){for(var n=0,r=0;r<e.length;++r)n+=t[r]*e[r];return n},D=function(t,e,n){var r=n.length,i=M(e+2);t[i]=255&r,t[i+1]=r>>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var o=0;o<r;++o)t[i+o+4]=n[o];return 8*(i+4+r)},q=function(t,e,n,r,i,o,s,h,f,d,p){F(e,p++,n),++i[256];for(var g=E(i,15),m=g[0],v=g[1],y=E(o,15),b=y[0],w=y[1],L=j(m),k=L[0],C=L[1],P=j(b),I=P[0],M=P[1],B=new a(19),O=0;O<k.length;++O)B[31&k[O]]++;for(O=0;O<I.length;++O)B[31&I[O]]++;for(var q=E(B,7),z=q[0],U=q[1],H=19;H>4&&!z[c[H-1]];--H);var W,V,G,Y,X=d+5<<3,J=R(i,x)+R(o,_)+s,K=R(i,m)+R(o,b)+s+14+3*H+R(B,z)+(2*B[16]+3*B[17]+7*B[18]);if(X<=J&&X<=K)return D(e,p,t.subarray(f,f+d));if(F(e,p,1+(K<J)),p+=2,K<J){W=A(m,v,0),V=m,G=A(b,w,0),Y=b;var $=A(z,U,0);for(F(e,p,C-257),F(e,p+5,M-1),F(e,p+10,H-4),p+=14,O=0;O<H;++O)F(e,p+3*O,z[c[O]]);p+=3*H;for(var Z=[k,I],Q=0;Q<2;++Q){var tt=Z[Q];for(O=0;O<tt.length;++O){var et=31&tt[O];F(e,p,$[et]),p+=z[et],et>15&&(F(e,p,tt[O]>>>5&127),p+=tt[O]>>>12)}}}else W=S,V=x,G=N,Y=_;for(O=0;O<h;++O)if(r[O]>255){et=r[O]>>>18&31,T(e,p,W[et+257]),p+=V[et+257],et>7&&(F(e,p,r[O]>>>23&31),p+=u[et]);var nt=31&r[O];T(e,p,G[nt]),p+=Y[nt],nt>3&&(T(e,p,r[O]>>>5&8191),p+=l[nt])}else T(e,p,W[r[O]]),p+=V[r[O]];return T(e,p,W[256]),p+V[256]},z=new s([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),U=new o(0),H=function(t,e,n,r,i){return function(t,e,n,r,i,c){var h=t.length,f=new o(r+h+5*(1+Math.floor(h/7e3))+i),d=f.subarray(r,f.length-i),g=0;if(!e||h<8)for(var m=0;m<=h;m+=65535){var y=m+65535;y<h?g=D(d,g,t.subarray(m,y)):(d[m]=c,g=D(d,g,t.subarray(m,h)))}else{for(var b=z[e-1],w=b>>>13,A=8191&b,x=(1<<n)-1,_=new a(32768),S=new a(x+1),L=Math.ceil(n/3),N=2*L,k=function(e){return(t[e]^t[e+1]<<L^t[e+2]<<N)&x},C=new s(25e3),P=new a(288),I=new a(32),F=0,T=0,E=(m=0,0),O=0,j=0;m<h;++m){var R=k(m),H=32767&m,W=S[R];if(_[H]=W,S[R]=H,O<=m){var V=h-m;if((F>7e3||E>24576)&&V>423){g=q(t,d,0,C,P,I,T,E,j,m-j,g),E=F=T=0,j=m;for(var G=0;G<286;++G)P[G]=0;for(G=0;G<30;++G)I[G]=0}var Y=2,X=0,J=A,K=H-W&32767;if(V>2&&R==k(m-K))for(var $=Math.min(w,V)-1,Z=Math.min(32767,m),Q=Math.min(258,V);K<=Z&&--J&&H!=W;){if(t[m+Y]==t[m+Y-K]){for(var tt=0;tt<Q&&t[m+tt]==t[m+tt-K];++tt);if(tt>Y){if(Y=tt,X=K,tt>$)break;var et=Math.min(K,tt-2),nt=0;for(G=0;G<et;++G){var rt=m-K+G+32768&32767,it=rt-_[rt]+32768&32767;it>nt&&(nt=it,W=rt)}}}K+=(H=W)-(W=_[H])+32768&32767}if(X){C[E++]=268435456|p[Y]<<18|v[X];var ot=31&p[Y],at=31&v[X];T+=u[ot]+l[at],++P[257+ot],++I[at],O=m+Y,++F}else C[E++]=t[m],++P[t[m]]}}g=q(t,d,c,C,P,I,T,E,j,m-j,g),c||(g=D(d,g,U))}return B(f,0,r+M(g)+i)}(t,null==e.level?6:e.level,null==e.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(t.length)))):12+e.mem,n,r,!i)};function W(t,e){void 0===e&&(e={});var n=function(){var t=1,e=0;return{p:function(n){for(var r=t,i=e,o=n.length,a=0;a!=o;){for(var s=Math.min(a+5552,o);a<s;++a)i+=r+=n[a];r%=65521,i%=65521}t=r,e=i},d:function(){return(t>>>8<<16|(255&e)<<8|e>>>8)+2*((255&t)<<23)}}}();n.p(t);var r=H(t,e,2,4);return function(t,e){var n=e.level,r=0==n?0:n<6?1:9==n?3:2;t[0]=120,t[1]=r<<6|(r?32-2*r:1)}(r,e),function(t,e,n){for(;n;++e)t[e]=n,n>>>=8}(r,r.length-4,n.d()),r}function V(t,e){return function(t,e,n){var r=t.length,i=!e||n,a=!n||n.i;n||(n={}),e||(e=new o(3*r));var s=function(t){var n=e.length;if(t>n){var r=new o(Math.max(2*n,t));r.set(e),e=r}},h=n.f||0,f=n.p||0,p=n.b||0,g=n.l,v=n.d,y=n.m,b=n.n,w=8*r;do{if(!g){n.f=h=P(t,f,1);var x=P(t,f+1,3);if(f+=3,!x){var _=t[(z=M(f)+4)-4]|t[z-3]<<8,S=z+_;if(S>r){if(a)throw"unexpected EOF";break}i&&s(p+_),e.set(t.subarray(z,S),p),n.b=p+=_,n.p=f=8*S;continue}if(1==x)g=L,v=k,y=9,b=5;else{if(2!=x)throw"invalid block type";var N=P(t,f,31)+257,F=P(t,f+10,15)+4,T=N+P(t,f+5,31)+1;f+=14;for(var E=new o(T),O=new o(19),j=0;j<F;++j)O[c[j]]=P(t,f+3*j,7);f+=3*F;var R=C(O),D=(1<<R)-1;if(!a&&f+T*(R+7)>w)break;var q=A(O,R,1);for(j=0;j<T;){var z,U=q[P(t,f,D)];if(f+=15&U,(z=U>>>4)<16)E[j++]=z;else{var H=0,W=0;for(16==z?(W=3+P(t,f,3),f+=2,H=E[j-1]):17==z?(W=3+P(t,f,7),f+=3):18==z&&(W=11+P(t,f,127),f+=7);W--;)E[j++]=H}}var V=E.subarray(0,N),G=E.subarray(N);y=C(V),b=C(G),g=A(V,y,1),v=A(G,b,1)}if(f>w)throw"unexpected EOF"}i&&s(p+131072);for(var Y=(1<<y)-1,X=(1<<b)-1,J=y+b+18;a||f+J<w;){var K=(H=g[I(t,f)&Y])>>>4;if((f+=15&H)>w)throw"unexpected EOF";if(!H)throw"invalid length/literal";if(K<256)e[p++]=K;else{if(256==K){g=null;break}var $=K-254;if(K>264){var Z=u[j=K-257];$=P(t,f,(1<<Z)-1)+d[j],f+=Z}var Q=v[I(t,f)&X],tt=Q>>>4;if(!Q)throw"invalid distance";if(f+=15&Q,G=m[tt],tt>3&&(Z=l[tt],G+=I(t,f)&(1<<Z)-1,f+=Z),f>w)throw"unexpected EOF";i&&s(p+131072);for(var et=p+$;p<et;p+=4)e[p]=e[p-G],e[p+1]=e[p+1-G],e[p+2]=e[p+2-G],e[p+3]=e[p+3-G];p=et}}n.l=g,n.p=f,n.b=p,g&&(h=1,n.m=y,n.d=v,n.n=b)}while(!h);return p==e.length?e:B(e,0,p)}((function(t){if(8!=(15&t[0])||t[0]>>>4>7||(t[0]<<8|t[1])%31)throw"invalid zlib data";if(32&t[1])throw"invalid zlib data: preset dictionaries not supported"}(t),t.subarray(2,-4)),e)}var G=function(){return"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this}();function Y(){G.console&&"function"==typeof G.console.log&&G.console.log.apply(G.console,arguments)}var X={log:Y,warn:function(t){G.console&&("function"==typeof G.console.warn?G.console.warn.apply(G.console,arguments):Y.call(null,arguments))},error:function(t){G.console&&("function"==typeof G.console.error?G.console.error.apply(G.console,arguments):Y(t))}};function J(t,e,n){var r=new XMLHttpRequest;r.open("GET",t),r.responseType="blob",r.onload=function(){tt(r.response,e,n)},r.onerror=function(){X.error("could not download file")},r.send()}function K(t){var e=new XMLHttpRequest;e.open("HEAD",t,!1);try{e.send()}catch(t){}return e.status>=200&&e.status<=299}function $(t){try{t.dispatchEvent(new MouseEvent("click"))}catch(n){var e=document.createEvent("MouseEvents");e.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),t.dispatchEvent(e)}}var Z,Q,tt=G.saveAs||("object"!==("undefined"==typeof window?"undefined":i()(window))||window!==G?function(){}:"undefined"!=typeof HTMLAnchorElement&&"download"in HTMLAnchorElement.prototype?function(t,e,n){var r=G.URL||G.webkitURL,i=document.createElement("a");e=e||t.name||"download",i.download=e,i.rel="noopener","string"==typeof t?(i.href=t,i.origin!==location.origin?K(i.href)?J(t,e,n):$(i,i.target="_blank"):$(i)):(i.href=r.createObjectURL(t),setTimeout((function(){r.revokeObjectURL(i.href)}),4e4),setTimeout((function(){$(i)}),0))}:"msSaveOrOpenBlob"in navigator?function(t,e,n){if(e=e||t.name||"download","string"==typeof t)if(K(t))J(t,e,n);else{var r=document.createElement("a");r.href=t,r.target="_blank",setTimeout((function(){$(r)}))}else navigator.msSaveOrOpenBlob(function(t,e){return void 0===e?e={autoBom:!1}:"object"!==i()(e)&&(X.warn("Deprecated: Expected third argument to be a object"),e={autoBom:!e}),e.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t.type)?new Blob([String.fromCharCode(65279),t],{type:t.type}):t}(t,n),e)}:function(t,e,n,r){if((r=r||open("","_blank"))&&(r.document.title=r.document.body.innerText="downloading..."),"string"==typeof t)return J(t,e,n);var o="application/octet-stream"===t.type,a=/constructor/i.test(G.HTMLElement)||G.safari,s=/CriOS\/[\d]+/.test(navigator.userAgent);if((s||o&&a)&&"object"===("undefined"==typeof FileReader?"undefined":i()(FileReader))){var u=new FileReader;u.onloadend=function(){var t=u.result;t=s?t:t.replace(/^data:[^;]*;/,"data:attachment/file;"),r?r.location.href=t:location=t,r=null},u.readAsDataURL(t)}else{var l=G.URL||G.webkitURL,c=l.createObjectURL(t);r?r.location=c:location.href=c,r=null,setTimeout((function(){l.revokeObjectURL(c)}),4e4)}});function et(t){var e;t=t||"",this.ok=!1,"#"==t.charAt(0)&&(t=t.substr(1,6)),t={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dodgerblue:"1e90ff",feldspar:"d19275",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgrey:"d3d3d3",lightgreen:"90ee90",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslateblue:"8470ff",lightslategray:"778899",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"00ff00",limegreen:"32cd32",linen:"faf0e6",magenta:"ff00ff",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370d8",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"d87093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",red:"ff0000",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",violetred:"d02090",wheat:"f5deb3",white:"ffffff",whitesmoke:"f5f5f5",yellow:"ffff00",yellowgreen:"9acd32"}[t=(t=t.replace(/ /g,"")).toLowerCase()]||t;for(var n=[{re:/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,example:["rgb(123, 234, 45)","rgb(255,234,245)"],process:function(t){return[parseInt(t[1]),parseInt(t[2]),parseInt(t[3])]}},{re:/^(\w{2})(\w{2})(\w{2})$/,example:["#00ff00","336699"],process:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/^(\w{1})(\w{1})(\w{1})$/,example:["#fb0","f0f"],process:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}}],r=0;r<n.length;r++){var i=n[r].re,o=n[r].process,a=i.exec(t);a&&(e=o(a),this.r=e[0],this.g=e[1],this.b=e[2],this.ok=!0)}this.r=this.r<0||isNaN(this.r)?0:this.r>255?255:this.r,this.g=this.g<0||isNaN(this.g)?0:this.g>255?255:this.g,this.b=this.b<0||isNaN(this.b)?0:this.b>255?255:this.b,this.toRGB=function(){return"rgb("+this.r+", "+this.g+", "+this.b+")"},this.toHex=function(){var t=this.r.toString(16),e=this.g.toString(16),n=this.b.toString(16);return 1==t.length&&(t="0"+t),1==e.length&&(e="0"+e),1==n.length&&(n="0"+n),"#"+t+e+n}}function nt(t,e){var n=t[0],r=t[1],i=t[2],o=t[3];n=it(n,r,i,o,e[0],7,-680876936),o=it(o,n,r,i,e[1],12,-389564586),i=it(i,o,n,r,e[2],17,606105819),r=it(r,i,o,n,e[3],22,-1044525330),n=it(n,r,i,o,e[4],7,-176418897),o=it(o,n,r,i,e[5],12,1200080426),i=it(i,o,n,r,e[6],17,-1473231341),r=it(r,i,o,n,e[7],22,-45705983),n=it(n,r,i,o,e[8],7,1770035416),o=it(o,n,r,i,e[9],12,-1958414417),i=it(i,o,n,r,e[10],17,-42063),r=it(r,i,o,n,e[11],22,-1990404162),n=it(n,r,i,o,e[12],7,1804603682),o=it(o,n,r,i,e[13],12,-40341101),i=it(i,o,n,r,e[14],17,-1502002290),n=ot(n,r=it(r,i,o,n,e[15],22,1236535329),i,o,e[1],5,-165796510),o=ot(o,n,r,i,e[6],9,-1069501632),i=ot(i,o,n,r,e[11],14,643717713),r=ot(r,i,o,n,e[0],20,-373897302),n=ot(n,r,i,o,e[5],5,-701558691),o=ot(o,n,r,i,e[10],9,38016083),i=ot(i,o,n,r,e[15],14,-660478335),r=ot(r,i,o,n,e[4],20,-405537848),n=ot(n,r,i,o,e[9],5,568446438),o=ot(o,n,r,i,e[14],9,-1019803690),i=ot(i,o,n,r,e[3],14,-187363961),r=ot(r,i,o,n,e[8],20,1163531501),n=ot(n,r,i,o,e[13],5,-1444681467),o=ot(o,n,r,i,e[2],9,-51403784),i=ot(i,o,n,r,e[7],14,1735328473),n=at(n,r=ot(r,i,o,n,e[12],20,-1926607734),i,o,e[5],4,-378558),o=at(o,n,r,i,e[8],11,-2022574463),i=at(i,o,n,r,e[11],16,1839030562),r=at(r,i,o,n,e[14],23,-35309556),n=at(n,r,i,o,e[1],4,-1530992060),o=at(o,n,r,i,e[4],11,1272893353),i=at(i,o,n,r,e[7],16,-155497632),r=at(r,i,o,n,e[10],23,-1094730640),n=at(n,r,i,o,e[13],4,681279174),o=at(o,n,r,i,e[0],11,-358537222),i=at(i,o,n,r,e[3],16,-722521979),r=at(r,i,o,n,e[6],23,76029189),n=at(n,r,i,o,e[9],4,-640364487),o=at(o,n,r,i,e[12],11,-421815835),i=at(i,o,n,r,e[15],16,530742520),n=st(n,r=at(r,i,o,n,e[2],23,-995338651),i,o,e[0],6,-198630844),o=st(o,n,r,i,e[7],10,1126891415),i=st(i,o,n,r,e[14],15,-1416354905),r=st(r,i,o,n,e[5],21,-57434055),n=st(n,r,i,o,e[12],6,1700485571),o=st(o,n,r,i,e[3],10,-1894986606),i=st(i,o,n,r,e[10],15,-1051523),r=st(r,i,o,n,e[1],21,-2054922799),n=st(n,r,i,o,e[8],6,1873313359),o=st(o,n,r,i,e[15],10,-30611744),i=st(i,o,n,r,e[6],15,-1560198380),r=st(r,i,o,n,e[13],21,1309151649),n=st(n,r,i,o,e[4],6,-145523070),o=st(o,n,r,i,e[11],10,-1120210379),i=st(i,o,n,r,e[2],15,718787259),r=st(r,i,o,n,e[9],21,-343485551),t[0]=gt(n,t[0]),t[1]=gt(r,t[1]),t[2]=gt(i,t[2]),t[3]=gt(o,t[3])}function rt(t,e,n,r,i,o){return e=gt(gt(e,t),gt(r,o)),gt(e<<i|e>>>32-i,n)}function it(t,e,n,r,i,o,a){return rt(e&n|~e&r,t,e,i,o,a)}function ot(t,e,n,r,i,o,a){return rt(e&r|n&~r,t,e,i,o,a)}function at(t,e,n,r,i,o,a){return rt(e^n^r,t,e,i,o,a)}function st(t,e,n,r,i,o,a){return rt(n^(e|~r),t,e,i,o,a)}function ut(t){var e,n=t.length,r=[1732584193,-271733879,-1732584194,271733878];for(e=64;e<=t.length;e+=64)nt(r,lt(t.substring(e-64,e)));t=t.substring(e-64);var i=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(e=0;e<t.length;e++)i[e>>2]|=t.charCodeAt(e)<<(e%4<<3);if(i[e>>2]|=128<<(e%4<<3),e>55)for(nt(r,i),e=0;e<16;e++)i[e]=0;return i[14]=8*n,nt(r,i),r}function lt(t){var e,n=[];for(e=0;e<64;e+=4)n[e>>2]=t.charCodeAt(e)+(t.charCodeAt(e+1)<<8)+(t.charCodeAt(e+2)<<16)+(t.charCodeAt(e+3)<<24);return n}Z=G.atob.bind(G),Q=G.btoa.bind(G);var ct="0123456789abcdef".split("");function ht(t){for(var e="",n=0;n<4;n++)e+=ct[t>>8*n+4&15]+ct[t>>8*n&15];return e}function ft(t){return String.fromCharCode((255&t)>>0,(65280&t)>>8,(16711680&t)>>16,(4278190080&t)>>24)}function dt(t){return ut(t).map(ft).join("")}var pt="5d41402abc4b2a76b9719d911017c592"!=function(t){for(var e=0;e<t.length;e++)t[e]=ht(t[e]);return t.join("")}(ut("hello"));function gt(t,e){if(pt){var n=(65535&t)+(65535&e);return(t>>16)+(e>>16)+(n>>16)<<16|65535&n}return t+e&4294967295}function mt(t,e){var n,r,i,o;if(t!==n){for(var a=(i=t,o=1+(256/t.length>>0),new Array(o+1).join(i)),s=[],u=0;u<256;u++)s[u]=u;var l=0;for(u=0;u<256;u++){var c=s[u];l=(l+c+a.charCodeAt(u))%256,s[u]=s[l],s[l]=c}n=t,r=s}else s=r;var h=e.length,f=0,d=0,p="";for(u=0;u<h;u++)d=(d+(c=s[f=(f+1)%256]))%256,s[f]=s[d],s[d]=c,a=s[(s[f]+s[d])%256],p+=String.fromCharCode(e.charCodeAt(u)^a);return p}var vt={print:4,modify:8,copy:16,"annot-forms":32};function yt(t,e,n,r){this.v=1,this.r=2;var i=192;t.forEach((function(t){if(void 0!==vt.perm)throw new Error("Invalid permission: "+t);i+=vt[t]})),this.padding="(¿N^NuAd\0NVÿú\b..\0¶Ðh>/\f©þdSiz";var o=(e+this.padding).substr(0,32),a=(n+this.padding).substr(0,32);this.O=this.processOwnerPassword(o,a),this.P=-(1+(255^i)),this.encryptionKey=dt(o+this.O+this.lsbFirstWord(this.P)+this.hexToBytes(r)).substr(0,5),this.U=mt(this.encryptionKey,this.padding)}function bt(t){if(/[^\u0000-\u00ff]/.test(t))throw new Error("Invalid PDF Name Object: "+t+", Only accept ASCII characters.");for(var e="",n=t.length,r=0;r<n;r++){var i=t.charCodeAt(r);e+=i<33||35===i||37===i||40===i||41===i||47===i||60===i||62===i||91===i||93===i||123===i||125===i||i>126?"#"+("0"+i.toString(16)).slice(-2):t[r]}return e}function wt(t){if("object"!==i()(t))throw new Error("Invalid Context passed to initialize PubSub (jsPDF-module)");var e={};this.subscribe=function(t,n,r){if(r=r||!1,"string"!=typeof t||"function"!=typeof n||"boolean"!=typeof r)throw new Error("Invalid arguments passed to PubSub.subscribe (jsPDF-module)");e.hasOwnProperty(t)||(e[t]={});var i=Math.random().toString(35);return e[t][i]=[n,!!r],i},this.unsubscribe=function(t){for(var n in e)if(e[n][t])return delete e[n][t],0===Object.keys(e[n]).length&&delete e[n],!0;return!1},this.publish=function(n){if(e.hasOwnProperty(n)){var r=Array.prototype.slice.call(arguments,1),i=[];for(var o in e[n]){var a=e[n][o];try{a[0].apply(t,r)}catch(n){G.console&&X.error("jsPDF PubSub Error",n.message,n)}a[1]&&i.push(o)}i.length&&i.forEach(this.unsubscribe)}},this.getTopics=function(){return e}}function At(t){if(!(this instanceof At))return new At(t);var e="opacity,stroke-opacity".split(",");for(var n in t)t.hasOwnProperty(n)&&e.indexOf(n)>=0&&(this[n]=t[n]);this.id="",this.objectNumber=-1}function xt(t,e){this.gState=t,this.matrix=e,this.id="",this.objectNumber=-1}function _t(t,e,n,r,i){if(!(this instanceof _t))return new _t(t,e,n,r,i);this.type="axial"===t?2:3,this.coords=e,this.colors=n,xt.call(this,r,i)}function St(t,e,n,r,i){if(!(this instanceof St))return new St(t,e,n,r,i);this.boundingBox=t,this.xStep=e,this.yStep=n,this.stream="",this.cloneIndex=0,xt.call(this,r,i)}function Lt(t){var e,n="string"==typeof arguments[0]?arguments[0]:"p",r=arguments[1],o=arguments[2],a=arguments[3],s=[],u=1,l=16,c="S",h=null;"object"===i()(t=t||{})&&(n=t.orientation,r=t.unit||r,o=t.format||o,a=t.compress||t.compressPdf||a,null!==(h=t.encryption||null)&&(h.userPassword=h.userPassword||"",h.ownerPassword=h.ownerPassword||"",h.userPermissions=h.userPermissions||[]),u="number"==typeof t.userUnit?Math.abs(t.userUnit):1,void 0!==t.precision&&(e=t.precision),void 0!==t.floatPrecision&&(l=t.floatPrecision),c=t.defaultPathOperation||"S"),s=t.filters||(!0===a?["FlateEncode"]:s),r=r||"mm",n=(""+(n||"P")).toLowerCase();var f=t.putOnlyUsedFonts||!1,d={},p={internal:{},__private__:{}};p.__private__.PubSub=wt;var g="1.3",m=p.__private__.getPdfVersion=function(){return g};p.__private__.setPdfVersion=function(t){g=t};var v={a0:[2383.94,3370.39],a1:[1683.78,2383.94],a2:[1190.55,1683.78],a3:[841.89,1190.55],a4:[595.28,841.89],a5:[419.53,595.28],a6:[297.64,419.53],a7:[209.76,297.64],a8:[147.4,209.76],a9:[104.88,147.4],a10:[73.7,104.88],b0:[2834.65,4008.19],b1:[2004.09,2834.65],b2:[1417.32,2004.09],b3:[1000.63,1417.32],b4:[708.66,1000.63],b5:[498.9,708.66],b6:[354.33,498.9],b7:[249.45,354.33],b8:[175.75,249.45],b9:[124.72,175.75],b10:[87.87,124.72],c0:[2599.37,3676.54],c1:[1836.85,2599.37],c2:[1298.27,1836.85],c3:[918.43,1298.27],c4:[649.13,918.43],c5:[459.21,649.13],c6:[323.15,459.21],c7:[229.61,323.15],c8:[161.57,229.61],c9:[113.39,161.57],c10:[79.37,113.39],dl:[311.81,623.62],letter:[612,792],"government-letter":[576,756],legal:[612,1008],"junior-legal":[576,360],ledger:[1224,792],tabloid:[792,1224],"credit-card":[153,243]};p.__private__.getPageFormats=function(){return v};var y=p.__private__.getPageFormat=function(t){return v[t]};o=o||"a4";var b="compat",w="advanced",A=b;function x(){this.saveGraphicsState(),rt(new Wt(xt,0,0,-xt,0,xn()*xt).toString()+" cm"),this.setFontSize(this.getFontSize()/xt),c="n",A=w}function _(){this.restoreGraphicsState(),c="S",A=b}var S=p.__private__.combineFontStyleAndFontWeight=function(t,e){if("bold"==t&&"normal"==e||"bold"==t&&400==e||"normal"==t&&"italic"==e||"bold"==t&&"italic"==e)throw new Error("Invalid Combination of fontweight and fontstyle");return e&&(t=400==e||"normal"===e?"italic"===t?"italic":"normal":700!=e&&"bold"!==e||"normal"!==t?(700==e?"bold":e)+""+t:"bold"),t};p.advancedAPI=function(t){var e=A===b;return e&&x.call(this),"function"!=typeof t||(t(this),e&&_.call(this)),this},p.compatAPI=function(t){var e=A===w;return e&&_.call(this),"function"!=typeof t||(t(this),e&&x.call(this)),this},p.isAdvancedAPI=function(){return A===w};var L,N=function(t){if(A!==w)throw new Error(t+" is only available in 'advanced' API mode. You need to call advancedAPI() first.")},k=p.roundToPrecision=p.__private__.roundToPrecision=function(t,n){var r=e||n;if(isNaN(t)||isNaN(r))throw new Error("Invalid argument passed to jsPDF.roundToPrecision");return t.toFixed(r).replace(/0+$/,"")};L=p.hpf=p.__private__.hpf="number"==typeof l?function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.hpf");return k(t,l)}:"smart"===l?function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.hpf");return k(t,t>-1&&t<1?16:5)}:function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.hpf");return k(t,16)};var C=p.f2=p.__private__.f2=function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.f2");return k(t,2)},P=p.__private__.f3=function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.f3");return k(t,3)},I=p.scale=p.__private__.scale=function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.scale");return A===b?t*xt:A===w?t:void 0},M=function(t){return I(function(t){return A===b?xn()-t:A===w?t:void 0}(t))};p.__private__.setPrecision=p.setPrecision=function(t){"number"==typeof parseInt(t,10)&&(e=parseInt(t,10))};var B,F="00000000000000000000000000000000",T=p.__private__.getFileId=function(){return F},E=p.__private__.setFileId=function(t){return F=void 0!==t&&/^[a-fA-F0-9]{32}$/.test(t)?t.toUpperCase():F.split("").map((function(){return"ABCDEF0123456789".charAt(Math.floor(16*Math.random()))})).join(""),null!==h&&(Me=new yt(h.userPermissions,h.userPassword,h.ownerPassword,F)),F};p.setFileId=function(t){return E(t),this},p.getFileId=function(){return T()};var O=p.__private__.convertDateToPDFDate=function(t){var e=t.getTimezoneOffset(),n=e<0?"+":"-",r=Math.floor(Math.abs(e/60)),i=Math.abs(e%60),o=[n,z(r),"'",z(i),"'"].join("");return["D:",t.getFullYear(),z(t.getMonth()+1),z(t.getDate()),z(t.getHours()),z(t.getMinutes()),z(t.getSeconds()),o].join("")},j=p.__private__.convertPDFDateToDate=function(t){var e=parseInt(t.substr(2,4),10),n=parseInt(t.substr(6,2),10)-1,r=parseInt(t.substr(8,2),10),i=parseInt(t.substr(10,2),10),o=parseInt(t.substr(12,2),10),a=parseInt(t.substr(14,2),10);return new Date(e,n,r,i,o,a,0)},R=p.__private__.setCreationDate=function(t){var e;if(void 0===t&&(t=new Date),t instanceof Date)e=O(t);else{if(!/^D:(20[0-2][0-9]|203[0-7]|19[7-9][0-9])(0[0-9]|1[0-2])([0-2][0-9]|3[0-1])(0[0-9]|1[0-9]|2[0-3])(0[0-9]|[1-5][0-9])(0[0-9]|[1-5][0-9])(\+0[0-9]|\+1[0-4]|-0[0-9]|-1[0-1])'(0[0-9]|[1-5][0-9])'?$/.test(t))throw new Error("Invalid argument passed to jsPDF.setCreationDate");e=t}return B=e},D=p.__private__.getCreationDate=function(t){var e=B;return"jsDate"===t&&(e=j(B)),e};p.setCreationDate=function(t){return R(t),this},p.getCreationDate=function(t){return D(t)};var q,z=p.__private__.padd2=function(t){return("0"+parseInt(t)).slice(-2)},U=p.__private__.padd2Hex=function(t){return("00"+(t=t.toString())).substr(t.length)},H=0,W=[],V=[],Y=0,J=[],K=[],$=!1,Z=V;p.__private__.setCustomOutputDestination=function(t){$=!0,Z=t};var nt=function(t){$||(Z=t)};p.__private__.resetCustomOutputDestination=function(){$=!1,Z=V};var rt=p.__private__.out=function(t){return t=t.toString(),Y+=t.length+1,Z.push(t),Z},it=p.__private__.write=function(t){return rt(1===arguments.length?t.toString():Array.prototype.join.call(arguments," "))},ot=p.__private__.getArrayBuffer=function(t){for(var e=t.length,n=new ArrayBuffer(e),r=new Uint8Array(n);e--;)r[e]=t.charCodeAt(e);return n},at=[["Helvetica","helvetica","normal","WinAnsiEncoding"],["Helvetica-Bold","helvetica","bold","WinAnsiEncoding"],["Helvetica-Oblique","helvetica","italic","WinAnsiEncoding"],["Helvetica-BoldOblique","helvetica","bolditalic","WinAnsiEncoding"],["Courier","courier","normal","WinAnsiEncoding"],["Courier-Bold","courier","bold","WinAnsiEncoding"],["Courier-Oblique","courier","italic","WinAnsiEncoding"],["Courier-BoldOblique","courier","bolditalic","WinAnsiEncoding"],["Times-Roman","times","normal","WinAnsiEncoding"],["Times-Bold","times","bold","WinAnsiEncoding"],["Times-Italic","times","italic","WinAnsiEncoding"],["Times-BoldItalic","times","bolditalic","WinAnsiEncoding"],["ZapfDingbats","zapfdingbats","normal",null],["Symbol","symbol","normal",null]];p.__private__.getStandardFonts=function(){return at};var st=t.fontSize||16;p.__private__.setFontSize=p.setFontSize=function(t){return st=A===w?t/xt:t,this};var ut,lt=p.__private__.getFontSize=p.getFontSize=function(){return A===b?st:st*xt},ct=t.R2L||!1;p.__private__.setR2L=p.setR2L=function(t){return ct=t,this},p.__private__.getR2L=p.getR2L=function(){return ct};var ht,ft=p.__private__.setZoomMode=function(t){if(/^(?:\d+\.\d*|\d*\.\d+|\d+)%$/.test(t))ut=t;else if(isNaN(t)){if(-1===[void 0,null,"fullwidth","fullheight","fullpage","original"].indexOf(t))throw new Error('zoom must be Integer (e.g. 2), a percentage Value (e.g. 300%) or fullwidth, fullheight, fullpage, original. "'+t+'" is not recognized.');ut=t}else ut=parseInt(t,10)};p.__private__.getZoomMode=function(){return ut};var dt,pt=p.__private__.setPageMode=function(t){if(-1==[void 0,null,"UseNone","UseOutlines","UseThumbs","FullScreen"].indexOf(t))throw new Error('Page mode must be one of UseNone, UseOutlines, UseThumbs, or FullScreen. "'+t+'" is not recognized.');ht=t};p.__private__.getPageMode=function(){return ht};var gt=p.__private__.setLayoutMode=function(t){if(-1==[void 0,null,"continuous","single","twoleft","tworight","two"].indexOf(t))throw new Error('Layout mode must be one of continuous, single, twoleft, tworight. "'+t+'" is not recognized.');dt=t};p.__private__.getLayoutMode=function(){return dt},p.__private__.setDisplayMode=p.setDisplayMode=function(t,e,n){return ft(t),gt(e),pt(n),this};var mt={title:"",subject:"",author:"",keywords:"",creator:""};p.__private__.getDocumentProperty=function(t){if(-1===Object.keys(mt).indexOf(t))throw new Error("Invalid argument passed to jsPDF.getDocumentProperty");return mt[t]},p.__private__.getDocumentProperties=function(){return mt},p.__private__.setDocumentProperties=p.setProperties=p.setDocumentProperties=function(t){for(var e in mt)mt.hasOwnProperty(e)&&t[e]&&(mt[e]=t[e]);return this},p.__private__.setDocumentProperty=function(t,e){if(-1===Object.keys(mt).indexOf(t))throw new Error("Invalid arguments passed to jsPDF.setDocumentProperty");return mt[t]=e};var vt,xt,Nt,kt,Ct,Pt={},It={},Mt=[],Bt={},Ft={},Tt={},Et={},Ot=null,jt=0,Rt=[],Dt=new wt(p),qt=t.hotfixes||[],zt={},Ut={},Ht=[],Wt=function t(e,n,r,i,o,a){if(!(this instanceof t))return new t(e,n,r,i,o,a);isNaN(e)&&(e=1),isNaN(n)&&(n=0),isNaN(r)&&(r=0),isNaN(i)&&(i=1),isNaN(o)&&(o=0),isNaN(a)&&(a=0),this._matrix=[e,n,r,i,o,a]};Object.defineProperty(Wt.prototype,"sx",{get:function(){return this._matrix[0]},set:function(t){this._matrix[0]=t}}),Object.defineProperty(Wt.prototype,"shy",{get:function(){return this._matrix[1]},set:function(t){this._matrix[1]=t}}),Object.defineProperty(Wt.prototype,"shx",{get:function(){return this._matrix[2]},set:function(t){this._matrix[2]=t}}),Object.defineProperty(Wt.prototype,"sy",{get:function(){return this._matrix[3]},set:function(t){this._matrix[3]=t}}),Object.defineProperty(Wt.prototype,"tx",{get:function(){return this._matrix[4]},set:function(t){this._matrix[4]=t}}),Object.defineProperty(Wt.prototype,"ty",{get:function(){return this._matrix[5]},set:function(t){this._matrix[5]=t}}),Object.defineProperty(Wt.prototype,"a",{get:function(){return this._matrix[0]},set:function(t){this._matrix[0]=t}}),Object.defineProperty(Wt.prototype,"b",{get:function(){return this._matrix[1]},set:function(t){this._matrix[1]=t}}),Object.defineProperty(Wt.prototype,"c",{get:function(){return this._matrix[2]},set:function(t){this._matrix[2]=t}}),Object.defineProperty(Wt.prototype,"d",{get:function(){return this._matrix[3]},set:function(t){this._matrix[3]=t}}),Object.defineProperty(Wt.prototype,"e",{get:function(){return this._matrix[4]},set:function(t){this._matrix[4]=t}}),Object.defineProperty(Wt.prototype,"f",{get:function(){return this._matrix[5]},set:function(t){this._matrix[5]=t}}),Object.defineProperty(Wt.prototype,"rotation",{get:function(){return Math.atan2(this.shx,this.sx)}}),Object.defineProperty(Wt.prototype,"scaleX",{get:function(){return this.decompose().scale.sx}}),Object.defineProperty(Wt.prototype,"scaleY",{get:function(){return this.decompose().scale.sy}}),Object.defineProperty(Wt.prototype,"isIdentity",{get:function(){return 1===this.sx&&0===this.shy&&0===this.shx&&1===this.sy&&0===this.tx&&0===this.ty}}),Wt.prototype.join=function(t){return[this.sx,this.shy,this.shx,this.sy,this.tx,this.ty].map(L).join(t)},Wt.prototype.multiply=function(t){var e=t.sx*this.sx+t.shy*this.shx,n=t.sx*this.shy+t.shy*this.sy,r=t.shx*this.sx+t.sy*this.shx,i=t.shx*this.shy+t.sy*this.sy,o=t.tx*this.sx+t.ty*this.shx+this.tx,a=t.tx*this.shy+t.ty*this.sy+this.ty;return new Wt(e,n,r,i,o,a)},Wt.prototype.decompose=function(){var t=this.sx,e=this.shy,n=this.shx,r=this.sy,i=this.tx,o=this.ty,a=Math.sqrt(t*t+e*e),s=(t/=a)*n+(e/=a)*r;n-=t*s,r-=e*s;var u=Math.sqrt(n*n+r*r);return s/=u,t*(r/=u)<e*(n/=u)&&(t=-t,e=-e,s=-s,a=-a),{scale:new Wt(a,0,0,u,0,0),translate:new Wt(1,0,0,1,i,o),rotate:new Wt(t,e,-e,t,0,0),skew:new Wt(1,0,s,1,0,0)}},Wt.prototype.toString=function(t){return this.join(" ")},Wt.prototype.inversed=function(){var t=this.sx,e=this.shy,n=this.shx,r=this.sy,i=this.tx,o=this.ty,a=1/(t*r-e*n),s=r*a,u=-e*a,l=-n*a,c=t*a;return new Wt(s,u,l,c,-s*i-l*o,-u*i-c*o)},Wt.prototype.applyToPoint=function(t){var e=t.x*this.sx+t.y*this.shx+this.tx,n=t.x*this.shy+t.y*this.sy+this.ty;return new gn(e,n)},Wt.prototype.applyToRectangle=function(t){var e=this.applyToPoint(t),n=this.applyToPoint(new gn(t.x+t.w,t.y+t.h));return new mn(e.x,e.y,n.x-e.x,n.y-e.y)},Wt.prototype.clone=function(){var t=this.sx,e=this.shy,n=this.shx,r=this.sy,i=this.tx,o=this.ty;return new Wt(t,e,n,r,i,o)},p.Matrix=Wt;var Vt=p.matrixMult=function(t,e){return e.multiply(t)},Gt=new Wt(1,0,0,1,0,0);p.unitMatrix=p.identityMatrix=Gt;var Yt=function(t,e){if(!Ft[t]){var n=(e instanceof _t?"Sh":"P")+(Object.keys(Bt).length+1).toString(10);e.id=n,Ft[t]=n,Bt[n]=e,Dt.publish("addPattern",e)}};p.ShadingPattern=_t,p.TilingPattern=St,p.addShadingPattern=function(t,e){return N("addShadingPattern()"),Yt(t,e),this},p.beginTilingPattern=function(t){N("beginTilingPattern()"),yn(t.boundingBox[0],t.boundingBox[1],t.boundingBox[2]-t.boundingBox[0],t.boundingBox[3]-t.boundingBox[1],t.matrix)},p.endTilingPattern=function(t,e){N("endTilingPattern()"),e.stream=K[q].join("\n"),Yt(t,e),Dt.publish("endTilingPattern",e),Ht.pop().restore()};var Xt,Jt=p.__private__.newObject=function(){var t=Kt();return $t(t,!0),t},Kt=p.__private__.newObjectDeferred=function(){return H++,W[H]=function(){return Y},H},$t=function(t,e){return e="boolean"==typeof e&&e,W[t]=Y,e&&rt(t+" 0 obj"),t},Zt=p.__private__.newAdditionalObject=function(){var t={objId:Kt(),content:""};return J.push(t),t},Qt=Kt(),te=Kt(),ee=p.__private__.decodeColorString=function(t){var e=t.split(" ");if(2!==e.length||"g"!==e[1]&&"G"!==e[1])5!==e.length||"k"!==e[4]&&"K"!==e[4]||(e=[(1-e[0])*(1-e[3]),(1-e[1])*(1-e[3]),(1-e[2])*(1-e[3]),"r"]);else{var n=parseFloat(e[0]);e=[n,n,n,"r"]}for(var r="#",i=0;i<3;i++)r+=("0"+Math.floor(255*parseFloat(e[i])).toString(16)).slice(-2);return r},ne=p.__private__.encodeColorString=function(t){var e;"string"==typeof t&&(t={ch1:t});var n=t.ch1,r=t.ch2,o=t.ch3,a=t.ch4,s="draw"===t.pdfColorType?["G","RG","K"]:["g","rg","k"];if("string"==typeof n&&"#"!==n.charAt(0)){var u=new et(n);if(u.ok)n=u.toHex();else if(!/^\d*\.?\d*$/.test(n))throw new Error('Invalid color "'+n+'" passed to jsPDF.encodeColorString.')}if("string"==typeof n&&/^#[0-9A-Fa-f]{3}$/.test(n)&&(n="#"+n[1]+n[1]+n[2]+n[2]+n[3]+n[3]),"string"==typeof n&&/^#[0-9A-Fa-f]{6}$/.test(n)){var l=parseInt(n.substr(1),16);n=l>>16&255,r=l>>8&255,o=255&l}if(void 0===r||void 0===a&&n===r&&r===o)e="string"==typeof n?n+" "+s[0]:2===t.precision?C(n/255)+" "+s[0]:P(n/255)+" "+s[0];else if(void 0===a||"object"===i()(a)){if(a&&!isNaN(a.a)&&0===a.a)return["1.","1.","1.",s[1]].join(" ");e="string"==typeof n?[n,r,o,s[1]].join(" "):2===t.precision?[C(n/255),C(r/255),C(o/255),s[1]].join(" "):[P(n/255),P(r/255),P(o/255),s[1]].join(" ")}else e="string"==typeof n?[n,r,o,a,s[2]].join(" "):2===t.precision?[C(n),C(r),C(o),C(a),s[2]].join(" "):[P(n),P(r),P(o),P(a),s[2]].join(" ");return e},re=p.__private__.getFilters=function(){return s},ie=p.__private__.putStream=function(t){var e=(t=t||{}).data||"",n=t.filters||re(),r=t.alreadyAppliedFilters||[],i=t.addLength1||!1,o=e.length,a=t.objectId,s=function(t){return t};if(null!==h&&void 0===a)throw new Error("ObjectId must be passed to putStream for file encryption");null!==h&&(s=Me.encryptor(a,0));var u={};!0===n&&(n=["FlateEncode"]);var l=t.additionalKeyValues||[],c=(u=void 0!==Lt.API.processDataByFilters?Lt.API.processDataByFilters(e,n):{data:e,reverseChain:[]}).reverseChain+(Array.isArray(r)?r.join(" "):r.toString());if(0!==u.data.length&&(l.push({key:"Length",value:u.data.length}),!0===i&&l.push({key:"Length1",value:o})),0!=c.length)if(c.split("/").length-1==1)l.push({key:"Filter",value:c});else{l.push({key:"Filter",value:"["+c+"]"});for(var f=0;f<l.length;f+=1)if("DecodeParms"===l[f].key){for(var d=[],p=0;p<u.reverseChain.split("/").length-1;p+=1)d.push("null");d.push(l[f].value),l[f].value="["+d.join(" ")+"]"}}rt("<<");for(var g=0;g<l.length;g++)rt("/"+l[g].key+" "+l[g].value);rt(">>"),0!==u.data.length&&(rt("stream"),rt(s(u.data)),rt("endstream"))},oe=p.__private__.putPage=function(t){var e=t.number,n=t.data,r=t.objId,i=t.contentsObjId;$t(r,!0),rt("<</Type /Page"),rt("/Parent "+t.rootDictionaryObjId+" 0 R"),rt("/Resources "+t.resourceDictionaryObjId+" 0 R"),rt("/MediaBox ["+parseFloat(L(t.mediaBox.bottomLeftX))+" "+parseFloat(L(t.mediaBox.bottomLeftY))+" "+L(t.mediaBox.topRightX)+" "+L(t.mediaBox.topRightY)+"]"),null!==t.cropBox&&rt("/CropBox ["+L(t.cropBox.bottomLeftX)+" "+L(t.cropBox.bottomLeftY)+" "+L(t.cropBox.topRightX)+" "+L(t.cropBox.topRightY)+"]"),null!==t.bleedBox&&rt("/BleedBox ["+L(t.bleedBox.bottomLeftX)+" "+L(t.bleedBox.bottomLeftY)+" "+L(t.bleedBox.topRightX)+" "+L(t.bleedBox.topRightY)+"]"),null!==t.trimBox&&rt("/TrimBox ["+L(t.trimBox.bottomLeftX)+" "+L(t.trimBox.bottomLeftY)+" "+L(t.trimBox.topRightX)+" "+L(t.trimBox.topRightY)+"]"),null!==t.artBox&&rt("/ArtBox ["+L(t.artBox.bottomLeftX)+" "+L(t.artBox.bottomLeftY)+" "+L(t.artBox.topRightX)+" "+L(t.artBox.topRightY)+"]"),"number"==typeof t.userUnit&&1!==t.userUnit&&rt("/UserUnit "+t.userUnit),Dt.publish("putPage",{objId:r,pageContext:Rt[e],pageNumber:e,page:n}),rt("/Contents "+i+" 0 R"),rt(">>"),rt("endobj");var o=n.join("\n");return A===w&&(o+="\nQ"),$t(i,!0),ie({data:o,filters:re(),objectId:i}),rt("endobj"),r},ae=p.__private__.putPages=function(){var t,e,n=[];for(t=1;t<=jt;t++)Rt[t].objId=Kt(),Rt[t].contentsObjId=Kt();for(t=1;t<=jt;t++)n.push(oe({number:t,data:K[t],objId:Rt[t].objId,contentsObjId:Rt[t].contentsObjId,mediaBox:Rt[t].mediaBox,cropBox:Rt[t].cropBox,bleedBox:Rt[t].bleedBox,trimBox:Rt[t].trimBox,artBox:Rt[t].artBox,userUnit:Rt[t].userUnit,rootDictionaryObjId:Qt,resourceDictionaryObjId:te}));$t(Qt,!0),rt("<</Type /Pages");var r="/Kids [";for(e=0;e<jt;e++)r+=n[e]+" 0 R ";rt(r+"]"),rt("/Count "+jt),rt(">>"),rt("endobj"),Dt.publish("postPutPages")},se=function(t){Dt.publish("putFont",{font:t,out:rt,newObject:Jt,putStream:ie}),!0!==t.isAlreadyPutted&&(t.objectNumber=Jt(),rt("<<"),rt("/Type /Font"),rt("/BaseFont /"+bt(t.postScriptName)),rt("/Subtype /Type1"),"string"==typeof t.encoding&&rt("/Encoding /"+t.encoding),rt("/FirstChar 32"),rt("/LastChar 255"),rt(">>"),rt("endobj"))},ue=function(t){t.objectNumber=Jt();var e=[];e.push({key:"Type",value:"/XObject"}),e.push({key:"Subtype",value:"/Form"}),e.push({key:"BBox",value:"["+[L(t.x),L(t.y),L(t.x+t.width),L(t.y+t.height)].join(" ")+"]"}),e.push({key:"Matrix",value:"["+t.matrix.toString()+"]"});var n=t.pages[1].join("\n");ie({data:n,additionalKeyValues:e,objectId:t.objectNumber}),rt("endobj")},le=function(t,e){e||(e=21);var n=Jt(),r=function(t,e){var n,r=[],i=1/(e-1);for(n=0;n<1;n+=i)r.push(n);if(r.push(1),0!=t[0].offset){var o={offset:0,color:t[0].color};t.unshift(o)}if(1!=t[t.length-1].offset){var a={offset:1,color:t[t.length-1].color};t.push(a)}for(var s="",u=0,l=0;l<r.length;l++){for(n=r[l];n>t[u+1].offset;)u++;var c=t[u].offset,h=(n-c)/(t[u+1].offset-c),f=t[u].color,d=t[u+1].color;s+=U(Math.round((1-h)*f[0]+h*d[0]).toString(16))+U(Math.round((1-h)*f[1]+h*d[1]).toString(16))+U(Math.round((1-h)*f[2]+h*d[2]).toString(16))}return s.trim()}(t.colors,e),i=[];i.push({key:"FunctionType",value:"0"}),i.push({key:"Domain",value:"[0.0 1.0]"}),i.push({key:"Size",value:"["+e+"]"}),i.push({key:"BitsPerSample",value:"8"}),i.push({key:"Range",value:"[0.0 1.0 0.0 1.0 0.0 1.0]"}),i.push({key:"Decode",value:"[0.0 1.0 0.0 1.0 0.0 1.0]"}),ie({data:r,additionalKeyValues:i,alreadyAppliedFilters:["/ASCIIHexDecode"],objectId:n}),rt("endobj"),t.objectNumber=Jt(),rt("<< /ShadingType "+t.type),rt("/ColorSpace /DeviceRGB");var o="/Coords ["+L(parseFloat(t.coords[0]))+" "+L(parseFloat(t.coords[1]))+" ";2===t.type?o+=L(parseFloat(t.coords[2]))+" "+L(parseFloat(t.coords[3])):o+=L(parseFloat(t.coords[2]))+" "+L(parseFloat(t.coords[3]))+" "+L(parseFloat(t.coords[4]))+" "+L(parseFloat(t.coords[5])),rt(o+="]"),t.matrix&&rt("/Matrix ["+t.matrix.toString()+"]"),rt("/Function "+n+" 0 R"),rt("/Extend [true true]"),rt(">>"),rt("endobj")},ce=function(t,e){var n=Kt(),r=Jt();e.push({resourcesOid:n,objectOid:r}),t.objectNumber=r;var i=[];i.push({key:"Type",value:"/Pattern"}),i.push({key:"PatternType",value:"1"}),i.push({key:"PaintType",value:"1"}),i.push({key:"TilingType",value:"1"}),i.push({key:"BBox",value:"["+t.boundingBox.map(L).join(" ")+"]"}),i.push({key:"XStep",value:L(t.xStep)}),i.push({key:"YStep",value:L(t.yStep)}),i.push({key:"Resources",value:n+" 0 R"}),t.matrix&&i.push({key:"Matrix",value:"["+t.matrix.toString()+"]"}),ie({data:t.stream,additionalKeyValues:i,objectId:t.objectNumber}),rt("endobj")},he=function(t){for(var e in t.objectNumber=Jt(),rt("<<"),t)switch(e){case"opacity":rt("/ca "+C(t[e]));break;case"stroke-opacity":rt("/CA "+C(t[e]))}rt(">>"),rt("endobj")},fe=function(t){$t(t.resourcesOid,!0),rt("<<"),rt("/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]"),function(){for(var t in rt("/Font <<"),Pt)Pt.hasOwnProperty(t)&&(!1===f||!0===f&&d.hasOwnProperty(t))&&rt("/"+t+" "+Pt[t].objectNumber+" 0 R");rt(">>")}(),function(){if(Object.keys(Bt).length>0){for(var t in rt("/Shading <<"),Bt)Bt.hasOwnProperty(t)&&Bt[t]instanceof _t&&Bt[t].objectNumber>=0&&rt("/"+t+" "+Bt[t].objectNumber+" 0 R");Dt.publish("putShadingPatternDict"),rt(">>")}}(),function(t){if(Object.keys(Bt).length>0){for(var e in rt("/Pattern <<"),Bt)Bt.hasOwnProperty(e)&&Bt[e]instanceof p.TilingPattern&&Bt[e].objectNumber>=0&&Bt[e].objectNumber<t&&rt("/"+e+" "+Bt[e].objectNumber+" 0 R");Dt.publish("putTilingPatternDict"),rt(">>")}}(t.objectOid),function(){if(Object.keys(Tt).length>0){var t;for(t in rt("/ExtGState <<"),Tt)Tt.hasOwnProperty(t)&&Tt[t].objectNumber>=0&&rt("/"+t+" "+Tt[t].objectNumber+" 0 R");Dt.publish("putGStateDict"),rt(">>")}}(),function(){for(var t in rt("/XObject <<"),zt)zt.hasOwnProperty(t)&&zt[t].objectNumber>=0&&rt("/"+t+" "+zt[t].objectNumber+" 0 R");Dt.publish("putXobjectDict"),rt(">>")}(),rt(">>"),rt("endobj")},de=function(t){It[t.fontName]=It[t.fontName]||{},It[t.fontName][t.fontStyle]=t.id},pe=function(t,e,n,r,i){var o={id:"F"+(Object.keys(Pt).length+1).toString(10),postScriptName:t,fontName:e,fontStyle:n,encoding:r,isStandardFont:i||!1,metadata:{}};return Dt.publish("addFont",{font:o,instance:this}),Pt[o.id]=o,de(o),o.id},ge=p.__private__.pdfEscape=p.pdfEscape=function(t,e){return function(t,e){var n,r,i,o,a,s,u,l,c;if(i=(e=e||{}).sourceEncoding||"Unicode",a=e.outputEncoding,(e.autoencode||a)&&Pt[vt].metadata&&Pt[vt].metadata[i]&&Pt[vt].metadata[i].encoding&&(o=Pt[vt].metadata[i].encoding,!a&&Pt[vt].encoding&&(a=Pt[vt].encoding),!a&&o.codePages&&(a=o.codePages[0]),"string"==typeof a&&(a=o[a]),a)){for(u=!1,s=[],n=0,r=t.length;n<r;n++)(l=a[t.charCodeAt(n)])?s.push(String.fromCharCode(l)):s.push(t[n]),s[n].charCodeAt(0)>>8&&(u=!0);t=s.join("")}for(n=t.length;void 0===u&&0!==n;)t.charCodeAt(n-1)>>8&&(u=!0),n--;if(!u)return t;for(s=e.noBOM?[]:[254,255],n=0,r=t.length;n<r;n++){if((c=(l=t.charCodeAt(n))>>8)>>8)throw new Error("Character at position "+n+" of string '"+t+"' exceeds 16bits. Cannot be encoded into UCS-2 BE");s.push(c),s.push(l-(c<<8))}return String.fromCharCode.apply(void 0,s)}(t,e).replace(/\\/g,"\\\\").replace(/\(/g,"\\(").replace(/\)/g,"\\)")},me=p.__private__.beginPage=function(t){K[++jt]=[],Rt[jt]={objId:0,contentsObjId:0,userUnit:Number(u),artBox:null,bleedBox:null,cropBox:null,trimBox:null,mediaBox:{bottomLeftX:0,bottomLeftY:0,topRightX:Number(t[0]),topRightY:Number(t[1])}},be(jt),nt(K[q])},ve=function(t,e){var r,i,a;switch(n=e||n,"string"==typeof t&&(r=y(t.toLowerCase()),Array.isArray(r)&&(i=r[0],a=r[1])),Array.isArray(t)&&(i=t[0]*xt,a=t[1]*xt),isNaN(i)&&(i=o[0],a=o[1]),(i>14400||a>14400)&&(X.warn("A page in a PDF can not be wider or taller than 14400 userUnit. jsPDF limits the width/height to 14400"),i=Math.min(14400,i),a=Math.min(14400,a)),o=[i,a],n.substr(0,1)){case"l":a>i&&(o=[a,i]);break;case"p":i>a&&(o=[a,i])}me(o),$e(Je),rt(an),0!==fn&&rt(fn+" J"),0!==dn&&rt(dn+" j"),Dt.publish("addPage",{pageNumber:jt})},ye=function(t){t>0&&t<=jt&&(K.splice(t,1),Rt.splice(t,1),jt--,q>jt&&(q=jt),this.setPage(q))},be=function(t){t>0&&t<=jt&&(q=t)},we=p.__private__.getNumberOfPages=p.getNumberOfPages=function(){return K.length-1},Ae=function(t,e,n){var r,i=void 0;return n=n||{},t=void 0!==t?t:Pt[vt].fontName,e=void 0!==e?e:Pt[vt].fontStyle,r=t.toLowerCase(),void 0!==It[r]&&void 0!==It[r][e]?i=It[r][e]:void 0!==It[t]&&void 0!==It[t][e]?i=It[t][e]:!1===n.disableWarning&&X.warn("Unable to look up font label for font '"+t+"', '"+e+"'. Refer to getFontList() for available fonts."),i||n.noFallback||null==(i=It.times[e])&&(i=It.times.normal),i},xe=p.__private__.putInfo=function(){var t=Jt(),e=function(t){return t};for(var n in null!==h&&(e=Me.encryptor(t,0)),rt("<<"),rt("/Producer ("+ge(e("jsPDF "+Lt.version))+")"),mt)mt.hasOwnProperty(n)&&mt[n]&&rt("/"+n.substr(0,1).toUpperCase()+n.substr(1)+" ("+ge(e(mt[n]))+")");rt("/CreationDate ("+ge(e(B))+")"),rt(">>"),rt("endobj")},_e=p.__private__.putCatalog=function(t){var e=(t=t||{}).rootDictionaryObjId||Qt;switch(Jt(),rt("<<"),rt("/Type /Catalog"),rt("/Pages "+e+" 0 R"),ut||(ut="fullwidth"),ut){case"fullwidth":rt("/OpenAction [3 0 R /FitH null]");break;case"fullheight":rt("/OpenAction [3 0 R /FitV null]");break;case"fullpage":rt("/OpenAction [3 0 R /Fit]");break;case"original":rt("/OpenAction [3 0 R /XYZ null null 1]");break;default:var n=""+ut;"%"===n.substr(n.length-1)&&(ut=parseInt(ut)/100),"number"==typeof ut&&rt("/OpenAction [3 0 R /XYZ null null "+C(ut)+"]")}switch(dt||(dt="continuous"),dt){case"continuous":rt("/PageLayout /OneColumn");break;case"single":rt("/PageLayout /SinglePage");break;case"two":case"twoleft":rt("/PageLayout /TwoColumnLeft");break;case"tworight":rt("/PageLayout /TwoColumnRight")}ht&&rt("/PageMode /"+ht),Dt.publish("putCatalog"),rt(">>"),rt("endobj")},Se=p.__private__.putTrailer=function(){rt("trailer"),rt("<<"),rt("/Size "+(H+1)),rt("/Root "+H+" 0 R"),rt("/Info "+(H-1)+" 0 R"),null!==h&&rt("/Encrypt "+Me.oid+" 0 R"),rt("/ID [ <"+F+"> <"+F+"> ]"),rt(">>")},Le=p.__private__.putHeader=function(){rt("%PDF-"+g),rt("%ºß¬à")},Ne=p.__private__.putXRef=function(){var t="0000000000";rt("xref"),rt("0 "+(H+1)),rt("0000000000 65535 f ");for(var e=1;e<=H;e++)"function"==typeof W[e]?rt((t+W[e]()).slice(-10)+" 00000 n "):void 0!==W[e]?rt((t+W[e]).slice(-10)+" 00000 n "):rt("0000000000 00000 n ")},ke=p.__private__.buildDocument=function(){H=0,Y=0,V=[],W=[],J=[],Qt=Kt(),te=Kt(),nt(V),Dt.publish("buildDocument"),Le(),ae(),function(){Dt.publish("putAdditionalObjects");for(var t=0;t<J.length;t++){var e=J[t];$t(e.objId,!0),rt(e.content),rt("endobj")}Dt.publish("postPutAdditionalObjects")}(),function(){var t=[];(function(){for(var t in Pt)Pt.hasOwnProperty(t)&&(!1===f||!0===f&&d.hasOwnProperty(t))&&se(Pt[t])})(),function(){var t;for(t in Tt)Tt.hasOwnProperty(t)&&he(Tt[t])}(),function(){for(var t in zt)zt.hasOwnProperty(t)&&ue(zt[t])}(),function(t){var e;for(e in Bt)Bt.hasOwnProperty(e)&&(Bt[e]instanceof _t?le(Bt[e]):Bt[e]instanceof St&&ce(Bt[e],t))}(t),Dt.publish("putResources"),t.forEach(fe),fe({resourcesOid:te,objectOid:Number.MAX_SAFE_INTEGER}),Dt.publish("postPutResources")}(),null!==h&&(Me.oid=Jt(),rt("<<"),rt("/Filter /Standard"),rt("/V "+Me.v),rt("/R "+Me.r),rt("/U <"+Me.toHexString(Me.U)+">"),rt("/O <"+Me.toHexString(Me.O)+">"),rt("/P "+Me.P),rt(">>"),rt("endobj")),xe(),_e();var t=Y;return Ne(),Se(),rt("startxref"),rt(""+t),rt("%%EOF"),nt(K[q]),V.join("\n")},Ce=p.__private__.getBlob=function(t){return new Blob([ot(t)],{type:"application/pdf"})},Pe=p.output=p.__private__.output=(Xt=function(t,e){switch("string"==typeof(e=e||{})?e={filename:e}:e.filename=e.filename||"generated.pdf",t){case void 0:return ke();case"save":p.save(e.filename);break;case"arraybuffer":return ot(ke());case"blob":return Ce(ke());case"bloburi":case"bloburl":if(void 0!==G.URL&&"function"==typeof G.URL.createObjectURL)return G.URL&&G.URL.createObjectURL(Ce(ke()))||void 0;X.warn("bloburl is not supported by your system, because URL.createObjectURL is not supported by your browser.");break;case"datauristring":case"dataurlstring":var n="",r=ke();try{n=Q(r)}catch(t){n=Q(unescape(encodeURIComponent(r)))}return"data:application/pdf;filename="+e.filename+";base64,"+n;case"pdfobjectnewwindow":if("[object Window]"===Object.prototype.toString.call(G)){var i="https://cdnjs.cloudflare.com/ajax/libs/pdfobject/2.1.1/pdfobject.min.js",o=' integrity="sha512-4ze/a9/4jqu+tX9dfOqJYSvyYd5M6qum/3HpCLr+/Jqf0whc37VUbkpNGHR7/8pSnCFw47T1fmIpwBV7UySh3g==" crossorigin="anonymous"';e.pdfObjectUrl&&(i=e.pdfObjectUrl,o="");var a='<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><script src="'+i+'"'+o+'><\/script><script >PDFObject.embed("'+this.output("dataurlstring")+'", '+JSON.stringify(e)+");<\/script></body></html>",s=G.open();return null!==s&&s.document.write(a),s}throw new Error("The option pdfobjectnewwindow just works in a browser-environment.");case"pdfjsnewwindow":if("[object Window]"===Object.prototype.toString.call(G)){var u='<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><iframe id="pdfViewer" src="'+(e.pdfJsUrl||"examples/PDF.js/web/viewer.html")+"?file=&downloadName="+e.filename+'" width="500px" height="400px" /></body></html>',l=G.open();if(null!==l){l.document.write(u);var c=this;l.document.documentElement.querySelector("#pdfViewer").onload=function(){l.document.title=e.filename,l.document.documentElement.querySelector("#pdfViewer").contentWindow.PDFViewerApplication.open(c.output("bloburl"))}}return l}throw new Error("The option pdfjsnewwindow just works in a browser-environment.");case"dataurlnewwindow":if("[object Window]"!==Object.prototype.toString.call(G))throw new Error("The option dataurlnewwindow just works in a browser-environment.");var h='<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><iframe src="'+this.output("datauristring",e)+'"></iframe></body></html>',f=G.open();if(null!==f&&(f.document.write(h),f.document.title=e.filename),f||"undefined"==typeof safari)return f;break;case"datauri":case"dataurl":return G.document.location.href=this.output("datauristring",e);default:return null}},Xt.foo=function(){try{return Xt.apply(this,arguments)}catch(n){var t=n.stack||"";~t.indexOf(" at ")&&(t=t.split(" at ")[1]);var e="Error in function "+t.split("\n")[0].split("<")[0]+": "+n.message;if(!G.console)throw new Error(e);G.console.error(e,n),G.alert&&alert(e)}},Xt.foo.bar=Xt,Xt.foo),Ie=function(t){return!0===Array.isArray(qt)&&qt.indexOf(t)>-1};switch(r){case"pt":xt=1;break;case"mm":xt=72/25.4;break;case"cm":xt=72/2.54;break;case"in":xt=72;break;case"px":xt=1==Ie("px_scaling")?.75:96/72;break;case"pc":case"em":xt=12;break;case"ex":xt=6;break;default:if("number"!=typeof r)throw new Error("Invalid unit: "+r);xt=r}var Me=null;R(),E();var Be=p.__private__.getPageInfo=p.getPageInfo=function(t){if(isNaN(t)||t%1!=0)throw new Error("Invalid argument passed to jsPDF.getPageInfo");return{objId:Rt[t].objId,pageNumber:t,pageContext:Rt[t]}},Fe=p.__private__.getPageInfoByObjId=function(t){if(isNaN(t)||t%1!=0)throw new Error("Invalid argument passed to jsPDF.getPageInfoByObjId");for(var e in Rt)if(Rt[e].objId===t)break;return Be(e)},Te=p.__private__.getCurrentPageInfo=p.getCurrentPageInfo=function(){return{objId:Rt[q].objId,pageNumber:q,pageContext:Rt[q]}};p.addPage=function(){return ve.apply(this,arguments),this},p.setPage=function(){return be.apply(this,arguments),nt.call(this,K[q]),this},p.insertPage=function(t){return this.addPage(),this.movePage(q,t),this},p.movePage=function(t,e){var n,r;if(t>e){n=K[t],r=Rt[t];for(var i=t;i>e;i--)K[i]=K[i-1],Rt[i]=Rt[i-1];K[e]=n,Rt[e]=r,this.setPage(e)}else if(t<e){n=K[t],r=Rt[t];for(var o=t;o<e;o++)K[o]=K[o+1],Rt[o]=Rt[o+1];K[e]=n,Rt[e]=r,this.setPage(e)}return this},p.deletePage=function(){return ye.apply(this,arguments),this},p.__private__.text=p.text=function(t,e,n,r,o){var a,s,u,l,c,h,f,p,g,m=(r=r||{}).scope||this;if("number"==typeof t&&"number"==typeof e&&("string"==typeof n||Array.isArray(n))){var v=n;n=e,e=t,t=v}if(arguments[3]instanceof Wt==0?(u=arguments[4],l=arguments[5],"object"===i()(f=arguments[3])&&null!==f||("string"==typeof u&&(l=u,u=null),"string"==typeof f&&(l=f,f=null),"number"==typeof f&&(u=f,f=null),r={flags:f,angle:u,align:l})):(N("The transform parameter of text() with a Matrix value"),g=o),isNaN(e)||isNaN(n)||null==t)throw new Error("Invalid arguments passed to jsPDF.text");if(0===t.length)return m;var y,b="",x="number"==typeof r.lineHeightFactor?r.lineHeightFactor:Xe,_=m.internal.scaleFactor;function S(t){return t=t.split("\t").join(Array(r.TabLen||9).join(" ")),ge(t,f)}function k(t){for(var e,n=t.concat(),r=[],i=n.length;i--;)"string"==typeof(e=n.shift())?r.push(e):Array.isArray(t)&&(1===e.length||void 0===e[1]&&void 0===e[2])?r.push(e[0]):r.push([e[0],e[1],e[2]]);return r}function C(t,e){var n;if("string"==typeof t)n=e(t)[0];else if(Array.isArray(t)){for(var r,i,o=t.concat(),a=[],s=o.length;s--;)"string"==typeof(r=o.shift())?a.push(e(r)[0]):Array.isArray(r)&&"string"==typeof r[0]&&(i=e(r[0],r[1],r[2]),a.push([i[0],i[1],i[2]]));n=a}return n}var P=!1,M=!0;if("string"==typeof t)P=!0;else if(Array.isArray(t)){var B=t.concat();s=[];for(var F,T=B.length;T--;)("string"!=typeof(F=B.shift())||Array.isArray(F)&&"string"!=typeof F[0])&&(M=!1);P=M}if(!1===P)throw new Error('Type of text must be string or Array. "'+t+'" is not recognized.');"string"==typeof t&&(t=t.match(/[\r?\n]/)?t.split(/\r\n|\r|\n/g):[t]);var E=st/m.internal.scaleFactor,O=E*(x-1);switch(r.baseline){case"bottom":n-=O;break;case"top":n+=E-O;break;case"hanging":n+=E-2*O;break;case"middle":n+=E/2-O}if((h=r.maxWidth||0)>0&&("string"==typeof t?t=m.splitTextToSize(t,h):"[object Array]"===Object.prototype.toString.call(t)&&(t=t.reduce((function(t,e){return t.concat(m.splitTextToSize(e,h))}),[]))),a={text:t,x:e,y:n,options:r,mutex:{pdfEscape:ge,activeFontKey:vt,fonts:Pt,activeFontSize:st}},Dt.publish("preProcessText",a),t=a.text,u=(r=a.options).angle,g instanceof Wt==0&&u&&"number"==typeof u){u*=Math.PI/180,0===r.rotationDirection&&(u=-u),A===w&&(u=-u);var j=Math.cos(u),R=Math.sin(u);g=new Wt(j,R,-R,j,0,0)}else u&&u instanceof Wt&&(g=u);A!==w||g||(g=Gt),void 0!==(c=r.charSpace||cn)&&(b+=L(I(c))+" Tc\n",this.setCharSpace(this.getCharSpace()||0)),void 0!==(p=r.horizontalScale)&&(b+=L(100*p)+" Tz\n"),r.lang;var D=-1,q=void 0!==r.renderingMode?r.renderingMode:r.stroke,z=m.internal.getCurrentPageInfo().pageContext;switch(q){case 0:case!1:case"fill":D=0;break;case 1:case!0:case"stroke":D=1;break;case 2:case"fillThenStroke":D=2;break;case 3:case"invisible":D=3;break;case 4:case"fillAndAddForClipping":D=4;break;case 5:case"strokeAndAddPathForClipping":D=5;break;case 6:case"fillThenStrokeAndAddToPathForClipping":D=6;break;case 7:case"addToPathForClipping":D=7}var U=void 0!==z.usedRenderingMode?z.usedRenderingMode:-1;-1!==D?b+=D+" Tr\n":-1!==U&&(b+="0 Tr\n"),-1!==D&&(z.usedRenderingMode=D),l=r.align||"left";var H,W=st*x,V=m.internal.pageSize.getWidth(),G=Pt[vt];c=r.charSpace||cn,h=r.maxWidth||0,f=Object.assign({autoencode:!0,noBOM:!0},r.flags);var Y=[];if("[object Array]"===Object.prototype.toString.call(t)){var X;s=k(t),"left"!==l&&(H=s.map((function(t){return m.getStringUnitWidth(t,{font:G,charSpace:c,fontSize:st,doKerning:!1})*st/_})));var J,K=0;if("right"===l){e-=H[0],t=[],T=s.length;for(var $=0;$<T;$++)0===$?(J=en(e),X=nn(n)):(J=I(K-H[$]),X=-W),t.push([s[$],J,X]),K=H[$]}else if("center"===l){e-=H[0]/2,t=[],T=s.length;for(var Z=0;Z<T;Z++)0===Z?(J=en(e),X=nn(n)):(J=I((K-H[Z])/2),X=-W),t.push([s[Z],J,X]),K=H[Z]}else if("left"===l){t=[],T=s.length;for(var Q=0;Q<T;Q++)t.push(s[Q])}else{if("justify"!==l)throw new Error('Unrecognized alignment option, use "left", "center", "right" or "justify".');t=[],T=s.length,h=0!==h?h:V;for(var tt=0;tt<T;tt++)X=0===tt?nn(n):-W,J=0===tt?en(e):0,tt<T-1?Y.push(L(I((h-H[tt])/(s[tt].split(" ").length-1)))):Y.push(0),t.push([s[tt],J,X])}}!0===("boolean"==typeof r.R2L?r.R2L:ct)&&(t=C(t,(function(t,e,n){return[t.split("").reverse().join(""),e,n]}))),a={text:t,x:e,y:n,options:r,mutex:{pdfEscape:ge,activeFontKey:vt,fonts:Pt,activeFontSize:st}},Dt.publish("postProcessText",a),t=a.text,y=a.mutex.isHex||!1;var et=Pt[vt].encoding;"WinAnsiEncoding"!==et&&"StandardEncoding"!==et||(t=C(t,(function(t,e,n){return[S(t),e,n]}))),s=k(t),t=[];for(var nt,it,ot,at=Array.isArray(s[0])?1:0,ut="",lt=function(t,e,n){var i="";return n instanceof Wt?(n="number"==typeof r.angle?Vt(n,new Wt(1,0,0,1,t,e)):Vt(new Wt(1,0,0,1,t,e),n),A===w&&(n=Vt(new Wt(1,0,0,-1,0,0),n)),i=n.join(" ")+" Tm\n"):i=L(t)+" "+L(e)+" Td\n",i},ht=0;ht<s.length;ht++){switch(ut="",at){case 1:ot=(y?"<":"(")+s[ht][0]+(y?">":")"),nt=parseFloat(s[ht][1]),it=parseFloat(s[ht][2]);break;case 0:ot=(y?"<":"(")+s[ht]+(y?">":")"),nt=en(e),it=nn(n)}void 0!==Y&&void 0!==Y[ht]&&(ut=Y[ht]+" Tw\n"),0===ht?t.push(ut+lt(nt,it,g)+ot):0===at?t.push(ut+ot):1===at&&t.push(ut+lt(nt,it,g)+ot)}t=0===at?t.join(" Tj\nT* "):t.join(" Tj\n"),t+=" Tj\n";var ft="BT\n/";return ft+=vt+" "+st+" Tf\n",ft+=L(st*x)+" TL\n",ft+=un+"\n",ft+=b,ft+=t,rt(ft+="ET"),d[vt]=!0,m};var Ee=p.__private__.clip=p.clip=function(t){return rt("evenodd"===t?"W*":"W"),this};p.clipEvenOdd=function(){return Ee("evenodd")},p.__private__.discardPath=p.discardPath=function(){return rt("n"),this};var Oe=p.__private__.isValidStyle=function(t){var e=!1;return-1!==[void 0,null,"S","D","F","DF","FD","f","f*","B","B*","n"].indexOf(t)&&(e=!0),e};p.__private__.setDefaultPathOperation=p.setDefaultPathOperation=function(t){return Oe(t)&&(c=t),this};var je=p.__private__.getStyle=p.getStyle=function(t){var e=c;switch(t){case"D":case"S":e="S";break;case"F":e="f";break;case"FD":case"DF":e="B";break;case"f":case"f*":case"B":case"B*":e=t}return e},Re=p.close=function(){return rt("h"),this};p.stroke=function(){return rt("S"),this},p.fill=function(t){return De("f",t),this},p.fillEvenOdd=function(t){return De("f*",t),this},p.fillStroke=function(t){return De("B",t),this},p.fillStrokeEvenOdd=function(t){return De("B*",t),this};var De=function(t,e){"object"===i()(e)?Ue(e,t):rt(t)},qe=function(t){null===t||A===w&&void 0===t||(t=je(t),rt(t))};function ze(t,e,n,r,i){var o=new St(e||this.boundingBox,n||this.xStep,r||this.yStep,this.gState,i||this.matrix);o.stream=this.stream;var a=t+"$$"+this.cloneIndex+++"$$";return Yt(a,o),o}var Ue=function(t,e){var n=Ft[t.key],r=Bt[n];if(r instanceof _t)rt("q"),rt(He(e)),r.gState&&p.setGState(r.gState),rt(t.matrix.toString()+" cm"),rt("/"+n+" sh"),rt("Q");else if(r instanceof St){var i=new Wt(1,0,0,-1,0,xn());t.matrix&&(i=i.multiply(t.matrix||Gt),n=ze.call(r,t.key,t.boundingBox,t.xStep,t.yStep,i).id),rt("q"),rt("/Pattern cs"),rt("/"+n+" scn"),r.gState&&p.setGState(r.gState),rt(e),rt("Q")}},He=function(t){switch(t){case"f":case"F":case"n":return"W n";case"f*":return"W* n";case"B":case"S":return"W S";case"B*":return"W* S"}},We=p.moveTo=function(t,e){return rt(L(I(t))+" "+L(M(e))+" m"),this},Ve=p.lineTo=function(t,e){return rt(L(I(t))+" "+L(M(e))+" l"),this},Ge=p.curveTo=function(t,e,n,r,i,o){return rt([L(I(t)),L(M(e)),L(I(n)),L(M(r)),L(I(i)),L(M(o)),"c"].join(" ")),this};p.__private__.line=p.line=function(t,e,n,r,i){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||!Oe(i))throw new Error("Invalid arguments passed to jsPDF.line");return A===b?this.lines([[n-t,r-e]],t,e,[1,1],i||"S"):this.lines([[n-t,r-e]],t,e,[1,1]).stroke()},p.__private__.lines=p.lines=function(t,e,n,r,i,o){var a,s,u,l,c,h,f,d,p,g,m,v;if("number"==typeof t&&(v=n,n=e,e=t,t=v),r=r||[1,1],o=o||!1,isNaN(e)||isNaN(n)||!Array.isArray(t)||!Array.isArray(r)||!Oe(i)||"boolean"!=typeof o)throw new Error("Invalid arguments passed to jsPDF.lines");for(We(e,n),a=r[0],s=r[1],l=t.length,g=e,m=n,u=0;u<l;u++)2===(c=t[u]).length?(g=c[0]*a+g,m=c[1]*s+m,Ve(g,m)):(h=c[0]*a+g,f=c[1]*s+m,d=c[2]*a+g,p=c[3]*s+m,g=c[4]*a+g,m=c[5]*s+m,Ge(h,f,d,p,g,m));return o&&Re(),qe(i),this},p.path=function(t){for(var e=0;e<t.length;e++){var n=t[e],r=n.c;switch(n.op){case"m":We(r[0],r[1]);break;case"l":Ve(r[0],r[1]);break;case"c":Ge.apply(this,r);break;case"h":Re()}}return this},p.__private__.rect=p.rect=function(t,e,n,r,i){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||!Oe(i))throw new Error("Invalid arguments passed to jsPDF.rect");return A===b&&(r=-r),rt([L(I(t)),L(M(e)),L(I(n)),L(I(r)),"re"].join(" ")),qe(i),this},p.__private__.triangle=p.triangle=function(t,e,n,r,i,o,a){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i)||isNaN(o)||!Oe(a))throw new Error("Invalid arguments passed to jsPDF.triangle");return this.lines([[n-t,r-e],[i-n,o-r],[t-i,e-o]],t,e,[1,1],a,!0),this},p.__private__.roundedRect=p.roundedRect=function(t,e,n,r,i,o,a){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i)||isNaN(o)||!Oe(a))throw new Error("Invalid arguments passed to jsPDF.roundedRect");var s=4/3*(Math.SQRT2-1);return i=Math.min(i,.5*n),o=Math.min(o,.5*r),this.lines([[n-2*i,0],[i*s,0,i,o-o*s,i,o],[0,r-2*o],[0,o*s,-i*s,o,-i,o],[2*i-n,0],[-i*s,0,-i,-o*s,-i,-o],[0,2*o-r],[0,-o*s,i*s,-o,i,-o]],t+i,e,[1,1],a,!0),this},p.__private__.ellipse=p.ellipse=function(t,e,n,r,i){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||!Oe(i))throw new Error("Invalid arguments passed to jsPDF.ellipse");var o=4/3*(Math.SQRT2-1)*n,a=4/3*(Math.SQRT2-1)*r;return We(t+n,e),Ge(t+n,e-a,t+o,e-r,t,e-r),Ge(t-o,e-r,t-n,e-a,t-n,e),Ge(t-n,e+a,t-o,e+r,t,e+r),Ge(t+o,e+r,t+n,e+a,t+n,e),qe(i),this},p.__private__.circle=p.circle=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||!Oe(r))throw new Error("Invalid arguments passed to jsPDF.circle");return this.ellipse(t,e,n,n,r)},p.setFont=function(t,e,n){return n&&(e=S(e,n)),vt=Ae(t,e,{disableWarning:!1}),this};var Ye=p.__private__.getFont=p.getFont=function(){return Pt[Ae.apply(p,arguments)]};p.__private__.getFontList=p.getFontList=function(){var t,e,n={};for(t in It)if(It.hasOwnProperty(t))for(e in n[t]=[],It[t])It[t].hasOwnProperty(e)&&n[t].push(e);return n},p.addFont=function(t,e,n,r,i){var o=["StandardEncoding","MacRomanEncoding","Identity-H","WinAnsiEncoding"];return arguments[3]&&-1!==o.indexOf(arguments[3])?i=arguments[3]:arguments[3]&&-1==o.indexOf(arguments[3])&&(n=S(n,r)),pe.call(this,t,e,n,i=i||"Identity-H")};var Xe,Je=t.lineWidth||.200025,Ke=p.__private__.getLineWidth=p.getLineWidth=function(){return Je},$e=p.__private__.setLineWidth=p.setLineWidth=function(t){return Je=t,rt(L(I(t))+" w"),this};p.__private__.setLineDash=Lt.API.setLineDash=Lt.API.setLineDashPattern=function(t,e){if(t=t||[],e=e||0,isNaN(e)||!Array.isArray(t))throw new Error("Invalid arguments passed to jsPDF.setLineDash");return t=t.map((function(t){return L(I(t))})).join(" "),e=L(I(e)),rt("["+t+"] "+e+" d"),this};var Ze=p.__private__.getLineHeight=p.getLineHeight=function(){return st*Xe};p.__private__.getLineHeight=p.getLineHeight=function(){return st*Xe};var Qe=p.__private__.setLineHeightFactor=p.setLineHeightFactor=function(t){return"number"==typeof(t=t||1.15)&&(Xe=t),this},tn=p.__private__.getLineHeightFactor=p.getLineHeightFactor=function(){return Xe};Qe(t.lineHeight);var en=p.__private__.getHorizontalCoordinate=function(t){return I(t)},nn=p.__private__.getVerticalCoordinate=function(t){return A===w?t:Rt[q].mediaBox.topRightY-Rt[q].mediaBox.bottomLeftY-I(t)},rn=p.__private__.getHorizontalCoordinateString=p.getHorizontalCoordinateString=function(t){return L(en(t))},on=p.__private__.getVerticalCoordinateString=p.getVerticalCoordinateString=function(t){return L(nn(t))},an=t.strokeColor||"0 G";p.__private__.getStrokeColor=p.getDrawColor=function(){return ee(an)},p.__private__.setStrokeColor=p.setDrawColor=function(t,e,n,r){return an=ne({ch1:t,ch2:e,ch3:n,ch4:r,pdfColorType:"draw",precision:2}),rt(an),this};var sn=t.fillColor||"0 g";p.__private__.getFillColor=p.getFillColor=function(){return ee(sn)},p.__private__.setFillColor=p.setFillColor=function(t,e,n,r){return sn=ne({ch1:t,ch2:e,ch3:n,ch4:r,pdfColorType:"fill",precision:2}),rt(sn),this};var un=t.textColor||"0 g",ln=p.__private__.getTextColor=p.getTextColor=function(){return ee(un)};p.__private__.setTextColor=p.setTextColor=function(t,e,n,r){return un=ne({ch1:t,ch2:e,ch3:n,ch4:r,pdfColorType:"text",precision:3}),this};var cn=t.charSpace,hn=p.__private__.getCharSpace=p.getCharSpace=function(){return parseFloat(cn||0)};p.__private__.setCharSpace=p.setCharSpace=function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.setCharSpace");return cn=t,this};var fn=0;p.CapJoinStyles={0:0,butt:0,but:0,miter:0,1:1,round:1,rounded:1,circle:1,2:2,projecting:2,project:2,square:2,bevel:2},p.__private__.setLineCap=p.setLineCap=function(t){var e=p.CapJoinStyles[t];if(void 0===e)throw new Error("Line cap style of '"+t+"' is not recognized. See or extend .CapJoinStyles property for valid styles");return fn=e,rt(e+" J"),this};var dn=0;p.__private__.setLineJoin=p.setLineJoin=function(t){var e=p.CapJoinStyles[t];if(void 0===e)throw new Error("Line join style of '"+t+"' is not recognized. See or extend .CapJoinStyles property for valid styles");return dn=e,rt(e+" j"),this},p.__private__.setLineMiterLimit=p.__private__.setMiterLimit=p.setLineMiterLimit=p.setMiterLimit=function(t){if(t=t||0,isNaN(t))throw new Error("Invalid argument passed to jsPDF.setLineMiterLimit");return rt(L(I(t))+" M"),this},p.GState=At,p.setGState=function(t){(t="string"==typeof t?Tt[Et[t]]:pn(null,t)).equals(Ot)||(rt("/"+t.id+" gs"),Ot=t)};var pn=function(t,e){if(!t||!Et[t]){var n=!1;for(var r in Tt)if(Tt.hasOwnProperty(r)&&Tt[r].equals(e)){n=!0;break}if(n)e=Tt[r];else{var i="GS"+(Object.keys(Tt).length+1).toString(10);Tt[i]=e,e.id=i}return t&&(Et[t]=e.id),Dt.publish("addGState",e),e}};p.addGState=function(t,e){return pn(t,e),this},p.saveGraphicsState=function(){return rt("q"),Mt.push({key:vt,size:st,color:un}),this},p.restoreGraphicsState=function(){rt("Q");var t=Mt.pop();return vt=t.key,st=t.size,un=t.color,Ot=null,this},p.setCurrentTransformationMatrix=function(t){return rt(t.toString()+" cm"),this},p.comment=function(t){return rt("#"+t),this};var gn=function(t,e){var n=t||0;Object.defineProperty(this,"x",{enumerable:!0,get:function(){return n},set:function(t){isNaN(t)||(n=parseFloat(t))}});var r=e||0;Object.defineProperty(this,"y",{enumerable:!0,get:function(){return r},set:function(t){isNaN(t)||(r=parseFloat(t))}});var i="pt";return Object.defineProperty(this,"type",{enumerable:!0,get:function(){return i},set:function(t){i=t.toString()}}),this},mn=function(t,e,n,r){gn.call(this,t,e),this.type="rect";var i=n||0;Object.defineProperty(this,"w",{enumerable:!0,get:function(){return i},set:function(t){isNaN(t)||(i=parseFloat(t))}});var o=r||0;return Object.defineProperty(this,"h",{enumerable:!0,get:function(){return o},set:function(t){isNaN(t)||(o=parseFloat(t))}}),this},vn=function(){this.page=jt,this.currentPage=q,this.pages=K.slice(0),this.pagesContext=Rt.slice(0),this.x=Nt,this.y=kt,this.matrix=Ct,this.width=wn(q),this.height=xn(q),this.outputDestination=Z,this.id="",this.objectNumber=-1};vn.prototype.restore=function(){jt=this.page,q=this.currentPage,Rt=this.pagesContext,K=this.pages,Nt=this.x,kt=this.y,Ct=this.matrix,An(q,this.width),_n(q,this.height),Z=this.outputDestination};var yn=function(t,e,n,r,i){Ht.push(new vn),jt=q=0,K=[],Nt=t,kt=e,Ct=i,me([n,r])};for(var bn in p.beginFormObject=function(t,e,n,r,i){return yn(t,e,n,r,i),this},p.endFormObject=function(t){return function(t){if(Ut[t])Ht.pop().restore();else{var e=new vn,n="Xo"+(Object.keys(zt).length+1).toString(10);e.id=n,Ut[t]=n,zt[n]=e,Dt.publish("addFormObject",e),Ht.pop().restore()}}(t),this},p.doFormObject=function(t,e){var n=zt[Ut[t]];return rt("q"),rt(e.toString()+" cm"),rt("/"+n.id+" Do"),rt("Q"),this},p.getFormObject=function(t){var e=zt[Ut[t]];return{x:e.x,y:e.y,width:e.width,height:e.height,matrix:e.matrix}},p.save=function(t,e){return t=t||"generated.pdf",(e=e||{}).returnPromise=e.returnPromise||!1,!1===e.returnPromise?(tt(Ce(ke()),t),"function"==typeof tt.unload&&G.setTimeout&&setTimeout(tt.unload,911),this):new Promise((function(e,n){try{var r=tt(Ce(ke()),t);"function"==typeof tt.unload&&G.setTimeout&&setTimeout(tt.unload,911),e(r)}catch(t){n(t.message)}}))},Lt.API)Lt.API.hasOwnProperty(bn)&&("events"===bn&&Lt.API.events.length?function(t,e){var n,r,i;for(i=e.length-1;-1!==i;i--)n=e[i][0],r=e[i][1],t.subscribe.apply(t,[n].concat("function"==typeof r?[r]:r))}(Dt,Lt.API.events):p[bn]=Lt.API[bn]);var wn=p.getPageWidth=function(t){return(Rt[t=t||q].mediaBox.topRightX-Rt[t].mediaBox.bottomLeftX)/xt},An=p.setPageWidth=function(t,e){Rt[t].mediaBox.topRightX=e*xt+Rt[t].mediaBox.bottomLeftX},xn=p.getPageHeight=function(t){return(Rt[t=t||q].mediaBox.topRightY-Rt[t].mediaBox.bottomLeftY)/xt},_n=p.setPageHeight=function(t,e){Rt[t].mediaBox.topRightY=e*xt+Rt[t].mediaBox.bottomLeftY};return p.internal={pdfEscape:ge,getStyle:je,getFont:Ye,getFontSize:lt,getCharSpace:hn,getTextColor:ln,getLineHeight:Ze,getLineHeightFactor:tn,getLineWidth:Ke,write:it,getHorizontalCoordinate:en,getVerticalCoordinate:nn,getCoordinateString:rn,getVerticalCoordinateString:on,collections:{},newObject:Jt,newAdditionalObject:Zt,newObjectDeferred:Kt,newObjectDeferredBegin:$t,getFilters:re,putStream:ie,events:Dt,scaleFactor:xt,pageSize:{getWidth:function(){return wn(q)},setWidth:function(t){An(q,t)},getHeight:function(){return xn(q)},setHeight:function(t){_n(q,t)}},encryptionOptions:h,encryption:Me,getEncryptor:function(t){return null!==h?Me.encryptor(t,0):function(t){return t}},output:Pe,getNumberOfPages:we,pages:K,out:rt,f2:C,f3:P,getPageInfo:Be,getPageInfoByObjId:Fe,getCurrentPageInfo:Te,getPDFVersion:m,Point:gn,Rectangle:mn,Matrix:Wt,hasHotfix:Ie},Object.defineProperty(p.internal.pageSize,"width",{get:function(){return wn(q)},set:function(t){An(q,t)},enumerable:!0,configurable:!0}),Object.defineProperty(p.internal.pageSize,"height",{get:function(){return xn(q)},set:function(t){_n(q,t)},enumerable:!0,configurable:!0}),function(t){for(var e=0,n=at.length;e<n;e++){var r=pe.call(this,t[e][0],t[e][1],t[e][2],at[e][3],!0);!1===f&&(d[r]=!0);var i=t[e][0].split("-");de({id:r,fontName:i[0],fontStyle:i[1]||""})}Dt.publish("addFonts",{fonts:Pt,dictionary:It})}.call(p,at),vt="F1",ve(o,n),Dt.publish("initialized"),p}yt.prototype.lsbFirstWord=function(t){return String.fromCharCode(t>>0&255,t>>8&255,t>>16&255,t>>24&255)},yt.prototype.toHexString=function(t){return t.split("").map((function(t){return("0"+(255&t.charCodeAt(0)).toString(16)).slice(-2)})).join("")},yt.prototype.hexToBytes=function(t){for(var e=[],n=0;n<t.length;n+=2)e.push(String.fromCharCode(parseInt(t.substr(n,2),16)));return e.join("")},yt.prototype.processOwnerPassword=function(t,e){return mt(dt(e).substr(0,5),t)},yt.prototype.encryptor=function(t,e){var n=dt(this.encryptionKey+String.fromCharCode(255&t,t>>8&255,t>>16&255,255&e,e>>8&255)).substr(0,10);return function(t){return mt(n,t)}},At.prototype.equals=function(t){var e,n="id,objectNumber,equals";if(!t||i()(t)!==i()(this))return!1;var r=0;for(e in this)if(!(n.indexOf(e)>=0)){if(this.hasOwnProperty(e)&&!t.hasOwnProperty(e))return!1;if(this[e]!==t[e])return!1;r++}for(e in t)t.hasOwnProperty(e)&&n.indexOf(e)<0&&r--;return 0===r},Lt.API={events:[]},Lt.version="2.5.1";var Nt=Lt.API,kt=1,Ct=function(t){return t.replace(/\\/g,"\\\\").replace(/\(/g,"\\(").replace(/\)/g,"\\)")},Pt=function(t){return t.replace(/\\\\/g,"\\").replace(/\\\(/g,"(").replace(/\\\)/g,")")},It=function(t){return t.toFixed(2)},Mt=function(t){return t.toFixed(5)};Nt.__acroform__={};var Bt=function(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t},Ft=function(t){return t*kt},Tt=function(t){var e=new Kt,n=ce.internal.getHeight(t)||0,r=ce.internal.getWidth(t)||0;return e.BBox=[0,0,Number(It(r)),Number(It(n))],e},Et=Nt.__acroform__.setBit=function(t,e){if(t=t||0,e=e||0,isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.setBit");return t|1<<e},Ot=Nt.__acroform__.clearBit=function(t,e){if(t=t||0,e=e||0,isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.clearBit");return t&~(1<<e)},jt=Nt.__acroform__.getBit=function(t,e){if(isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.getBit");return 0==(t&1<<e)?0:1},Rt=Nt.__acroform__.getBitForPdf=function(t,e){if(isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.getBitForPdf");return jt(t,e-1)},Dt=Nt.__acroform__.setBitForPdf=function(t,e){if(isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.setBitForPdf");return Et(t,e-1)},qt=Nt.__acroform__.clearBitForPdf=function(t,e){if(isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.clearBitForPdf");return Ot(t,e-1)},zt=Nt.__acroform__.calculateCoordinates=function(t,e){var n=e.internal.getHorizontalCoordinate,r=e.internal.getVerticalCoordinate,i=t[0],o=t[1],a=t[2],s=t[3],u={};return u.lowerLeft_X=n(i)||0,u.lowerLeft_Y=r(o+s)||0,u.upperRight_X=n(i+a)||0,u.upperRight_Y=r(o)||0,[Number(It(u.lowerLeft_X)),Number(It(u.lowerLeft_Y)),Number(It(u.upperRight_X)),Number(It(u.upperRight_Y))]},Ut=function(t){if(t.appearanceStreamContent)return t.appearanceStreamContent;if(t.V||t.DV){var e=[],n=t._V||t.DV,r=Ht(t,n),i=t.scope.internal.getFont(t.fontName,t.fontStyle).id;e.push("/Tx BMC"),e.push("q"),e.push("BT"),e.push(t.scope.__private__.encodeColorString(t.color)),e.push("/"+i+" "+It(r.fontSize)+" Tf"),e.push("1 0 0 1 0 0 Tm"),e.push(r.text),e.push("ET"),e.push("Q"),e.push("EMC");var o=Tt(t);return o.scope=t.scope,o.stream=e.join("\n"),o}},Ht=function(t,e){var n=0===t.fontSize?t.maxFontSize:t.fontSize,r={text:"",fontSize:""},i=(e=")"==(e="("==e.substr(0,1)?e.substr(1):e).substr(e.length-1)?e.substr(0,e.length-1):e).split(" ");i=t.multiline?i.map((function(t){return t.split("\n")})):i.map((function(t){return[t]}));var o=n,a=ce.internal.getHeight(t)||0;a=a<0?-a:a;var s=ce.internal.getWidth(t)||0;s=s<0?-s:s;var u=function(e,n,r){if(e+1<i.length){var o=n+" "+i[e+1][0];return Wt(o,t,r).width<=s-4}return!1};o++;t:for(;o>0;){e="",o--;var l,c,h=Wt("3",t,o).height,f=t.multiline?a-o:(a-h)/2,d=f+=2,p=0,g=0,m=0;if(o<=0){e="(...) Tj\n",e+="% Width of Text: "+Wt(e,t,o=12).width+", FieldWidth:"+s+"\n";break}for(var v="",y=0,b=0;b<i.length;b++)if(i.hasOwnProperty(b)){var w=!1;if(1!==i[b].length&&m!==i[b].length-1){if((h+2)*(y+2)+2>a)continue t;v+=i[b][m],w=!0,g=b,b--}else{v=" "==(v+=i[b][m]+" ").substr(v.length-1)?v.substr(0,v.length-1):v;var A=parseInt(b),x=u(A,v,o),_=b>=i.length-1;if(x&&!_){v+=" ",m=0;continue}if(x||_){if(_)g=A;else if(t.multiline&&(h+2)*(y+2)+2>a)continue t}else{if(!t.multiline)continue t;if((h+2)*(y+2)+2>a)continue t;g=A}}for(var S="",L=p;L<=g;L++){var N=i[L];if(t.multiline){if(L===g){S+=N[m]+" ",m=(m+1)%N.length;continue}if(L===p){S+=N[N.length-1]+" ";continue}}S+=N[0]+" "}switch(S=" "==S.substr(S.length-1)?S.substr(0,S.length-1):S,c=Wt(S,t,o).width,t.textAlign){case"right":l=s-c-2;break;case"center":l=(s-c)/2;break;default:l=2}e+=It(l)+" "+It(d)+" Td\n",e+="("+Ct(S)+") Tj\n",e+=-It(l)+" 0 Td\n",d=-(o+2),c=0,p=w?g:g+1,y++,v=""}break}return r.text=e,r.fontSize=o,r},Wt=function(t,e,n){var r=e.scope.internal.getFont(e.fontName,e.fontStyle),i=e.scope.getStringUnitWidth(t,{font:r,fontSize:parseFloat(n),charSpace:0})*parseFloat(n);return{height:e.scope.getStringUnitWidth("3",{font:r,fontSize:parseFloat(n),charSpace:0})*parseFloat(n)*1.5,width:i}},Vt={fields:[],xForms:[],acroFormDictionaryRoot:null,printedOut:!1,internal:null,isInitialized:!1},Gt=function(t,e){var n={type:"reference",object:t};void 0===e.internal.getPageInfo(t.page).pageContext.annotations.find((function(t){return t.type===n.type&&t.object===n.object}))&&e.internal.getPageInfo(t.page).pageContext.annotations.push(n)},Yt=Nt.__acroform__.arrayToPdfArray=function(t,e,n){var r=function(t){return t};if(Array.isArray(t)){for(var o="[",a=0;a<t.length;a++)switch(0!==a&&(o+=" "),i()(t[a])){case"boolean":case"number":case"object":o+=t[a].toString();break;case"string":"/"!==t[a].substr(0,1)?(void 0!==e&&n&&(r=n.internal.getEncryptor(e)),o+="("+Ct(r(t[a].toString()))+")"):o+=t[a].toString()}return o+"]"}throw new Error("Invalid argument passed to jsPDF.__acroform__.arrayToPdfArray")},Xt=function(t,e,n){var r=function(t){return t};return void 0!==e&&n&&(r=n.internal.getEncryptor(e)),(t=t||"").toString(),"("+Ct(r(t))+")"},Jt=function(){this._objId=void 0,this._scope=void 0,Object.defineProperty(this,"objId",{get:function(){if(void 0===this._objId){if(void 0===this.scope)return;this._objId=this.scope.internal.newObjectDeferred()}return this._objId},set:function(t){this._objId=t}}),Object.defineProperty(this,"scope",{value:this._scope,writable:!0})};Jt.prototype.toString=function(){return this.objId+" 0 R"},Jt.prototype.putStream=function(){var t=this.getKeyValueListForStream();this.scope.internal.putStream({data:this.stream,additionalKeyValues:t,objectId:this.objId}),this.scope.internal.out("endobj")},Jt.prototype.getKeyValueListForStream=function(){var t=[],e=Object.getOwnPropertyNames(this).filter((function(t){return"content"!=t&&"appearanceStreamContent"!=t&&"scope"!=t&&"objId"!=t&&"_"!=t.substring(0,1)}));for(var n in e)if(!1===Object.getOwnPropertyDescriptor(this,e[n]).configurable){var r=e[n],i=this[r];i&&(Array.isArray(i)?t.push({key:r,value:Yt(i,this.objId,this.scope)}):i instanceof Jt?(i.scope=this.scope,t.push({key:r,value:i.objId+" 0 R"})):"function"!=typeof i&&t.push({key:r,value:i}))}return t};var Kt=function(){Jt.call(this),Object.defineProperty(this,"Type",{value:"/XObject",configurable:!1,writable:!0}),Object.defineProperty(this,"Subtype",{value:"/Form",configurable:!1,writable:!0}),Object.defineProperty(this,"FormType",{value:1,configurable:!1,writable:!0});var t,e=[];Object.defineProperty(this,"BBox",{configurable:!1,get:function(){return e},set:function(t){e=t}}),Object.defineProperty(this,"Resources",{value:"2 0 R",configurable:!1,writable:!0}),Object.defineProperty(this,"stream",{enumerable:!1,configurable:!0,set:function(e){t=e.trim()},get:function(){return t||null}})};Bt(Kt,Jt);var $t=function(){Jt.call(this);var t,e=[];Object.defineProperty(this,"Kids",{enumerable:!1,configurable:!0,get:function(){return e.length>0?e:void 0}}),Object.defineProperty(this,"Fields",{enumerable:!1,configurable:!1,get:function(){return e}}),Object.defineProperty(this,"DA",{enumerable:!1,configurable:!1,get:function(){if(t){var e=function(t){return t};return this.scope&&(e=this.scope.internal.getEncryptor(this.objId)),"("+Ct(e(t))+")"}},set:function(e){t=e}})};Bt($t,Jt);var Zt=function t(){Jt.call(this);var e=4;Object.defineProperty(this,"F",{enumerable:!1,configurable:!1,get:function(){return e},set:function(t){if(isNaN(t))throw new Error('Invalid value "'+t+'" for attribute F supplied.');e=t}}),Object.defineProperty(this,"showWhenPrinted",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(e,3))},set:function(t){!0===Boolean(t)?this.F=Dt(e,3):this.F=qt(e,3)}});var n=0;Object.defineProperty(this,"Ff",{enumerable:!1,configurable:!1,get:function(){return n},set:function(t){if(isNaN(t))throw new Error('Invalid value "'+t+'" for attribute Ff supplied.');n=t}});var r=[];Object.defineProperty(this,"Rect",{enumerable:!1,configurable:!1,get:function(){if(0!==r.length)return r},set:function(t){r=void 0!==t?t:[]}}),Object.defineProperty(this,"x",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[0])?0:r[0]},set:function(t){r[0]=t}}),Object.defineProperty(this,"y",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[1])?0:r[1]},set:function(t){r[1]=t}}),Object.defineProperty(this,"width",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[2])?0:r[2]},set:function(t){r[2]=t}}),Object.defineProperty(this,"height",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[3])?0:r[3]},set:function(t){r[3]=t}});var i="";Object.defineProperty(this,"FT",{enumerable:!0,configurable:!1,get:function(){return i},set:function(t){switch(t){case"/Btn":case"/Tx":case"/Ch":case"/Sig":i=t;break;default:throw new Error('Invalid value "'+t+'" for attribute FT supplied.')}}});var o=null;Object.defineProperty(this,"T",{enumerable:!0,configurable:!1,get:function(){if(!o||o.length<1){if(this instanceof ae)return;o="FieldObject"+t.FieldNum++}var e=function(t){return t};return this.scope&&(e=this.scope.internal.getEncryptor(this.objId)),"("+Ct(e(o))+")"},set:function(t){o=t.toString()}}),Object.defineProperty(this,"fieldName",{configurable:!0,enumerable:!0,get:function(){return o},set:function(t){o=t}});var a="helvetica";Object.defineProperty(this,"fontName",{enumerable:!0,configurable:!0,get:function(){return a},set:function(t){a=t}});var s="normal";Object.defineProperty(this,"fontStyle",{enumerable:!0,configurable:!0,get:function(){return s},set:function(t){s=t}});var u=0;Object.defineProperty(this,"fontSize",{enumerable:!0,configurable:!0,get:function(){return u},set:function(t){u=t}});var l=void 0;Object.defineProperty(this,"maxFontSize",{enumerable:!0,configurable:!0,get:function(){return void 0===l?50/kt:l},set:function(t){l=t}});var c="black";Object.defineProperty(this,"color",{enumerable:!0,configurable:!0,get:function(){return c},set:function(t){c=t}});var h="/F1 0 Tf 0 g";Object.defineProperty(this,"DA",{enumerable:!0,configurable:!1,get:function(){if(!(!h||this instanceof ae||this instanceof ue))return Xt(h,this.objId,this.scope)},set:function(t){t=t.toString(),h=t}});var f=null;Object.defineProperty(this,"DV",{enumerable:!1,configurable:!1,get:function(){if(f)return this instanceof re==0?Xt(f,this.objId,this.scope):f},set:function(t){t=t.toString(),f=this instanceof re==0?"("===t.substr(0,1)?Pt(t.substr(1,t.length-2)):Pt(t):t}}),Object.defineProperty(this,"defaultValue",{enumerable:!0,configurable:!0,get:function(){return this instanceof re==1?Pt(f.substr(1,f.length-1)):f},set:function(t){t=t.toString(),f=this instanceof re==1?"/"+t:t}});var d=null;Object.defineProperty(this,"_V",{enumerable:!1,configurable:!1,get:function(){if(d)return d},set:function(t){this.V=t}}),Object.defineProperty(this,"V",{enumerable:!1,configurable:!1,get:function(){if(d)return this instanceof re==0?Xt(d,this.objId,this.scope):d},set:function(t){t=t.toString(),d=this instanceof re==0?"("===t.substr(0,1)?Pt(t.substr(1,t.length-2)):Pt(t):t}}),Object.defineProperty(this,"value",{enumerable:!0,configurable:!0,get:function(){return this instanceof re==1?Pt(d.substr(1,d.length-1)):d},set:function(t){t=t.toString(),d=this instanceof re==1?"/"+t:t}}),Object.defineProperty(this,"hasAnnotation",{enumerable:!0,configurable:!0,get:function(){return this.Rect}}),Object.defineProperty(this,"Type",{enumerable:!0,configurable:!1,get:function(){return this.hasAnnotation?"/Annot":null}}),Object.defineProperty(this,"Subtype",{enumerable:!0,configurable:!1,get:function(){return this.hasAnnotation?"/Widget":null}});var p,g=!1;Object.defineProperty(this,"hasAppearanceStream",{enumerable:!0,configurable:!0,get:function(){return g},set:function(t){t=Boolean(t),g=t}}),Object.defineProperty(this,"page",{enumerable:!0,configurable:!0,get:function(){if(p)return p},set:function(t){p=t}}),Object.defineProperty(this,"readOnly",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,1))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,1):this.Ff=qt(this.Ff,1)}}),Object.defineProperty(this,"required",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,2))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,2):this.Ff=qt(this.Ff,2)}}),Object.defineProperty(this,"noExport",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,3))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,3):this.Ff=qt(this.Ff,3)}});var m=null;Object.defineProperty(this,"Q",{enumerable:!0,configurable:!1,get:function(){if(null!==m)return m},set:function(t){if(-1===[0,1,2].indexOf(t))throw new Error('Invalid value "'+t+'" for attribute Q supplied.');m=t}}),Object.defineProperty(this,"textAlign",{get:function(){var t;switch(m){case 0:default:t="left";break;case 1:t="center";break;case 2:t="right"}return t},configurable:!0,enumerable:!0,set:function(t){switch(t){case"right":case 2:m=2;break;case"center":case 1:m=1;break;default:m=0}}})};Bt(Zt,Jt);var Qt=function(){Zt.call(this),this.FT="/Ch",this.V="()",this.fontName="zapfdingbats";var t=0;Object.defineProperty(this,"TI",{enumerable:!0,configurable:!1,get:function(){return t},set:function(e){t=e}}),Object.defineProperty(this,"topIndex",{enumerable:!0,configurable:!0,get:function(){return t},set:function(e){t=e}});var e=[];Object.defineProperty(this,"Opt",{enumerable:!0,configurable:!1,get:function(){return Yt(e,this.objId,this.scope)},set:function(t){var n,r;r=[],"string"==typeof(n=t)&&(r=function(t,e,n){n||(n=1);for(var r,i=[];r=e.exec(t);)i.push(r[n]);return i}(n,/\((.*?)\)/g)),e=r}}),this.getOptions=function(){return e},this.setOptions=function(t){e=t,this.sort&&e.sort()},this.addOption=function(t){t=(t=t||"").toString(),e.push(t),this.sort&&e.sort()},this.removeOption=function(t,n){for(n=n||!1,t=(t=t||"").toString();-1!==e.indexOf(t)&&(e.splice(e.indexOf(t),1),!1!==n););},Object.defineProperty(this,"combo",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,18))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,18):this.Ff=qt(this.Ff,18)}}),Object.defineProperty(this,"edit",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,19))},set:function(t){!0===this.combo&&(!0===Boolean(t)?this.Ff=Dt(this.Ff,19):this.Ff=qt(this.Ff,19))}}),Object.defineProperty(this,"sort",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,20))},set:function(t){!0===Boolean(t)?(this.Ff=Dt(this.Ff,20),e.sort()):this.Ff=qt(this.Ff,20)}}),Object.defineProperty(this,"multiSelect",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,22))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,22):this.Ff=qt(this.Ff,22)}}),Object.defineProperty(this,"doNotSpellCheck",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,23))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,23):this.Ff=qt(this.Ff,23)}}),Object.defineProperty(this,"commitOnSelChange",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,27))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,27):this.Ff=qt(this.Ff,27)}}),this.hasAppearanceStream=!1};Bt(Qt,Zt);var te=function(){Qt.call(this),this.fontName="helvetica",this.combo=!1};Bt(te,Qt);var ee=function(){te.call(this),this.combo=!0};Bt(ee,te);var ne=function(){ee.call(this),this.edit=!0};Bt(ne,ee);var re=function(){Zt.call(this),this.FT="/Btn",Object.defineProperty(this,"noToggleToOff",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,15))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,15):this.Ff=qt(this.Ff,15)}}),Object.defineProperty(this,"radio",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,16))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,16):this.Ff=qt(this.Ff,16)}}),Object.defineProperty(this,"pushButton",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,17))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,17):this.Ff=qt(this.Ff,17)}}),Object.defineProperty(this,"radioIsUnison",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,26))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,26):this.Ff=qt(this.Ff,26)}});var t,e={};Object.defineProperty(this,"MK",{enumerable:!1,configurable:!1,get:function(){var t=function(t){return t};if(this.scope&&(t=this.scope.internal.getEncryptor(this.objId)),0!==Object.keys(e).length){var n,r=[];for(n in r.push("<<"),e)r.push("/"+n+" ("+Ct(t(e[n]))+")");return r.push(">>"),r.join("\n")}},set:function(t){"object"===i()(t)&&(e=t)}}),Object.defineProperty(this,"caption",{enumerable:!0,configurable:!0,get:function(){return e.CA||""},set:function(t){"string"==typeof t&&(e.CA=t)}}),Object.defineProperty(this,"AS",{enumerable:!1,configurable:!1,get:function(){return t},set:function(e){t=e}}),Object.defineProperty(this,"appearanceState",{enumerable:!0,configurable:!0,get:function(){return t.substr(1,t.length-1)},set:function(e){t="/"+e}})};Bt(re,Zt);var ie=function(){re.call(this),this.pushButton=!0};Bt(ie,re);var oe=function(){re.call(this),this.radio=!0,this.pushButton=!1;var t=[];Object.defineProperty(this,"Kids",{enumerable:!0,configurable:!1,get:function(){return t},set:function(e){t=void 0!==e?e:[]}})};Bt(oe,re);var ae=function(){var t,e;Zt.call(this),Object.defineProperty(this,"Parent",{enumerable:!1,configurable:!1,get:function(){return t},set:function(e){t=e}}),Object.defineProperty(this,"optionName",{enumerable:!1,configurable:!0,get:function(){return e},set:function(t){e=t}});var n,r={};Object.defineProperty(this,"MK",{enumerable:!1,configurable:!1,get:function(){var t=function(t){return t};this.scope&&(t=this.scope.internal.getEncryptor(this.objId));var e,n=[];for(e in n.push("<<"),r)n.push("/"+e+" ("+Ct(t(r[e]))+")");return n.push(">>"),n.join("\n")},set:function(t){"object"===i()(t)&&(r=t)}}),Object.defineProperty(this,"caption",{enumerable:!0,configurable:!0,get:function(){return r.CA||""},set:function(t){"string"==typeof t&&(r.CA=t)}}),Object.defineProperty(this,"AS",{enumerable:!1,configurable:!1,get:function(){return n},set:function(t){n=t}}),Object.defineProperty(this,"appearanceState",{enumerable:!0,configurable:!0,get:function(){return n.substr(1,n.length-1)},set:function(t){n="/"+t}}),this.caption="l",this.appearanceState="Off",this._AppearanceType=ce.RadioButton.Circle,this.appearanceStreamContent=this._AppearanceType.createAppearanceStream(this.optionName)};Bt(ae,Zt),oe.prototype.setAppearance=function(t){if(!("createAppearanceStream"in t)||!("getCA"in t))throw new Error("Couldn't assign Appearance to RadioButton. Appearance was Invalid!");for(var e in this.Kids)if(this.Kids.hasOwnProperty(e)){var n=this.Kids[e];n.appearanceStreamContent=t.createAppearanceStream(n.optionName),n.caption=t.getCA()}},oe.prototype.createOption=function(t){var e=new ae;return e.Parent=this,e.optionName=t,this.Kids.push(e),he.call(this.scope,e),e};var se=function(){re.call(this),this.fontName="zapfdingbats",this.caption="3",this.appearanceState="On",this.value="On",this.textAlign="center",this.appearanceStreamContent=ce.CheckBox.createAppearanceStream()};Bt(se,re);var ue=function(){Zt.call(this),this.FT="/Tx",Object.defineProperty(this,"multiline",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,13))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,13):this.Ff=qt(this.Ff,13)}}),Object.defineProperty(this,"fileSelect",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,21))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,21):this.Ff=qt(this.Ff,21)}}),Object.defineProperty(this,"doNotSpellCheck",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,23))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,23):this.Ff=qt(this.Ff,23)}}),Object.defineProperty(this,"doNotScroll",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,24))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,24):this.Ff=qt(this.Ff,24)}}),Object.defineProperty(this,"comb",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,25))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,25):this.Ff=qt(this.Ff,25)}}),Object.defineProperty(this,"richText",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,26))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,26):this.Ff=qt(this.Ff,26)}});var t=null;Object.defineProperty(this,"MaxLen",{enumerable:!0,configurable:!1,get:function(){return t},set:function(e){t=e}}),Object.defineProperty(this,"maxLength",{enumerable:!0,configurable:!0,get:function(){return t},set:function(e){Number.isInteger(e)&&(t=e)}}),Object.defineProperty(this,"hasAppearanceStream",{enumerable:!0,configurable:!0,get:function(){return this.V||this.DV}})};Bt(ue,Zt);var le=function(){ue.call(this),Object.defineProperty(this,"password",{enumerable:!0,configurable:!0,get:function(){return Boolean(Rt(this.Ff,14))},set:function(t){!0===Boolean(t)?this.Ff=Dt(this.Ff,14):this.Ff=qt(this.Ff,14)}}),this.password=!0};Bt(le,ue);var ce={CheckBox:{createAppearanceStream:function(){return{N:{On:ce.CheckBox.YesNormal},D:{On:ce.CheckBox.YesPushDown,Off:ce.CheckBox.OffPushDown}}},YesPushDown:function(t){var e=Tt(t);e.scope=t.scope;var n=[],r=t.scope.internal.getFont(t.fontName,t.fontStyle).id,i=t.scope.__private__.encodeColorString(t.color),o=Ht(t,t.caption);return n.push("0.749023 g"),n.push("0 0 "+It(ce.internal.getWidth(t))+" "+It(ce.internal.getHeight(t))+" re"),n.push("f"),n.push("BMC"),n.push("q"),n.push("0 0 1 rg"),n.push("/"+r+" "+It(o.fontSize)+" Tf "+i),n.push("BT"),n.push(o.text),n.push("ET"),n.push("Q"),n.push("EMC"),e.stream=n.join("\n"),e},YesNormal:function(t){var e=Tt(t);e.scope=t.scope;var n=t.scope.internal.getFont(t.fontName,t.fontStyle).id,r=t.scope.__private__.encodeColorString(t.color),i=[],o=ce.internal.getHeight(t),a=ce.internal.getWidth(t),s=Ht(t,t.caption);return i.push("1 g"),i.push("0 0 "+It(a)+" "+It(o)+" re"),i.push("f"),i.push("q"),i.push("0 0 1 rg"),i.push("0 0 "+It(a-1)+" "+It(o-1)+" re"),i.push("W"),i.push("n"),i.push("0 g"),i.push("BT"),i.push("/"+n+" "+It(s.fontSize)+" Tf "+r),i.push(s.text),i.push("ET"),i.push("Q"),e.stream=i.join("\n"),e},OffPushDown:function(t){var e=Tt(t);e.scope=t.scope;var n=[];return n.push("0.749023 g"),n.push("0 0 "+It(ce.internal.getWidth(t))+" "+It(ce.internal.getHeight(t))+" re"),n.push("f"),e.stream=n.join("\n"),e}},RadioButton:{Circle:{createAppearanceStream:function(t){var e={D:{Off:ce.RadioButton.Circle.OffPushDown},N:{}};return e.N[t]=ce.RadioButton.Circle.YesNormal,e.D[t]=ce.RadioButton.Circle.YesPushDown,e},getCA:function(){return"l"},YesNormal:function(t){var e=Tt(t);e.scope=t.scope;var n=[],r=ce.internal.getWidth(t)<=ce.internal.getHeight(t)?ce.internal.getWidth(t)/4:ce.internal.getHeight(t)/4;r=Number((.9*r).toFixed(5));var i=ce.internal.Bezier_C,o=Number((r*i).toFixed(5));return n.push("q"),n.push("1 0 0 1 "+Mt(ce.internal.getWidth(t)/2)+" "+Mt(ce.internal.getHeight(t)/2)+" cm"),n.push(r+" 0 m"),n.push(r+" "+o+" "+o+" "+r+" 0 "+r+" c"),n.push("-"+o+" "+r+" -"+r+" "+o+" -"+r+" 0 c"),n.push("-"+r+" -"+o+" -"+o+" -"+r+" 0 -"+r+" c"),n.push(o+" -"+r+" "+r+" -"+o+" "+r+" 0 c"),n.push("f"),n.push("Q"),e.stream=n.join("\n"),e},YesPushDown:function(t){var e=Tt(t);e.scope=t.scope;var n=[],r=ce.internal.getWidth(t)<=ce.internal.getHeight(t)?ce.internal.getWidth(t)/4:ce.internal.getHeight(t)/4;r=Number((.9*r).toFixed(5));var i=Number((2*r).toFixed(5)),o=Number((i*ce.internal.Bezier_C).toFixed(5)),a=Number((r*ce.internal.Bezier_C).toFixed(5));return n.push("0.749023 g"),n.push("q"),n.push("1 0 0 1 "+Mt(ce.internal.getWidth(t)/2)+" "+Mt(ce.internal.getHeight(t)/2)+" cm"),n.push(i+" 0 m"),n.push(i+" "+o+" "+o+" "+i+" 0 "+i+" c"),n.push("-"+o+" "+i+" -"+i+" "+o+" -"+i+" 0 c"),n.push("-"+i+" -"+o+" -"+o+" -"+i+" 0 -"+i+" c"),n.push(o+" -"+i+" "+i+" -"+o+" "+i+" 0 c"),n.push("f"),n.push("Q"),n.push("0 g"),n.push("q"),n.push("1 0 0 1 "+Mt(ce.internal.getWidth(t)/2)+" "+Mt(ce.internal.getHeight(t)/2)+" cm"),n.push(r+" 0 m"),n.push(r+" "+a+" "+a+" "+r+" 0 "+r+" c"),n.push("-"+a+" "+r+" -"+r+" "+a+" -"+r+" 0 c"),n.push("-"+r+" -"+a+" -"+a+" -"+r+" 0 -"+r+" c"),n.push(a+" -"+r+" "+r+" -"+a+" "+r+" 0 c"),n.push("f"),n.push("Q"),e.stream=n.join("\n"),e},OffPushDown:function(t){var e=Tt(t);e.scope=t.scope;var n=[],r=ce.internal.getWidth(t)<=ce.internal.getHeight(t)?ce.internal.getWidth(t)/4:ce.internal.getHeight(t)/4;r=Number((.9*r).toFixed(5));var i=Number((2*r).toFixed(5)),o=Number((i*ce.internal.Bezier_C).toFixed(5));return n.push("0.749023 g"),n.push("q"),n.push("1 0 0 1 "+Mt(ce.internal.getWidth(t)/2)+" "+Mt(ce.internal.getHeight(t)/2)+" cm"),n.push(i+" 0 m"),n.push(i+" "+o+" "+o+" "+i+" 0 "+i+" c"),n.push("-"+o+" "+i+" -"+i+" "+o+" -"+i+" 0 c"),n.push("-"+i+" -"+o+" -"+o+" -"+i+" 0 -"+i+" c"),n.push(o+" -"+i+" "+i+" -"+o+" "+i+" 0 c"),n.push("f"),n.push("Q"),e.stream=n.join("\n"),e}},Cross:{createAppearanceStream:function(t){var e={D:{Off:ce.RadioButton.Cross.OffPushDown},N:{}};return e.N[t]=ce.RadioButton.Cross.YesNormal,e.D[t]=ce.RadioButton.Cross.YesPushDown,e},getCA:function(){return"8"},YesNormal:function(t){var e=Tt(t);e.scope=t.scope;var n=[],r=ce.internal.calculateCross(t);return n.push("q"),n.push("1 1 "+It(ce.internal.getWidth(t)-2)+" "+It(ce.internal.getHeight(t)-2)+" re"),n.push("W"),n.push("n"),n.push(It(r.x1.x)+" "+It(r.x1.y)+" m"),n.push(It(r.x2.x)+" "+It(r.x2.y)+" l"),n.push(It(r.x4.x)+" "+It(r.x4.y)+" m"),n.push(It(r.x3.x)+" "+It(r.x3.y)+" l"),n.push("s"),n.push("Q"),e.stream=n.join("\n"),e},YesPushDown:function(t){var e=Tt(t);e.scope=t.scope;var n=ce.internal.calculateCross(t),r=[];return r.push("0.749023 g"),r.push("0 0 "+It(ce.internal.getWidth(t))+" "+It(ce.internal.getHeight(t))+" re"),r.push("f"),r.push("q"),r.push("1 1 "+It(ce.internal.getWidth(t)-2)+" "+It(ce.internal.getHeight(t)-2)+" re"),r.push("W"),r.push("n"),r.push(It(n.x1.x)+" "+It(n.x1.y)+" m"),r.push(It(n.x2.x)+" "+It(n.x2.y)+" l"),r.push(It(n.x4.x)+" "+It(n.x4.y)+" m"),r.push(It(n.x3.x)+" "+It(n.x3.y)+" l"),r.push("s"),r.push("Q"),e.stream=r.join("\n"),e},OffPushDown:function(t){var e=Tt(t);e.scope=t.scope;var n=[];return n.push("0.749023 g"),n.push("0 0 "+It(ce.internal.getWidth(t))+" "+It(ce.internal.getHeight(t))+" re"),n.push("f"),e.stream=n.join("\n"),e}}},createDefaultAppearanceStream:function(t){var e=t.scope.internal.getFont(t.fontName,t.fontStyle).id,n=t.scope.__private__.encodeColorString(t.color);return"/"+e+" "+t.fontSize+" Tf "+n}};ce.internal={Bezier_C:.551915024494,calculateCross:function(t){var e=ce.internal.getWidth(t),n=ce.internal.getHeight(t),r=Math.min(e,n);return{x1:{x:(e-r)/2,y:(n-r)/2+r},x2:{x:(e-r)/2+r,y:(n-r)/2},x3:{x:(e-r)/2,y:(n-r)/2},x4:{x:(e-r)/2+r,y:(n-r)/2+r}}}},ce.internal.getWidth=function(t){var e=0;return"object"===i()(t)&&(e=Ft(t.Rect[2])),e},ce.internal.getHeight=function(t){var e=0;return"object"===i()(t)&&(e=Ft(t.Rect[3])),e};var he=Nt.addField=function(t){if(function(t,e){if(e.scope=t,void 0!==t.internal&&(void 0===t.internal.acroformPlugin||!1===t.internal.acroformPlugin.isInitialized)){if(Zt.FieldNum=0,t.internal.acroformPlugin=JSON.parse(JSON.stringify(Vt)),t.internal.acroformPlugin.acroFormDictionaryRoot)throw new Error("Exception while creating AcroformDictionary");kt=t.internal.scaleFactor,t.internal.acroformPlugin.acroFormDictionaryRoot=new $t,t.internal.acroformPlugin.acroFormDictionaryRoot.scope=t,t.internal.acroformPlugin.acroFormDictionaryRoot._eventID=t.internal.events.subscribe("postPutResources",(function(){var e;(e=t).internal.events.unsubscribe(e.internal.acroformPlugin.acroFormDictionaryRoot._eventID),delete e.internal.acroformPlugin.acroFormDictionaryRoot._eventID,e.internal.acroformPlugin.printedOut=!0})),t.internal.events.subscribe("buildDocument",(function(){!function(t){t.internal.acroformPlugin.acroFormDictionaryRoot.objId=void 0;var e=t.internal.acroformPlugin.acroFormDictionaryRoot.Fields;for(var n in e)if(e.hasOwnProperty(n)){var r=e[n];r.objId=void 0,r.hasAnnotation&&Gt(r,t)}}(t)})),t.internal.events.subscribe("putCatalog",(function(){!function(t){if(void 0===t.internal.acroformPlugin.acroFormDictionaryRoot)throw new Error("putCatalogCallback: Root missing.");t.internal.write("/AcroForm "+t.internal.acroformPlugin.acroFormDictionaryRoot.objId+" 0 R")}(t)})),t.internal.events.subscribe("postPutPages",(function(e){!function(t,e){var n=!t;for(var r in t||(e.internal.newObjectDeferredBegin(e.internal.acroformPlugin.acroFormDictionaryRoot.objId,!0),e.internal.acroformPlugin.acroFormDictionaryRoot.putStream()),t=t||e.internal.acroformPlugin.acroFormDictionaryRoot.Kids)if(t.hasOwnProperty(r)){var o=t[r],a=[],s=o.Rect;if(o.Rect&&(o.Rect=zt(o.Rect,e)),e.internal.newObjectDeferredBegin(o.objId,!0),o.DA=ce.createDefaultAppearanceStream(o),"object"===i()(o)&&"function"==typeof o.getKeyValueListForStream&&(a=o.getKeyValueListForStream()),o.Rect=s,o.hasAppearanceStream&&!o.appearanceStreamContent){var u=Ut(o);a.push({key:"AP",value:"<</N "+u+">>"}),e.internal.acroformPlugin.xForms.push(u)}if(o.appearanceStreamContent){var l="";for(var c in o.appearanceStreamContent)if(o.appearanceStreamContent.hasOwnProperty(c)){var h=o.appearanceStreamContent[c];if(l+="/"+c+" ",l+="<<",Object.keys(h).length>=1||Array.isArray(h)){for(var r in h)if(h.hasOwnProperty(r)){var f=h[r];"function"==typeof f&&(f=f.call(e,o)),l+="/"+r+" "+f+" ",e.internal.acroformPlugin.xForms.indexOf(f)>=0||e.internal.acroformPlugin.xForms.push(f)}}else"function"==typeof(f=h)&&(f=f.call(e,o)),l+="/"+r+" "+f,e.internal.acroformPlugin.xForms.indexOf(f)>=0||e.internal.acroformPlugin.xForms.push(f);l+=">>"}a.push({key:"AP",value:"<<\n"+l+">>"})}e.internal.putStream({additionalKeyValues:a,objectId:o.objId}),e.internal.out("endobj")}n&&function(t,e){for(var n in t)if(t.hasOwnProperty(n)){var r=n,o=t[n];e.internal.newObjectDeferredBegin(o.objId,!0),"object"===i()(o)&&"function"==typeof o.putStream&&o.putStream(),delete t[r]}}(e.internal.acroformPlugin.xForms,e)}(e,t)})),t.internal.acroformPlugin.isInitialized=!0}}(this,t),!(t instanceof Zt))throw new Error("Invalid argument passed to jsPDF.addField.");var e;return(e=t).scope.internal.acroformPlugin.printedOut&&(e.scope.internal.acroformPlugin.printedOut=!1,e.scope.internal.acroformPlugin.acroFormDictionaryRoot=null),e.scope.internal.acroformPlugin.acroFormDictionaryRoot.Fields.push(e),t.page=t.scope.internal.getCurrentPageInfo().pageNumber,this};Nt.AcroFormChoiceField=Qt,Nt.AcroFormListBox=te,Nt.AcroFormComboBox=ee,Nt.AcroFormEditBox=ne,Nt.AcroFormButton=re,Nt.AcroFormPushButton=ie,Nt.AcroFormRadioButton=oe,Nt.AcroFormCheckBox=se,Nt.AcroFormTextField=ue,Nt.AcroFormPasswordField=le,Nt.AcroFormAppearance=ce,Nt.AcroForm={ChoiceField:Qt,ListBox:te,ComboBox:ee,EditBox:ne,Button:re,PushButton:ie,RadioButton:oe,CheckBox:se,TextField:ue,PasswordField:le,Appearance:ce},Lt.AcroForm={ChoiceField:Qt,ListBox:te,ComboBox:ee,EditBox:ne,Button:re,PushButton:ie,RadioButton:oe,CheckBox:se,TextField:ue,PasswordField:le,Appearance:ce};var fe,de,pe=Lt.AcroForm;function ge(t){return t.reduce((function(t,e,n){return t[e]=n,t}),{})}!function(t){t.__addimage__={};var e="UNKNOWN",n={PNG:[[137,80,78,71]],TIFF:[[77,77,0,42],[73,73,42,0]],JPEG:[[255,216,255,224,void 0,void 0,74,70,73,70,0],[255,216,255,225,void 0,void 0,69,120,105,102,0,0],[255,216,255,219],[255,216,255,238]],JPEG2000:[[0,0,0,12,106,80,32,32]],GIF87a:[[71,73,70,56,55,97]],GIF89a:[[71,73,70,56,57,97]],WEBP:[[82,73,70,70,void 0,void 0,void 0,void 0,87,69,66,80]],BMP:[[66,77],[66,65],[67,73],[67,80],[73,67],[80,84]]},r=t.__addimage__.getImageFileTypeByImageData=function(t,r){var i,o,a,s,u,l=e;if("RGBA"===(r=r||e)||void 0!==t.data&&t.data instanceof Uint8ClampedArray&&"height"in t&&"width"in t)return"RGBA";if(_(t))for(u in n)for(a=n[u],i=0;i<a.length;i+=1){for(s=!0,o=0;o<a[i].length;o+=1)if(void 0!==a[i][o]&&a[i][o]!==t[o]){s=!1;break}if(!0===s){l=u;break}}else for(u in n)for(a=n[u],i=0;i<a.length;i+=1){for(s=!0,o=0;o<a[i].length;o+=1)if(void 0!==a[i][o]&&a[i][o]!==t.charCodeAt(o)){s=!1;break}if(!0===s){l=u;break}}return l===e&&r!==e&&(l=r),l},o=function t(e){for(var n=this.internal.write,r=this.internal.putStream,i=(0,this.internal.getFilters)();-1!==i.indexOf("FlateEncode");)i.splice(i.indexOf("FlateEncode"),1);e.objectId=this.internal.newObject();var o=[];if(o.push({key:"Type",value:"/XObject"}),o.push({key:"Subtype",value:"/Image"}),o.push({key:"Width",value:e.width}),o.push({key:"Height",value:e.height}),e.colorSpace===v.INDEXED?o.push({key:"ColorSpace",value:"[/Indexed /DeviceRGB "+(e.palette.length/3-1)+" "+("sMask"in e&&void 0!==e.sMask?e.objectId+2:e.objectId+1)+" 0 R]"}):(o.push({key:"ColorSpace",value:"/"+e.colorSpace}),e.colorSpace===v.DEVICE_CMYK&&o.push({key:"Decode",value:"[1 0 1 0 1 0 1 0]"})),o.push({key:"BitsPerComponent",value:e.bitsPerComponent}),"decodeParameters"in e&&void 0!==e.decodeParameters&&o.push({key:"DecodeParms",value:"<<"+e.decodeParameters+">>"}),"transparency"in e&&Array.isArray(e.transparency)){for(var a="",s=0,u=e.transparency.length;s<u;s++)a+=e.transparency[s]+" "+e.transparency[s]+" ";o.push({key:"Mask",value:"["+a+"]"})}void 0!==e.sMask&&o.push({key:"SMask",value:e.objectId+1+" 0 R"});var l=void 0!==e.filter?["/"+e.filter]:void 0;if(r({data:e.data,additionalKeyValues:o,alreadyAppliedFilters:l,objectId:e.objectId}),n("endobj"),"sMask"in e&&void 0!==e.sMask){var c="/Predictor "+e.predictor+" /Colors 1 /BitsPerComponent "+e.bitsPerComponent+" /Columns "+e.width,h={width:e.width,height:e.height,colorSpace:"DeviceGray",bitsPerComponent:e.bitsPerComponent,decodeParameters:c,data:e.sMask};"filter"in e&&(h.filter=e.filter),t.call(this,h)}if(e.colorSpace===v.INDEXED){var f=this.internal.newObject();r({data:L(new Uint8Array(e.palette)),objectId:f}),n("endobj")}},a=function(){var t=this.internal.collections.addImage_images;for(var e in t)o.call(this,t[e])},s=function(){var t,e=this.internal.collections.addImage_images,n=this.internal.write;for(var r in e)n("/I"+(t=e[r]).index,t.objectId,"0","R")},u=function(){this.internal.collections.addImage_images||(this.internal.collections.addImage_images={},this.internal.events.subscribe("putResources",a),this.internal.events.subscribe("putXobjectDict",s))},l=function(){var t=this.internal.collections.addImage_images;return u.call(this),t},c=function(){return Object.keys(this.internal.collections.addImage_images).length},h=function(e){return"function"==typeof t["process"+e.toUpperCase()]},f=function(t){return"object"===i()(t)&&1===t.nodeType},d=function(e,n){if("IMG"===e.nodeName&&e.hasAttribute("src")){var r=""+e.getAttribute("src");if(0===r.indexOf("data:image/"))return Z(unescape(r).split("base64,").pop());var i=t.loadFile(r,!0);if(void 0!==i)return i}if("CANVAS"===e.nodeName){if(0===e.width||0===e.height)throw new Error("Given canvas must have data. Canvas width: "+e.width+", height: "+e.height);var o;switch(n){case"PNG":o="image/png";break;case"WEBP":o="image/webp";break;default:o="image/jpeg"}return Z(e.toDataURL(o,1).split("base64,").pop())}},p=function(t){var e=this.internal.collections.addImage_images;if(e)for(var n in e)if(t===e[n].alias)return e[n]},g=function(t,e,n){return t||e||(t=-96,e=-96),t<0&&(t=-1*n.width*72/t/this.internal.scaleFactor),e<0&&(e=-1*n.height*72/e/this.internal.scaleFactor),0===t&&(t=e*n.width/n.height),0===e&&(e=t*n.height/n.width),[t,e]},m=function(t,e,n,r,i,o){var a=g.call(this,n,r,i),s=this.internal.getCoordinateString,u=this.internal.getVerticalCoordinateString,c=l.call(this);if(n=a[0],r=a[1],c[i.index]=i,o){o*=Math.PI/180;var h=Math.cos(o),f=Math.sin(o),d=function(t){return t.toFixed(4)},p=[d(h),d(f),d(-1*f),d(h),0,0,"cm"]}this.internal.write("q"),o?(this.internal.write([1,"0","0",1,s(t),u(e+r),"cm"].join(" ")),this.internal.write(p.join(" ")),this.internal.write([s(n),"0","0",s(r),"0","0","cm"].join(" "))):this.internal.write([s(n),"0","0",s(r),s(t),u(e+r),"cm"].join(" ")),this.isAdvancedAPI()&&this.internal.write([1,0,0,-1,0,0,"cm"].join(" ")),this.internal.write("/I"+i.index+" Do"),this.internal.write("Q")},v=t.color_spaces={DEVICE_RGB:"DeviceRGB",DEVICE_GRAY:"DeviceGray",DEVICE_CMYK:"DeviceCMYK",CAL_GREY:"CalGray",CAL_RGB:"CalRGB",LAB:"Lab",ICC_BASED:"ICCBased",INDEXED:"Indexed",PATTERN:"Pattern",SEPARATION:"Separation",DEVICE_N:"DeviceN"};t.decode={DCT_DECODE:"DCTDecode",FLATE_DECODE:"FlateDecode",LZW_DECODE:"LZWDecode",JPX_DECODE:"JPXDecode",JBIG2_DECODE:"JBIG2Decode",ASCII85_DECODE:"ASCII85Decode",ASCII_HEX_DECODE:"ASCIIHexDecode",RUN_LENGTH_DECODE:"RunLengthDecode",CCITT_FAX_DECODE:"CCITTFaxDecode"};var y=t.image_compression={NONE:"NONE",FAST:"FAST",MEDIUM:"MEDIUM",SLOW:"SLOW"},b=t.__addimage__.sHashCode=function(t){var e,n,r=0;if("string"==typeof t)for(n=t.length,e=0;e<n;e++)r=(r<<5)-r+t.charCodeAt(e),r|=0;else if(_(t))for(n=t.byteLength/2,e=0;e<n;e++)r=(r<<5)-r+t[e],r|=0;return r},w=t.__addimage__.validateStringAsBase64=function(t){(t=t||"").toString().trim();var e=!0;return 0===t.length&&(e=!1),t.length%4!=0&&(e=!1),!1===/^[A-Za-z0-9+/]+$/.test(t.substr(0,t.length-2))&&(e=!1),!1===/^[A-Za-z0-9/][A-Za-z0-9+/]|[A-Za-z0-9+/]=|==$/.test(t.substr(-2))&&(e=!1),e},A=t.__addimage__.extractImageFromDataUrl=function(t){var e=(t=t||"").split("base64,"),n=null;if(2===e.length){var r=/^data:(\w*\/\w*);*(charset=(?!charset=)[\w=-]*)*;*$/.exec(e[0]);Array.isArray(r)&&(n={mimeType:r[1],charset:r[2],data:e[1]})}return n},x=t.__addimage__.supportsArrayBuffer=function(){return"undefined"!=typeof ArrayBuffer&&"undefined"!=typeof Uint8Array};t.__addimage__.isArrayBuffer=function(t){return x()&&t instanceof ArrayBuffer};var _=t.__addimage__.isArrayBufferView=function(t){return x()&&"undefined"!=typeof Uint32Array&&(t instanceof Int8Array||t instanceof Uint8Array||"undefined"!=typeof Uint8ClampedArray&&t instanceof Uint8ClampedArray||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array)},S=t.__addimage__.binaryStringToUint8Array=function(t){for(var e=t.length,n=new Uint8Array(e),r=0;r<e;r++)n[r]=t.charCodeAt(r);return n},L=t.__addimage__.arrayBufferToBinaryString=function(t){for(var e="",n=_(t)?t:new Uint8Array(t),r=0;r<n.length;r+=8192)e+=String.fromCharCode.apply(null,n.subarray(r,r+8192));return e};t.addImage=function(){var t,n,r,o,a,s,l,c,h;if("number"==typeof arguments[1]?(n=e,r=arguments[1],o=arguments[2],a=arguments[3],s=arguments[4],l=arguments[5],c=arguments[6],h=arguments[7]):(n=arguments[1],r=arguments[2],o=arguments[3],a=arguments[4],s=arguments[5],l=arguments[6],c=arguments[7],h=arguments[8]),"object"===i()(t=arguments[0])&&!f(t)&&"imageData"in t){var d=t;t=d.imageData,n=d.format||n||e,r=d.x||r||0,o=d.y||o||0,a=d.w||d.width||a,s=d.h||d.height||s,l=d.alias||l,c=d.compression||c,h=d.rotation||d.angle||h}var p=this.internal.getFilters();if(void 0===c&&-1!==p.indexOf("FlateEncode")&&(c="SLOW"),isNaN(r)||isNaN(o))throw new Error("Invalid coordinates passed to jsPDF.addImage");u.call(this);var g=N.call(this,t,n,l,c);return m.call(this,r,o,a,s,g,h),this};var N=function(n,i,o,a){var s,u,l;if("string"==typeof n&&r(n)===e){n=unescape(n);var g=k(n,!1);(""!==g||void 0!==(g=t.loadFile(n,!0)))&&(n=g)}if(f(n)&&(n=d(n,i)),i=r(n,i),!h(i))throw new Error("addImage does not support files of type '"+i+"', please ensure that a plugin for '"+i+"' support is added.");if((null==(l=o)||0===l.length)&&(o=function(t){return"string"==typeof t||_(t)?b(t):_(t.data)?b(t.data):null}(n)),(s=p.call(this,o))||(x()&&(n instanceof Uint8Array||"RGBA"===i||(u=n,n=S(n))),s=this["process"+i.toUpperCase()](n,c.call(this),o,function(e){return e&&"string"==typeof e&&(e=e.toUpperCase()),e in t.image_compression?e:y.NONE}(a),u)),!s)throw new Error("An unknown error occurred whilst processing the image.");return s},k=t.__addimage__.convertBase64ToBinaryString=function(t,e){var n;e="boolean"!=typeof e||e;var r,i="";if("string"==typeof t){r=null!==(n=A(t))?n.data:t;try{i=Z(r)}catch(t){if(e)throw w(r)?new Error("atob-Error in jsPDF.convertBase64ToBinaryString "+t.message):new Error("Supplied Data is not a valid base64-String jsPDF.convertBase64ToBinaryString ")}}return i};t.getImageProperties=function(n){var i,o,a="";if(f(n)&&(n=d(n)),"string"==typeof n&&r(n)===e&&(""===(a=k(n,!1))&&(a=t.loadFile(n)||""),n=a),o=r(n),!h(o))throw new Error("addImage does not support files of type '"+o+"', please ensure that a plugin for '"+o+"' support is added.");if(!x()||n instanceof Uint8Array||(n=S(n)),!(i=this["process"+o.toUpperCase()](n)))throw new Error("An unknown error occurred whilst processing the image");return i.fileType=o,i}}(Lt.API),fe=Lt.API,de=function(t){if(void 0!==t&&""!=t)return!0},Lt.API.events.push(["addPage",function(t){this.internal.getPageInfo(t.pageNumber).pageContext.annotations=[]}]),fe.events.push(["putPage",function(t){for(var e,n,r,i=this.internal.getCoordinateString,o=this.internal.getVerticalCoordinateString,a=this.internal.getPageInfoByObjId(t.objId),s=t.pageContext.annotations,u=!1,l=0;l<s.length&&!u;l++)switch((e=s[l]).type){case"link":(de(e.options.url)||de(e.options.pageNumber))&&(u=!0);break;case"reference":case"text":case"freetext":u=!0}if(0!=u){this.internal.write("/Annots [");for(var c=0;c<s.length;c++){e=s[c];var h=this.internal.pdfEscape,f=this.internal.getEncryptor(t.objId);switch(e.type){case"reference":this.internal.write(" "+e.object.objId+" 0 R ");break;case"text":var d=this.internal.newAdditionalObject(),p=this.internal.newAdditionalObject(),g=this.internal.getEncryptor(d.objId),m=e.title||"Note";r="<</Type /Annot /Subtype /Text "+(n="/Rect ["+i(e.bounds.x)+" "+o(e.bounds.y+e.bounds.h)+" "+i(e.bounds.x+e.bounds.w)+" "+o(e.bounds.y)+"] ")+"/Contents ("+h(g(e.contents))+")",r+=" /Popup "+p.objId+" 0 R",r+=" /P "+a.objId+" 0 R",r+=" /T ("+h(g(m))+") >>",d.content=r;var v=d.objId+" 0 R";r="<</Type /Annot /Subtype /Popup "+(n="/Rect ["+i(e.bounds.x+30)+" "+o(e.bounds.y+e.bounds.h)+" "+i(e.bounds.x+e.bounds.w+30)+" "+o(e.bounds.y)+"] ")+" /Parent "+v,e.open&&(r+=" /Open true"),r+=" >>",p.content=r,this.internal.write(d.objId,"0 R",p.objId,"0 R");break;case"freetext":n="/Rect ["+i(e.bounds.x)+" "+o(e.bounds.y)+" "+i(e.bounds.x+e.bounds.w)+" "+o(e.bounds.y+e.bounds.h)+"] ";var y=e.color||"#000000";r="<</Type /Annot /Subtype /FreeText "+n+"/Contents ("+h(f(e.contents))+")",r+=" /DS(font: Helvetica,sans-serif 12.0pt; text-align:left; color:#"+y+")",r+=" /Border [0 0 0]",r+=" >>",this.internal.write(r);break;case"link":if(e.options.name){var b=this.annotations._nameMap[e.options.name];e.options.pageNumber=b.page,e.options.top=b.y}else e.options.top||(e.options.top=0);if(n="/Rect ["+e.finalBounds.x+" "+e.finalBounds.y+" "+e.finalBounds.w+" "+e.finalBounds.h+"] ",r="",e.options.url)r="<</Type /Annot /Subtype /Link "+n+"/Border [0 0 0] /A <</S /URI /URI ("+h(f(e.options.url))+") >>";else if(e.options.pageNumber)switch(r="<</Type /Annot /Subtype /Link "+n+"/Border [0 0 0] /Dest ["+this.internal.getPageInfo(e.options.pageNumber).objId+" 0 R",e.options.magFactor=e.options.magFactor||"XYZ",e.options.magFactor){case"Fit":r+=" /Fit]";break;case"FitH":r+=" /FitH "+e.options.top+"]";break;case"FitV":e.options.left=e.options.left||0,r+=" /FitV "+e.options.left+"]";break;default:var w=o(e.options.top);e.options.left=e.options.left||0,void 0===e.options.zoom&&(e.options.zoom=0),r+=" /XYZ "+e.options.left+" "+w+" "+e.options.zoom+"]"}""!=r&&(r+=" >>",this.internal.write(r))}}this.internal.write("]")}}]),fe.createAnnotation=function(t){var e=this.internal.getCurrentPageInfo();switch(t.type){case"link":this.link(t.bounds.x,t.bounds.y,t.bounds.w,t.bounds.h,t);break;case"text":case"freetext":e.pageContext.annotations.push(t)}},fe.link=function(t,e,n,r,i){var o=this.internal.getCurrentPageInfo(),a=this.internal.getCoordinateString,s=this.internal.getVerticalCoordinateString;o.pageContext.annotations.push({finalBounds:{x:a(t),y:s(e),w:a(t+n),h:s(e+r)},options:i,type:"link"})},fe.textWithLink=function(t,e,n,r){var i,o,a=this.getTextWidth(t),s=this.internal.getLineHeight()/this.internal.scaleFactor;if(void 0!==r.maxWidth){o=r.maxWidth;var u=this.splitTextToSize(t,o).length;i=Math.ceil(s*u)}else o=a,i=s;return this.text(t,e,n,r),n+=.2*s,"center"===r.align&&(e-=a/2),"right"===r.align&&(e-=a),this.link(e,n-s,o,i,r),a},fe.getTextWidth=function(t){var e=this.internal.getFontSize();return this.getStringUnitWidth(t)*e/this.internal.scaleFactor},function(t){var e={1569:[65152],1570:[65153,65154],1571:[65155,65156],1572:[65157,65158],1573:[65159,65160],1574:[65161,65162,65163,65164],1575:[65165,65166],1576:[65167,65168,65169,65170],1577:[65171,65172],1578:[65173,65174,65175,65176],1579:[65177,65178,65179,65180],1580:[65181,65182,65183,65184],1581:[65185,65186,65187,65188],1582:[65189,65190,65191,65192],1583:[65193,65194],1584:[65195,65196],1585:[65197,65198],1586:[65199,65200],1587:[65201,65202,65203,65204],1588:[65205,65206,65207,65208],1589:[65209,65210,65211,65212],1590:[65213,65214,65215,65216],1591:[65217,65218,65219,65220],1592:[65221,65222,65223,65224],1593:[65225,65226,65227,65228],1594:[65229,65230,65231,65232],1601:[65233,65234,65235,65236],1602:[65237,65238,65239,65240],1603:[65241,65242,65243,65244],1604:[65245,65246,65247,65248],1605:[65249,65250,65251,65252],1606:[65253,65254,65255,65256],1607:[65257,65258,65259,65260],1608:[65261,65262],1609:[65263,65264,64488,64489],1610:[65265,65266,65267,65268],1649:[64336,64337],1655:[64477],1657:[64358,64359,64360,64361],1658:[64350,64351,64352,64353],1659:[64338,64339,64340,64341],1662:[64342,64343,64344,64345],1663:[64354,64355,64356,64357],1664:[64346,64347,64348,64349],1667:[64374,64375,64376,64377],1668:[64370,64371,64372,64373],1670:[64378,64379,64380,64381],1671:[64382,64383,64384,64385],1672:[64392,64393],1676:[64388,64389],1677:[64386,64387],1678:[64390,64391],1681:[64396,64397],1688:[64394,64395],1700:[64362,64363,64364,64365],1702:[64366,64367,64368,64369],1705:[64398,64399,64400,64401],1709:[64467,64468,64469,64470],1711:[64402,64403,64404,64405],1713:[64410,64411,64412,64413],1715:[64406,64407,64408,64409],1722:[64414,64415],1723:[64416,64417,64418,64419],1726:[64426,64427,64428,64429],1728:[64420,64421],1729:[64422,64423,64424,64425],1733:[64480,64481],1734:[64473,64474],1735:[64471,64472],1736:[64475,64476],1737:[64482,64483],1739:[64478,64479],1740:[64508,64509,64510,64511],1744:[64484,64485,64486,64487],1746:[64430,64431],1747:[64432,64433]},n={65247:{65154:65269,65156:65271,65160:65273,65166:65275},65248:{65154:65270,65156:65272,65160:65274,65166:65276},65165:{65247:{65248:{65258:65010}}},1617:{1612:64606,1613:64607,1614:64608,1615:64609,1616:64610}},r={1612:64606,1613:64607,1614:64608,1615:64609,1616:64610},i=[1570,1571,1573,1575];t.__arabicParser__={};var o=t.__arabicParser__.isInArabicSubstitutionA=function(t){return void 0!==e[t.charCodeAt(0)]},a=t.__arabicParser__.isArabicLetter=function(t){return"string"==typeof t&&/^[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\uFB50-\uFDFF\uFE70-\uFEFF]+$/.test(t)},s=t.__arabicParser__.isArabicEndLetter=function(t){return a(t)&&o(t)&&e[t.charCodeAt(0)].length<=2},u=t.__arabicParser__.isArabicAlfLetter=function(t){return a(t)&&i.indexOf(t.charCodeAt(0))>=0};t.__arabicParser__.arabicLetterHasIsolatedForm=function(t){return a(t)&&o(t)&&e[t.charCodeAt(0)].length>=1};var l=t.__arabicParser__.arabicLetterHasFinalForm=function(t){return a(t)&&o(t)&&e[t.charCodeAt(0)].length>=2};t.__arabicParser__.arabicLetterHasInitialForm=function(t){return a(t)&&o(t)&&e[t.charCodeAt(0)].length>=3};var c=t.__arabicParser__.arabicLetterHasMedialForm=function(t){return a(t)&&o(t)&&4==e[t.charCodeAt(0)].length},h=t.__arabicParser__.resolveLigatures=function(t){var e=0,r=n,i="",o=0;for(e=0;e<t.length;e+=1)void 0!==r[t.charCodeAt(e)]?(o++,"number"==typeof(r=r[t.charCodeAt(e)])&&(i+=String.fromCharCode(r),r=n,o=0),e===t.length-1&&(r=n,i+=t.charAt(e-(o-1)),e-=o-1,o=0)):(r=n,i+=t.charAt(e-o),e-=o,o=0);return i};t.__arabicParser__.isArabicDiacritic=function(t){return void 0!==t&&void 0!==r[t.charCodeAt(0)]};var f=t.__arabicParser__.getCorrectForm=function(t,e,n){return a(t)?!1===o(t)?-1:!l(t)||!a(e)&&!a(n)||!a(n)&&s(e)||s(t)&&!a(e)||s(t)&&u(e)||s(t)&&s(e)?0:c(t)&&a(e)&&!s(e)&&a(n)&&l(n)?3:s(t)||!a(n)?1:2:-1},d=function(t){var n=0,r=0,i=0,o="",s="",u="",l=(t=t||"").split("\\s+"),c=[];for(n=0;n<l.length;n+=1){for(c.push(""),r=0;r<l[n].length;r+=1)o=l[n][r],s=l[n][r-1],u=l[n][r+1],a(o)?(i=f(o,s,u),c[n]+=-1!==i?String.fromCharCode(e[o.charCodeAt(0)][i]):o):c[n]+=o;c[n]=h(c[n])}return c.join(" ")},p=t.__arabicParser__.processArabic=t.processArabic=function(){var t,e="string"==typeof arguments[0]?arguments[0]:arguments[0].text,n=[];if(Array.isArray(e)){var r=0;for(n=[],r=0;r<e.length;r+=1)Array.isArray(e[r])?n.push([d(e[r][0]),e[r][1],e[r][2]]):n.push([d(e[r])]);t=n}else t=d(e);return"string"==typeof arguments[0]?t:(arguments[0].text=t,arguments[0])};t.events.push(["preProcessText",p])}(Lt.API),Lt.API.autoPrint=function(t){var e;return"javascript"===((t=t||{}).variant=t.variant||"non-conform",t.variant)?this.addJS("print({});"):(this.internal.events.subscribe("postPutResources",(function(){e=this.internal.newObject(),this.internal.out("<<"),this.internal.out("/S /Named"),this.internal.out("/Type /Action"),this.internal.out("/N /Print"),this.internal.out(">>"),this.internal.out("endobj")})),this.internal.events.subscribe("putCatalog",(function(){this.internal.out("/OpenAction "+e+" 0 R")}))),this},function(t){var e=function(){var t=void 0;Object.defineProperty(this,"pdf",{get:function(){return t},set:function(e){t=e}});var e=150;Object.defineProperty(this,"width",{get:function(){return e},set:function(t){e=isNaN(t)||!1===Number.isInteger(t)||t<0?150:t,this.getContext("2d").pageWrapXEnabled&&(this.getContext("2d").pageWrapX=e+1)}});var n=300;Object.defineProperty(this,"height",{get:function(){return n},set:function(t){n=isNaN(t)||!1===Number.isInteger(t)||t<0?300:t,this.getContext("2d").pageWrapYEnabled&&(this.getContext("2d").pageWrapY=n+1)}});var r=[];Object.defineProperty(this,"childNodes",{get:function(){return r},set:function(t){r=t}});var i={};Object.defineProperty(this,"style",{get:function(){return i},set:function(t){i=t}}),Object.defineProperty(this,"parentNode",{})};e.prototype.getContext=function(t,e){var n;if("2d"!==(t=t||"2d"))return null;for(n in e)this.pdf.context2d.hasOwnProperty(n)&&(this.pdf.context2d[n]=e[n]);return this.pdf.context2d._canvas=this,this.pdf.context2d},e.prototype.toDataURL=function(){throw new Error("toDataURL is not implemented.")},t.events.push(["initialized",function(){this.canvas=new e,this.canvas.pdf=this}])}(Lt.API),function(t){var e={left:0,top:0,bottom:0,right:0},n=!1,r=function(){void 0===this.internal.__cell__&&(this.internal.__cell__={},this.internal.__cell__.padding=3,this.internal.__cell__.headerFunction=void 0,this.internal.__cell__.margins=Object.assign({},e),this.internal.__cell__.margins.width=this.getPageWidth(),o.call(this))},o=function(){this.internal.__cell__.lastCell=new a,this.internal.__cell__.pages=1},a=function(){var t=arguments[0];Object.defineProperty(this,"x",{enumerable:!0,get:function(){return t},set:function(e){t=e}});var e=arguments[1];Object.defineProperty(this,"y",{enumerable:!0,get:function(){return e},set:function(t){e=t}});var n=arguments[2];Object.defineProperty(this,"width",{enumerable:!0,get:function(){return n},set:function(t){n=t}});var r=arguments[3];Object.defineProperty(this,"height",{enumerable:!0,get:function(){return r},set:function(t){r=t}});var i=arguments[4];Object.defineProperty(this,"text",{enumerable:!0,get:function(){return i},set:function(t){i=t}});var o=arguments[5];Object.defineProperty(this,"lineNumber",{enumerable:!0,get:function(){return o},set:function(t){o=t}});var a=arguments[6];return Object.defineProperty(this,"align",{enumerable:!0,get:function(){return a},set:function(t){a=t}}),this};a.prototype.clone=function(){return new a(this.x,this.y,this.width,this.height,this.text,this.lineNumber,this.align)},a.prototype.toArray=function(){return[this.x,this.y,this.width,this.height,this.text,this.lineNumber,this.align]},t.setHeaderFunction=function(t){return r.call(this),this.internal.__cell__.headerFunction="function"==typeof t?t:void 0,this},t.getTextDimensions=function(t,e){r.call(this);var n=(e=e||{}).fontSize||this.getFontSize(),i=e.font||this.getFont(),o=e.scaleFactor||this.internal.scaleFactor,a=0,s=0,u=0,l=this;if(!Array.isArray(t)&&"string"!=typeof t){if("number"!=typeof t)throw new Error("getTextDimensions expects text-parameter to be of type String or type Number or an Array of Strings.");t=String(t)}var c=e.maxWidth;c>0?"string"==typeof t?t=this.splitTextToSize(t,c):"[object Array]"===Object.prototype.toString.call(t)&&(t=t.reduce((function(t,e){return t.concat(l.splitTextToSize(e,c))}),[])):t=Array.isArray(t)?t:[t];for(var h=0;h<t.length;h++)a<(u=this.getStringUnitWidth(t[h],{font:i})*n)&&(a=u);return 0!==a&&(s=t.length),{w:a/=o,h:Math.max((s*n*this.getLineHeightFactor()-n*(this.getLineHeightFactor()-1))/o,0)}},t.cellAddPage=function(){r.call(this),this.addPage();var t=this.internal.__cell__.margins||e;return this.internal.__cell__.lastCell=new a(t.left,t.top,void 0,void 0),this.internal.__cell__.pages+=1,this};var s=t.cell=function(){var t;t=arguments[0]instanceof a?arguments[0]:new a(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]),r.call(this);var i=this.internal.__cell__.lastCell,o=this.internal.__cell__.padding,s=this.internal.__cell__.margins||e,u=this.internal.__cell__.tableHeaderRow,l=this.internal.__cell__.printHeaders;return void 0!==i.lineNumber&&(i.lineNumber===t.lineNumber?(t.x=(i.x||0)+(i.width||0),t.y=i.y||0):i.y+i.height+t.height+s.bottom>this.getPageHeight()?(this.cellAddPage(),t.y=s.top,l&&u&&(this.printHeaderRow(t.lineNumber,!0),t.y+=u[0].height)):t.y=i.y+i.height||t.y),void 0!==t.text[0]&&(this.rect(t.x,t.y,t.width,t.height,!0===n?"FD":void 0),"right"===t.align?this.text(t.text,t.x+t.width-o,t.y+o,{align:"right",baseline:"top"}):"center"===t.align?this.text(t.text,t.x+t.width/2,t.y+o,{align:"center",baseline:"top",maxWidth:t.width-o-o}):this.text(t.text,t.x+o,t.y+o,{align:"left",baseline:"top",maxWidth:t.width-o-o})),this.internal.__cell__.lastCell=t,this};t.table=function(t,n,l,c,h){if(r.call(this),!l)throw new Error("No data for PDF table.");var f,d,p,g,m=[],v=[],y=[],b={},w={},A=[],x=[],_=(h=h||{}).autoSize||!1,S=!1!==h.printHeaders,L=h.css&&void 0!==h.css["font-size"]?16*h.css["font-size"]:h.fontSize||12,N=h.margins||Object.assign({width:this.getPageWidth()},e),k="number"==typeof h.padding?h.padding:3,C=h.headerBackgroundColor||"#c8c8c8",P=h.headerTextColor||"#000";if(o.call(this),this.internal.__cell__.printHeaders=S,this.internal.__cell__.margins=N,this.internal.__cell__.table_font_size=L,this.internal.__cell__.padding=k,this.internal.__cell__.headerBackgroundColor=C,this.internal.__cell__.headerTextColor=P,this.setFontSize(L),null==c)v=m=Object.keys(l[0]),y=m.map((function(){return"left"}));else if(Array.isArray(c)&&"object"===i()(c[0]))for(m=c.map((function(t){return t.name})),v=c.map((function(t){return t.prompt||t.name||""})),y=c.map((function(t){return t.align||"left"})),f=0;f<c.length;f+=1)w[c[f].name]=c[f].width*(19.049976/25.4);else Array.isArray(c)&&"string"==typeof c[0]&&(v=m=c,y=m.map((function(){return"left"})));if(_||Array.isArray(c)&&"string"==typeof c[0])for(f=0;f<m.length;f+=1){for(b[g=m[f]]=l.map((function(t){return t[g]})),this.setFont(void 0,"bold"),A.push(this.getTextDimensions(v[f],{fontSize:this.internal.__cell__.table_font_size,scaleFactor:this.internal.scaleFactor}).w),d=b[g],this.setFont(void 0,"normal"),p=0;p<d.length;p+=1)A.push(this.getTextDimensions(d[p],{fontSize:this.internal.__cell__.table_font_size,scaleFactor:this.internal.scaleFactor}).w);w[g]=Math.max.apply(null,A)+k+k,A=[]}if(S){var I={};for(f=0;f<m.length;f+=1)I[m[f]]={},I[m[f]].text=v[f],I[m[f]].align=y[f];var M=u.call(this,I,w);x=m.map((function(e){return new a(t,n,w[e],M,I[e].text,void 0,I[e].align)})),this.setTableHeaderRow(x),this.printHeaderRow(1,!1)}var B=c.reduce((function(t,e){return t[e.name]=e.align,t}),{});for(f=0;f<l.length;f+=1){"rowStart"in h&&h.rowStart instanceof Function&&h.rowStart({row:f,data:l[f]},this);var F=u.call(this,l[f],w);for(p=0;p<m.length;p+=1){var T=l[f][m[p]];"cellStart"in h&&h.cellStart instanceof Function&&h.cellStart({row:f,col:p,data:T},this),s.call(this,new a(t,n,w[m[p]],F,T,f+2,B[m[p]]))}}return this.internal.__cell__.table_x=t,this.internal.__cell__.table_y=n,this};var u=function(t,e){var n=this.internal.__cell__.padding,r=this.internal.__cell__.table_font_size,i=this.internal.scaleFactor;return Object.keys(t).map((function(r){var i=t[r];return this.splitTextToSize(i.hasOwnProperty("text")?i.text:i,e[r]-n-n)}),this).map((function(t){return this.getLineHeightFactor()*t.length*r/i+n+n}),this).reduce((function(t,e){return Math.max(t,e)}),0)};t.setTableHeaderRow=function(t){r.call(this),this.internal.__cell__.tableHeaderRow=t},t.printHeaderRow=function(t,e){if(r.call(this),!this.internal.__cell__.tableHeaderRow)throw new Error("Property tableHeaderRow does not exist.");var i;if(n=!0,"function"==typeof this.internal.__cell__.headerFunction){var o=this.internal.__cell__.headerFunction(this,this.internal.__cell__.pages);this.internal.__cell__.lastCell=new a(o[0],o[1],o[2],o[3],void 0,-1)}this.setFont(void 0,"bold");for(var u=[],l=0;l<this.internal.__cell__.tableHeaderRow.length;l+=1){i=this.internal.__cell__.tableHeaderRow[l].clone(),e&&(i.y=this.internal.__cell__.margins.top||0,u.push(i)),i.lineNumber=t;var c=this.getTextColor();this.setTextColor(this.internal.__cell__.headerTextColor),this.setFillColor(this.internal.__cell__.headerBackgroundColor),s.call(this,i),this.setTextColor(c)}u.length>0&&this.setTableHeaderRow(u),this.setFont(void 0,"normal"),n=!1}}(Lt.API);var me={italic:["italic","oblique","normal"],oblique:["oblique","italic","normal"],normal:["normal","oblique","italic"]},ve=["ultra-condensed","extra-condensed","condensed","semi-condensed","normal","semi-expanded","expanded","extra-expanded","ultra-expanded"],ye=ge(ve),be=[100,200,300,400,500,600,700,800,900],we=ge(be);function Ae(t){var e=t.family.replace(/"|'/g,"").toLowerCase(),n=function(t){return me[t=t||"normal"]?t:"normal"}(t.style),r=function(t){return t?"number"==typeof t?t>=100&&t<=900&&t%100==0?t:400:/^\d00$/.test(t)?parseInt(t):"bold"===t?700:400:400}(t.weight),i=function(t){return"number"==typeof ye[t=t||"normal"]?t:"normal"}(t.stretch);return{family:e,style:n,weight:r,stretch:i,src:t.src||[],ref:t.ref||{name:e,style:[i,n,r].join(" ")}}}function xe(t,e,n,r){var i;for(i=n;i>=0&&i<e.length;i+=r)if(t[e[i]])return t[e[i]];for(i=n;i>=0&&i<e.length;i-=r)if(t[e[i]])return t[e[i]]}var _e={"sans-serif":"helvetica",fixed:"courier",monospace:"courier",terminal:"courier",cursive:"times",fantasy:"times",serif:"times"},Se={caption:"times",icon:"times",menu:"times","message-box":"times","small-caption":"times","status-bar":"times"};function Le(t){return[t.stretch,t.style,t.weight,t.family].join(" ")}function Ne(t){return t.trimLeft()}function ke(t,e){for(var n=0;n<t.length;){if(t.charAt(n)===e)return[t.substring(0,n),t.substring(n+1)];n+=1}return null}function Ce(t){var e=t.match(/^(-[a-z_]|[a-z_])[a-z0-9_-]*/i);return null===e?null:[e[0],t.substring(e[0].length)]}var Pe,Ie,Me,Be=["times"];!function(t){var e,n,r,o,a,s,u,l,c,h=function(t){return t=t||{},this.isStrokeTransparent=t.isStrokeTransparent||!1,this.strokeOpacity=t.strokeOpacity||1,this.strokeStyle=t.strokeStyle||"#000000",this.fillStyle=t.fillStyle||"#000000",this.isFillTransparent=t.isFillTransparent||!1,this.fillOpacity=t.fillOpacity||1,this.font=t.font||"10px sans-serif",this.textBaseline=t.textBaseline||"alphabetic",this.textAlign=t.textAlign||"left",this.lineWidth=t.lineWidth||1,this.lineJoin=t.lineJoin||"miter",this.lineCap=t.lineCap||"butt",this.path=t.path||[],this.transform=void 0!==t.transform?t.transform.clone():new l,this.globalCompositeOperation=t.globalCompositeOperation||"normal",this.globalAlpha=t.globalAlpha||1,this.clip_path=t.clip_path||[],this.currentPoint=t.currentPoint||new s,this.miterLimit=t.miterLimit||10,this.lastPoint=t.lastPoint||new s,this.lineDashOffset=t.lineDashOffset||0,this.lineDash=t.lineDash||[],this.margin=t.margin||[0,0,0,0],this.prevPageLastElemOffset=t.prevPageLastElemOffset||0,this.ignoreClearRect="boolean"!=typeof t.ignoreClearRect||t.ignoreClearRect,this};t.events.push(["initialized",function(){this.context2d=new f(this),e=this.internal.f2,n=this.internal.getCoordinateString,r=this.internal.getVerticalCoordinateString,o=this.internal.getHorizontalCoordinate,a=this.internal.getVerticalCoordinate,s=this.internal.Point,u=this.internal.Rectangle,l=this.internal.Matrix,c=new h}]);var f=function(t){Object.defineProperty(this,"canvas",{get:function(){return{parentNode:!1,style:!1}}});var e=t;Object.defineProperty(this,"pdf",{get:function(){return e}});var n=!1;Object.defineProperty(this,"pageWrapXEnabled",{get:function(){return n},set:function(t){n=Boolean(t)}});var r=!1;Object.defineProperty(this,"pageWrapYEnabled",{get:function(){return r},set:function(t){r=Boolean(t)}});var i=0;Object.defineProperty(this,"posX",{get:function(){return i},set:function(t){isNaN(t)||(i=t)}});var o=0;Object.defineProperty(this,"posY",{get:function(){return o},set:function(t){isNaN(t)||(o=t)}}),Object.defineProperty(this,"margin",{get:function(){return c.margin},set:function(t){var e;"number"==typeof t?e=[t,t,t,t]:((e=new Array(4))[0]=t[0],e[1]=t.length>=2?t[1]:e[0],e[2]=t.length>=3?t[2]:e[0],e[3]=t.length>=4?t[3]:e[1]),c.margin=e}});var a=!1;Object.defineProperty(this,"autoPaging",{get:function(){return a},set:function(t){a=t}});var s=0;Object.defineProperty(this,"lastBreak",{get:function(){return s},set:function(t){s=t}});var u=[];Object.defineProperty(this,"pageBreaks",{get:function(){return u},set:function(t){u=t}}),Object.defineProperty(this,"ctx",{get:function(){return c},set:function(t){t instanceof h&&(c=t)}}),Object.defineProperty(this,"path",{get:function(){return c.path},set:function(t){c.path=t}});var l=[];Object.defineProperty(this,"ctxStack",{get:function(){return l},set:function(t){l=t}}),Object.defineProperty(this,"fillStyle",{get:function(){return this.ctx.fillStyle},set:function(t){var e;e=d(t),this.ctx.fillStyle=e.style,this.ctx.isFillTransparent=0===e.a,this.ctx.fillOpacity=e.a,this.pdf.setFillColor(e.r,e.g,e.b,{a:e.a}),this.pdf.setTextColor(e.r,e.g,e.b,{a:e.a})}}),Object.defineProperty(this,"strokeStyle",{get:function(){return this.ctx.strokeStyle},set:function(t){var e=d(t);this.ctx.strokeStyle=e.style,this.ctx.isStrokeTransparent=0===e.a,this.ctx.strokeOpacity=e.a,0===e.a?this.pdf.setDrawColor(255,255,255):(e.a,this.pdf.setDrawColor(e.r,e.g,e.b))}}),Object.defineProperty(this,"lineCap",{get:function(){return this.ctx.lineCap},set:function(t){-1!==["butt","round","square"].indexOf(t)&&(this.ctx.lineCap=t,this.pdf.setLineCap(t))}}),Object.defineProperty(this,"lineWidth",{get:function(){return this.ctx.lineWidth},set:function(t){isNaN(t)||(this.ctx.lineWidth=t,this.pdf.setLineWidth(t))}}),Object.defineProperty(this,"lineJoin",{get:function(){return this.ctx.lineJoin},set:function(t){-1!==["bevel","round","miter"].indexOf(t)&&(this.ctx.lineJoin=t,this.pdf.setLineJoin(t))}}),Object.defineProperty(this,"miterLimit",{get:function(){return this.ctx.miterLimit},set:function(t){isNaN(t)||(this.ctx.miterLimit=t,this.pdf.setMiterLimit(t))}}),Object.defineProperty(this,"textBaseline",{get:function(){return this.ctx.textBaseline},set:function(t){this.ctx.textBaseline=t}}),Object.defineProperty(this,"textAlign",{get:function(){return this.ctx.textAlign},set:function(t){-1!==["right","end","center","left","start"].indexOf(t)&&(this.ctx.textAlign=t)}});var f=null;function p(t,e){if(null===f){var n=function(t){var e=[];return Object.keys(t).forEach((function(n){t[n].forEach((function(t){var r=null;switch(t){case"bold":r={family:n,weight:"bold"};break;case"italic":r={family:n,style:"italic"};break;case"bolditalic":r={family:n,weight:"bold",style:"italic"};break;case"":case"normal":r={family:n}}null!==r&&(r.ref={name:n,style:t},e.push(r))}))})),e}(t.getFontList());f=function(t){for(var e={},n=0;n<t.length;++n){var r=Ae(t[n]),i=r.family,o=r.stretch,a=r.style,s=r.weight;e[i]=e[i]||{},e[i][o]=e[i][o]||{},e[i][o][a]=e[i][o][a]||{},e[i][o][a][s]=r}return e}(n.concat(e))}return f}var g=null;Object.defineProperty(this,"fontFaces",{get:function(){return g},set:function(t){f=null,g=t}}),Object.defineProperty(this,"font",{get:function(){return this.ctx.font},set:function(t){var e;if(this.ctx.font=t,null!==(e=/^\s*(?=(?:(?:[-a-z]+\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\1|\2|\3)\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\d]+(?:\%|in|[cem]m|ex|p[ctx]))(?:\s*\/\s*(normal|[.\d]+(?:\%|in|[cem]m|ex|p[ctx])))?\s*([-_,\"\'\sa-z]+?)\s*$/i.exec(t))){var n=e[1],r=(e[2],e[3]),i=e[4],o=(e[5],e[6]),a=/^([.\d]+)((?:%|in|[cem]m|ex|p[ctx]))$/i.exec(i)[2];i="px"===a?Math.floor(parseFloat(i)*this.pdf.internal.scaleFactor):"em"===a?Math.floor(parseFloat(i)*this.pdf.getFontSize()):Math.floor(parseFloat(i)*this.pdf.internal.scaleFactor),this.pdf.setFontSize(i);var s=function(t){var e,n,r=[],i=t.trim();if(""===i)return Be;if(i in Se)return[Se[i]];for(;""!==i;){switch(n=null,e=(i=Ne(i)).charAt(0)){case'"':case"'":n=ke(i.substring(1),e);break;default:n=Ce(i)}if(null===n)return Be;if(r.push(n[0]),""!==(i=Ne(n[1]))&&","!==i.charAt(0))return Be;i=i.replace(/^,/,"")}return r}(o);if(this.fontFaces){var u=function(t,e,n){for(var r=(n=n||{}).defaultFontFamily||"times",i=Object.assign({},_e,n.genericFontFamilies||{}),o=null,a=null,s=0;s<e.length;++s)if(i[(o=Ae(e[s])).family]&&(o.family=i[o.family]),t.hasOwnProperty(o.family)){a=t[o.family];break}if(!(a=a||t[r]))throw new Error("Could not find a font-family for the rule '"+Le(o)+"' and default family '"+r+"'.");if(a=function(t,e){if(e[t])return e[t];var n=ye[t],r=n<=ye.normal?-1:1,i=xe(e,ve,n,r);if(!i)throw new Error("Could not find a matching font-stretch value for "+t);return i}(o.stretch,a),a=function(t,e){if(e[t])return e[t];for(var n=me[t],r=0;r<n.length;++r)if(e[n[r]])return e[n[r]];throw new Error("Could not find a matching font-style for "+t)}(o.style,a),!(a=function(t,e){if(e[t])return e[t];if(400===t&&e[500])return e[500];if(500===t&&e[400])return e[400];var n=we[t],r=xe(e,be,n,t<400?-1:1);if(!r)throw new Error("Could not find a matching font-weight for value "+t);return r}(o.weight,a)))throw new Error("Failed to resolve a font for the rule '"+Le(o)+"'.");return a}(p(this.pdf,this.fontFaces),s.map((function(t){return{family:t,stretch:"normal",weight:r,style:n}})));this.pdf.setFont(u.ref.name,u.ref.style)}else{var l="";("bold"===r||parseInt(r,10)>=700||"bold"===n)&&(l="bold"),"italic"===n&&(l+="italic"),0===l.length&&(l="normal");for(var c="",h={arial:"Helvetica",Arial:"Helvetica",verdana:"Helvetica",Verdana:"Helvetica",helvetica:"Helvetica",Helvetica:"Helvetica","sans-serif":"Helvetica",fixed:"Courier",monospace:"Courier",terminal:"Courier",cursive:"Times",fantasy:"Times",serif:"Times"},f=0;f<s.length;f++){if(void 0!==this.pdf.internal.getFont(s[f],l,{noFallback:!0,disableWarning:!0})){c=s[f];break}if("bolditalic"===l&&void 0!==this.pdf.internal.getFont(s[f],"bold",{noFallback:!0,disableWarning:!0}))c=s[f],l="bold";else if(void 0!==this.pdf.internal.getFont(s[f],"normal",{noFallback:!0,disableWarning:!0})){c=s[f],l="normal";break}}if(""===c)for(var d=0;d<s.length;d++)if(h[s[d]]){c=h[s[d]];break}c=""===c?"Times":c,this.pdf.setFont(c,l)}}}}),Object.defineProperty(this,"globalCompositeOperation",{get:function(){return this.ctx.globalCompositeOperation},set:function(t){this.ctx.globalCompositeOperation=t}}),Object.defineProperty(this,"globalAlpha",{get:function(){return this.ctx.globalAlpha},set:function(t){this.ctx.globalAlpha=t}}),Object.defineProperty(this,"lineDashOffset",{get:function(){return this.ctx.lineDashOffset},set:function(t){this.ctx.lineDashOffset=t,R.call(this)}}),Object.defineProperty(this,"lineDash",{get:function(){return this.ctx.lineDash},set:function(t){this.ctx.lineDash=t,R.call(this)}}),Object.defineProperty(this,"ignoreClearRect",{get:function(){return this.ctx.ignoreClearRect},set:function(t){this.ctx.ignoreClearRect=Boolean(t)}})};f.prototype.setLineDash=function(t){this.lineDash=t},f.prototype.getLineDash=function(){return this.lineDash.length%2?this.lineDash.concat(this.lineDash):this.lineDash.slice()},f.prototype.fill=function(){A.call(this,"fill",!1)},f.prototype.stroke=function(){A.call(this,"stroke",!1)},f.prototype.beginPath=function(){this.path=[{type:"begin"}]},f.prototype.moveTo=function(t,e){if(isNaN(t)||isNaN(e))throw X.error("jsPDF.context2d.moveTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.moveTo");var n=this.ctx.transform.applyToPoint(new s(t,e));this.path.push({type:"mt",x:n.x,y:n.y}),this.ctx.lastPoint=new s(t,e)},f.prototype.closePath=function(){var t=new s(0,0),e=0;for(e=this.path.length-1;-1!==e;e--)if("begin"===this.path[e].type&&"object"===i()(this.path[e+1])&&"number"==typeof this.path[e+1].x){t=new s(this.path[e+1].x,this.path[e+1].y);break}this.path.push({type:"close"}),this.ctx.lastPoint=new s(t.x,t.y)},f.prototype.lineTo=function(t,e){if(isNaN(t)||isNaN(e))throw X.error("jsPDF.context2d.lineTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.lineTo");var n=this.ctx.transform.applyToPoint(new s(t,e));this.path.push({type:"lt",x:n.x,y:n.y}),this.ctx.lastPoint=new s(n.x,n.y)},f.prototype.clip=function(){this.ctx.clip_path=JSON.parse(JSON.stringify(this.path)),A.call(this,null,!0)},f.prototype.quadraticCurveTo=function(t,e,n,r){if(isNaN(n)||isNaN(r)||isNaN(t)||isNaN(e))throw X.error("jsPDF.context2d.quadraticCurveTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.quadraticCurveTo");var i=this.ctx.transform.applyToPoint(new s(n,r)),o=this.ctx.transform.applyToPoint(new s(t,e));this.path.push({type:"qct",x1:o.x,y1:o.y,x:i.x,y:i.y}),this.ctx.lastPoint=new s(i.x,i.y)},f.prototype.bezierCurveTo=function(t,e,n,r,i,o){if(isNaN(i)||isNaN(o)||isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw X.error("jsPDF.context2d.bezierCurveTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.bezierCurveTo");var a=this.ctx.transform.applyToPoint(new s(i,o)),u=this.ctx.transform.applyToPoint(new s(t,e)),l=this.ctx.transform.applyToPoint(new s(n,r));this.path.push({type:"bct",x1:u.x,y1:u.y,x2:l.x,y2:l.y,x:a.x,y:a.y}),this.ctx.lastPoint=new s(a.x,a.y)},f.prototype.arc=function(t,e,n,r,i,o){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i))throw X.error("jsPDF.context2d.arc: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.arc");if(o=Boolean(o),!this.ctx.transform.isIdentity){var a=this.ctx.transform.applyToPoint(new s(t,e));t=a.x,e=a.y;var u=this.ctx.transform.applyToPoint(new s(0,n)),l=this.ctx.transform.applyToPoint(new s(0,0));n=Math.sqrt(Math.pow(u.x-l.x,2)+Math.pow(u.y-l.y,2))}Math.abs(i-r)>=2*Math.PI&&(r=0,i=2*Math.PI),this.path.push({type:"arc",x:t,y:e,radius:n,startAngle:r,endAngle:i,counterclockwise:o})},f.prototype.arcTo=function(t,e,n,r,i){throw new Error("arcTo not implemented.")},f.prototype.rect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw X.error("jsPDF.context2d.rect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.rect");this.moveTo(t,e),this.lineTo(t+n,e),this.lineTo(t+n,e+r),this.lineTo(t,e+r),this.lineTo(t,e),this.lineTo(t+n,e),this.lineTo(t,e)},f.prototype.fillRect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw X.error("jsPDF.context2d.fillRect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.fillRect");if(!p.call(this)){var i={};"butt"!==this.lineCap&&(i.lineCap=this.lineCap,this.lineCap="butt"),"miter"!==this.lineJoin&&(i.lineJoin=this.lineJoin,this.lineJoin="miter"),this.beginPath(),this.rect(t,e,n,r),this.fill(),i.hasOwnProperty("lineCap")&&(this.lineCap=i.lineCap),i.hasOwnProperty("lineJoin")&&(this.lineJoin=i.lineJoin)}},f.prototype.strokeRect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw X.error("jsPDF.context2d.strokeRect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.strokeRect");g.call(this)||(this.beginPath(),this.rect(t,e,n,r),this.stroke())},f.prototype.clearRect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw X.error("jsPDF.context2d.clearRect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.clearRect");this.ignoreClearRect||(this.fillStyle="#ffffff",this.fillRect(t,e,n,r))},f.prototype.save=function(t){t="boolean"!=typeof t||t;for(var e=this.pdf.internal.getCurrentPageInfo().pageNumber,n=0;n<this.pdf.internal.getNumberOfPages();n++)this.pdf.setPage(n+1),this.pdf.internal.out("q");if(this.pdf.setPage(e),t){this.ctx.fontSize=this.pdf.internal.getFontSize();var r=new h(this.ctx);this.ctxStack.push(this.ctx),this.ctx=r}},f.prototype.restore=function(t){t="boolean"!=typeof t||t;for(var e=this.pdf.internal.getCurrentPageInfo().pageNumber,n=0;n<this.pdf.internal.getNumberOfPages();n++)this.pdf.setPage(n+1),this.pdf.internal.out("Q");this.pdf.setPage(e),t&&0!==this.ctxStack.length&&(this.ctx=this.ctxStack.pop(),this.fillStyle=this.ctx.fillStyle,this.strokeStyle=this.ctx.strokeStyle,this.font=this.ctx.font,this.lineCap=this.ctx.lineCap,this.lineWidth=this.ctx.lineWidth,this.lineJoin=this.ctx.lineJoin,this.lineDash=this.ctx.lineDash,this.lineDashOffset=this.ctx.lineDashOffset)},f.prototype.toDataURL=function(){throw new Error("toDataUrl not implemented.")};var d=function(t){var e,n,r,i;if(!0===t.isCanvasGradient&&(t=t.getColor()),!t)return{r:0,g:0,b:0,a:0,style:t};if(/transparent|rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*0+\s*\)/.test(t))e=0,n=0,r=0,i=0;else{var o=/rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/.exec(t);if(null!==o)e=parseInt(o[1]),n=parseInt(o[2]),r=parseInt(o[3]),i=1;else if(null!==(o=/rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*([\d.]+)\s*\)/.exec(t)))e=parseInt(o[1]),n=parseInt(o[2]),r=parseInt(o[3]),i=parseFloat(o[4]);else{if(i=1,"string"==typeof t&&"#"!==t.charAt(0)){var a=new et(t);t=a.ok?a.toHex():"#000000"}4===t.length?(e=t.substring(1,2),e+=e,n=t.substring(2,3),n+=n,r=t.substring(3,4),r+=r):(e=t.substring(1,3),n=t.substring(3,5),r=t.substring(5,7)),e=parseInt(e,16),n=parseInt(n,16),r=parseInt(r,16)}}return{r:e,g:n,b:r,a:i,style:t}},p=function(){return this.ctx.isFillTransparent||0==this.globalAlpha},g=function(){return Boolean(this.ctx.isStrokeTransparent||0==this.globalAlpha)};f.prototype.fillText=function(t,e,n,r){if(isNaN(e)||isNaN(n)||"string"!=typeof t)throw X.error("jsPDF.context2d.fillText: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.fillText");if(r=isNaN(r)?void 0:r,!p.call(this)){var i=E(this.ctx.transform.rotation),o=this.ctx.transform.scaleX;P.call(this,{text:t,x:e,y:n,scale:o,angle:i,align:this.textAlign,maxWidth:r})}},f.prototype.strokeText=function(t,e,n,r){if(isNaN(e)||isNaN(n)||"string"!=typeof t)throw X.error("jsPDF.context2d.strokeText: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.strokeText");if(!g.call(this)){r=isNaN(r)?void 0:r;var i=E(this.ctx.transform.rotation),o=this.ctx.transform.scaleX;P.call(this,{text:t,x:e,y:n,scale:o,renderingMode:"stroke",angle:i,align:this.textAlign,maxWidth:r})}},f.prototype.measureText=function(t){if("string"!=typeof t)throw X.error("jsPDF.context2d.measureText: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.measureText");var e=this.pdf,n=this.pdf.internal.scaleFactor,r=e.internal.getFontSize(),i=e.getStringUnitWidth(t)*r/e.internal.scaleFactor;return new function(t){var e=(t=t||{}).width||0;return Object.defineProperty(this,"width",{get:function(){return e}}),this}({width:i*=Math.round(96*n/72*1e4)/1e4})},f.prototype.scale=function(t,e){if(isNaN(t)||isNaN(e))throw X.error("jsPDF.context2d.scale: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.scale");var n=new l(t,0,0,e,0,0);this.ctx.transform=this.ctx.transform.multiply(n)},f.prototype.rotate=function(t){if(isNaN(t))throw X.error("jsPDF.context2d.rotate: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.rotate");var e=new l(Math.cos(t),Math.sin(t),-Math.sin(t),Math.cos(t),0,0);this.ctx.transform=this.ctx.transform.multiply(e)},f.prototype.translate=function(t,e){if(isNaN(t)||isNaN(e))throw X.error("jsPDF.context2d.translate: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.translate");var n=new l(1,0,0,1,t,e);this.ctx.transform=this.ctx.transform.multiply(n)},f.prototype.transform=function(t,e,n,r,i,o){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i)||isNaN(o))throw X.error("jsPDF.context2d.transform: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.transform");var a=new l(t,e,n,r,i,o);this.ctx.transform=this.ctx.transform.multiply(a)},f.prototype.setTransform=function(t,e,n,r,i,o){t=isNaN(t)?1:t,e=isNaN(e)?0:e,n=isNaN(n)?0:n,r=isNaN(r)?1:r,i=isNaN(i)?0:i,o=isNaN(o)?0:o,this.ctx.transform=new l(t,e,n,r,i,o)};var m=function(){return this.margin[0]>0||this.margin[1]>0||this.margin[2]>0||this.margin[3]>0};f.prototype.drawImage=function(t,e,n,r,i,o,a,s,c){var h=this.pdf.getImageProperties(t),f=1,d=1,p=1,g=1;void 0!==r&&void 0!==s&&(p=s/r,g=c/i,f=h.width/r*s/r,d=h.height/i*c/i),void 0===o&&(o=e,a=n,e=0,n=0),void 0!==r&&void 0===s&&(s=r,c=i),void 0===r&&void 0===s&&(s=h.width,c=h.height);for(var y,A=this.ctx.transform.decompose(),_=E(A.rotate.shx),S=new l,L=(S=(S=(S=S.multiply(A.translate)).multiply(A.skew)).multiply(A.scale)).applyToRectangle(new u(o-e*p,a-n*g,r*f,i*d)),N=v.call(this,L),k=[],C=0;C<N.length;C+=1)-1===k.indexOf(N[C])&&k.push(N[C]);if(w(k),this.autoPaging)for(var P=k[0],I=k[k.length-1],M=P;M<I+1;M++){this.pdf.setPage(M);var B=this.pdf.internal.pageSize.width-this.margin[3]-this.margin[1],F=1===M?this.posY+this.margin[0]:this.margin[0],T=this.pdf.internal.pageSize.height-this.posY-this.margin[0]-this.margin[2],O=this.pdf.internal.pageSize.height-this.margin[0]-this.margin[2],j=1===M?0:T+(M-2)*O;if(0!==this.ctx.clip_path.length){var R=this.path;y=JSON.parse(JSON.stringify(this.ctx.clip_path)),this.path=b(y,this.posX+this.margin[3],-j+F+this.ctx.prevPageLastElemOffset),x.call(this,"fill",!0),this.path=R}var D=JSON.parse(JSON.stringify(L));D=b([D],this.posX+this.margin[3],-j+F+this.ctx.prevPageLastElemOffset)[0];var q=(M>P||M<I)&&m.call(this);q&&(this.pdf.saveGraphicsState(),this.pdf.rect(this.margin[3],this.margin[0],B,O,null).clip().discardPath()),this.pdf.addImage(t,"JPEG",D.x,D.y,D.w,D.h,null,null,_),q&&this.pdf.restoreGraphicsState()}else this.pdf.addImage(t,"JPEG",L.x,L.y,L.w,L.h,null,null,_)};var v=function(t,e,n){var r=[];e=e||this.pdf.internal.pageSize.width,n=n||this.pdf.internal.pageSize.height-this.margin[0]-this.margin[2];var i=this.posY+this.ctx.prevPageLastElemOffset;switch(t.type){default:case"mt":case"lt":r.push(Math.floor((t.y+i)/n)+1);break;case"arc":r.push(Math.floor((t.y+i-t.radius)/n)+1),r.push(Math.floor((t.y+i+t.radius)/n)+1);break;case"qct":var o=O(this.ctx.lastPoint.x,this.ctx.lastPoint.y,t.x1,t.y1,t.x,t.y);r.push(Math.floor((o.y+i)/n)+1),r.push(Math.floor((o.y+o.h+i)/n)+1);break;case"bct":var a=j(this.ctx.lastPoint.x,this.ctx.lastPoint.y,t.x1,t.y1,t.x2,t.y2,t.x,t.y);r.push(Math.floor((a.y+i)/n)+1),r.push(Math.floor((a.y+a.h+i)/n)+1);break;case"rect":r.push(Math.floor((t.y+i)/n)+1),r.push(Math.floor((t.y+t.h+i)/n)+1)}for(var s=0;s<r.length;s+=1)for(;this.pdf.internal.getNumberOfPages()<r[s];)y.call(this);return r},y=function(){var t=this.fillStyle,e=this.strokeStyle,n=this.font,r=this.lineCap,i=this.lineWidth,o=this.lineJoin;this.pdf.addPage(),this.fillStyle=t,this.strokeStyle=e,this.font=n,this.lineCap=r,this.lineWidth=i,this.lineJoin=o},b=function(t,e,n){for(var r=0;r<t.length;r++)switch(t[r].type){case"bct":t[r].x2+=e,t[r].y2+=n;case"qct":t[r].x1+=e,t[r].y1+=n;default:t[r].x+=e,t[r].y+=n}return t},w=function(t){return t.sort((function(t,e){return t-e}))},A=function(t,e){for(var n,r,i=this.fillStyle,o=this.strokeStyle,a=this.lineCap,s=this.lineWidth,u=Math.abs(s*this.ctx.transform.scaleX),l=this.lineJoin,c=JSON.parse(JSON.stringify(this.path)),h=JSON.parse(JSON.stringify(this.path)),f=[],d=0;d<h.length;d++)if(void 0!==h[d].x)for(var p=v.call(this,h[d]),g=0;g<p.length;g+=1)-1===f.indexOf(p[g])&&f.push(p[g]);for(var A=0;A<f.length;A++)for(;this.pdf.internal.getNumberOfPages()<f[A];)y.call(this);if(w(f),this.autoPaging)for(var _=f[0],S=f[f.length-1],L=_;L<S+1;L++){this.pdf.setPage(L),this.fillStyle=i,this.strokeStyle=o,this.lineCap=a,this.lineWidth=u,this.lineJoin=l;var N=this.pdf.internal.pageSize.width-this.margin[3]-this.margin[1],k=1===L?this.posY+this.margin[0]:this.margin[0],C=this.pdf.internal.pageSize.height-this.posY-this.margin[0]-this.margin[2],P=this.pdf.internal.pageSize.height-this.margin[0]-this.margin[2],I=1===L?0:C+(L-2)*P;if(0!==this.ctx.clip_path.length){var M=this.path;n=JSON.parse(JSON.stringify(this.ctx.clip_path)),this.path=b(n,this.posX+this.margin[3],-I+k+this.ctx.prevPageLastElemOffset),x.call(this,t,!0),this.path=M}if(r=JSON.parse(JSON.stringify(c)),this.path=b(r,this.posX+this.margin[3],-I+k+this.ctx.prevPageLastElemOffset),!1===e||0===L){var B=(L>_||L<S)&&m.call(this);B&&(this.pdf.saveGraphicsState(),this.pdf.rect(this.margin[3],this.margin[0],N,P,null).clip().discardPath()),x.call(this,t,e),B&&this.pdf.restoreGraphicsState()}this.lineWidth=s}else this.lineWidth=u,x.call(this,t,e),this.lineWidth=s;this.path=c},x=function(t,e){if(("stroke"!==t||e||!g.call(this))&&("stroke"===t||e||!p.call(this))){for(var n,r,i=[],o=this.path,a=0;a<o.length;a++){var s=o[a];switch(s.type){case"begin":i.push({begin:!0});break;case"close":i.push({close:!0});break;case"mt":i.push({start:s,deltas:[],abs:[]});break;case"lt":var u=i.length;if(o[a-1]&&!isNaN(o[a-1].x)&&(n=[s.x-o[a-1].x,s.y-o[a-1].y],u>0))for(;u>=0;u--)if(!0!==i[u-1].close&&!0!==i[u-1].begin){i[u-1].deltas.push(n),i[u-1].abs.push(s);break}break;case"bct":n=[s.x1-o[a-1].x,s.y1-o[a-1].y,s.x2-o[a-1].x,s.y2-o[a-1].y,s.x-o[a-1].x,s.y-o[a-1].y],i[i.length-1].deltas.push(n);break;case"qct":var l=o[a-1].x+2/3*(s.x1-o[a-1].x),c=o[a-1].y+2/3*(s.y1-o[a-1].y),h=s.x+2/3*(s.x1-s.x),f=s.y+2/3*(s.y1-s.y),d=s.x,m=s.y;n=[l-o[a-1].x,c-o[a-1].y,h-o[a-1].x,f-o[a-1].y,d-o[a-1].x,m-o[a-1].y],i[i.length-1].deltas.push(n);break;case"arc":i.push({deltas:[],abs:[],arc:!0}),Array.isArray(i[i.length-1].abs)&&i[i.length-1].abs.push(s)}}r=e?null:"stroke"===t?"stroke":"fill";for(var v=!1,y=0;y<i.length;y++)if(i[y].arc)for(var b=i[y].abs,w=0;w<b.length;w++){var A=b[w];"arc"===A.type?L.call(this,A.x,A.y,A.radius,A.startAngle,A.endAngle,A.counterclockwise,void 0,e,!v):I.call(this,A.x,A.y),v=!0}else if(!0===i[y].close)this.pdf.internal.out("h"),v=!1;else if(!0!==i[y].begin){var x=i[y].start.x,_=i[y].start.y;M.call(this,i[y].deltas,x,_),v=!0}r&&N.call(this,r),e&&k.call(this)}},_=function(t){var e=this.pdf.internal.getFontSize()/this.pdf.internal.scaleFactor,n=e*(this.pdf.internal.getLineHeightFactor()-1);switch(this.ctx.textBaseline){case"bottom":return t-n;case"top":return t+e-n;case"hanging":return t+e-2*n;case"middle":return t+e/2-n;default:return t}},S=function(t){return t+this.pdf.internal.getFontSize()/this.pdf.internal.scaleFactor*(this.pdf.internal.getLineHeightFactor()-1)};f.prototype.createLinearGradient=function(){var t=function(){};return t.colorStops=[],t.addColorStop=function(t,e){this.colorStops.push([t,e])},t.getColor=function(){return 0===this.colorStops.length?"#000000":this.colorStops[0][1]},t.isCanvasGradient=!0,t},f.prototype.createPattern=function(){return this.createLinearGradient()},f.prototype.createRadialGradient=function(){return this.createLinearGradient()};var L=function(t,e,n,r,i,o,a,s,u){for(var l=F.call(this,n,r,i,o),c=0;c<l.length;c++){var h=l[c];0===c&&(u?C.call(this,h.x1+t,h.y1+e):I.call(this,h.x1+t,h.y1+e)),B.call(this,t,e,h.x2,h.y2,h.x3,h.y3,h.x4,h.y4)}s?k.call(this):N.call(this,a)},N=function(t){switch(t){case"stroke":this.pdf.internal.out("S");break;case"fill":this.pdf.internal.out("f")}},k=function(){this.pdf.clip(),this.pdf.discardPath()},C=function(t,e){this.pdf.internal.out(n(t)+" "+r(e)+" m")},P=function(t){var e;switch(t.align){case"right":case"end":e="right";break;case"center":e="center";break;default:e="left"}var n=this.pdf.getTextDimensions(t.text),r=_.call(this,t.y),i=S.call(this,r)-n.h,o=this.ctx.transform.applyToPoint(new s(t.x,r)),a=this.ctx.transform.decompose(),c=new l;c=(c=(c=c.multiply(a.translate)).multiply(a.skew)).multiply(a.scale);for(var h,f,d,p=this.ctx.transform.applyToRectangle(new u(t.x,r,n.w,n.h)),g=c.applyToRectangle(new u(t.x,i,n.w,n.h)),y=v.call(this,g),A=[],L=0;L<y.length;L+=1)-1===A.indexOf(y[L])&&A.push(y[L]);if(w(A),this.autoPaging)for(var N=A[0],k=A[A.length-1],C=N;C<k+1;C++){this.pdf.setPage(C);var P=1===C?this.posY+this.margin[0]:this.margin[0],I=this.pdf.internal.pageSize.height-this.posY-this.margin[0]-this.margin[2],M=this.pdf.internal.pageSize.height-this.margin[2],B=M-this.margin[0],F=this.pdf.internal.pageSize.width-this.margin[1],T=F-this.margin[3],E=1===C?0:I+(C-2)*B;if(0!==this.ctx.clip_path.length){var O=this.path;h=JSON.parse(JSON.stringify(this.ctx.clip_path)),this.path=b(h,this.posX+this.margin[3],-1*E+P),x.call(this,"fill",!0),this.path=O}var j=b([JSON.parse(JSON.stringify(g))],this.posX+this.margin[3],-E+P+this.ctx.prevPageLastElemOffset)[0];t.scale>=.01&&(f=this.pdf.internal.getFontSize(),this.pdf.setFontSize(f*t.scale),d=this.lineWidth,this.lineWidth=d*t.scale);var R="text"!==this.autoPaging;if(R||j.y+j.h<=M){if(R||j.y>=P&&j.x<=F){var D=R?t.text:this.pdf.splitTextToSize(t.text,t.maxWidth||F-j.x)[0],q=b([JSON.parse(JSON.stringify(p))],this.posX+this.margin[3],-E+P+this.ctx.prevPageLastElemOffset)[0],z=R&&(C>N||C<k)&&m.call(this);z&&(this.pdf.saveGraphicsState(),this.pdf.rect(this.margin[3],this.margin[0],T,B,null).clip().discardPath()),this.pdf.text(D,q.x,q.y,{angle:t.angle,align:e,renderingMode:t.renderingMode}),z&&this.pdf.restoreGraphicsState()}}else j.y<M&&(this.ctx.prevPageLastElemOffset+=M-j.y);t.scale>=.01&&(this.pdf.setFontSize(f),this.lineWidth=d)}else t.scale>=.01&&(f=this.pdf.internal.getFontSize(),this.pdf.setFontSize(f*t.scale),d=this.lineWidth,this.lineWidth=d*t.scale),this.pdf.text(t.text,o.x+this.posX,o.y+this.posY,{angle:t.angle,align:e,renderingMode:t.renderingMode,maxWidth:t.maxWidth}),t.scale>=.01&&(this.pdf.setFontSize(f),this.lineWidth=d)},I=function(t,e,i,o){i=i||0,o=o||0,this.pdf.internal.out(n(t+i)+" "+r(e+o)+" l")},M=function(t,e,n){return this.pdf.lines(t,e,n,null,null)},B=function(t,n,r,i,s,u,l,c){this.pdf.internal.out([e(o(r+t)),e(a(i+n)),e(o(s+t)),e(a(u+n)),e(o(l+t)),e(a(c+n)),"c"].join(" "))},F=function(t,e,n,r){for(var i=2*Math.PI,o=Math.PI/2;e>n;)e-=i;var a=Math.abs(n-e);a<i&&r&&(a=i-a);for(var s=[],u=r?-1:1,l=e;a>1e-5;){var c=l+u*Math.min(a,o);s.push(T.call(this,t,l,c)),a-=Math.abs(c-l),l=c}return s},T=function(t,e,n){var r=(n-e)/2,i=t*Math.cos(r),o=t*Math.sin(r),a=i,s=-o,u=a*a+s*s,l=u+a*i+s*o,c=4/3*(Math.sqrt(2*u*l)-l)/(a*o-s*i),h=a-c*s,f=s+c*a,d=h,p=-f,g=r+e,m=Math.cos(g),v=Math.sin(g);return{x1:t*Math.cos(e),y1:t*Math.sin(e),x2:h*m-f*v,y2:h*v+f*m,x3:d*m-p*v,y3:d*v+p*m,x4:t*Math.cos(n),y4:t*Math.sin(n)}},E=function(t){return 180*t/Math.PI},O=function(t,e,n,r,i,o){var a=t+.5*(n-t),s=e+.5*(r-e),l=i+.5*(n-i),c=o+.5*(r-o),h=Math.min(t,i,a,l),f=Math.max(t,i,a,l),d=Math.min(e,o,s,c),p=Math.max(e,o,s,c);return new u(h,d,f-h,p-d)},j=function(t,e,n,r,i,o,a,s){var l,c,h,f,d,p,g,m,v,y,b,w,A,x,_=n-t,S=r-e,L=i-n,N=o-r,k=a-i,C=s-o;for(c=0;c<41;c++)v=(g=(h=t+(l=c/40)*_)+l*((d=n+l*L)-h))+l*(d+l*(i+l*k-d)-g),y=(m=(f=e+l*S)+l*((p=r+l*N)-f))+l*(p+l*(o+l*C-p)-m),0==c?(b=v,w=y,A=v,x=y):(b=Math.min(b,v),w=Math.min(w,y),A=Math.max(A,v),x=Math.max(x,y));return new u(Math.round(b),Math.round(w),Math.round(A-b),Math.round(x-w))},R=function(){if(this.prevLineDash||this.ctx.lineDash.length||this.ctx.lineDashOffset){var t,e,n=(t=this.ctx.lineDash,e=this.ctx.lineDashOffset,JSON.stringify({lineDash:t,lineDashOffset:e}));this.prevLineDash!==n&&(this.pdf.setLineDash(this.ctx.lineDash,this.ctx.lineDashOffset),this.prevLineDash=n)}}}(Lt.API),function(t){var e=function(t){var e,n,r,i,o,a,s,u,l,c;for(/[^\x00-\xFF]/.test(t),n=[],r=0,i=(t+=e="\0\0\0\0".slice(t.length%4||4)).length;i>r;r+=4)0!==(o=(t.charCodeAt(r)<<24)+(t.charCodeAt(r+1)<<16)+(t.charCodeAt(r+2)<<8)+t.charCodeAt(r+3))?(a=(o=((o=((o=((o=(o-(c=o%85))/85)-(l=o%85))/85)-(u=o%85))/85)-(s=o%85))/85)%85,n.push(a+33,s+33,u+33,l+33,c+33)):n.push(122);return function(t,e){for(var n=e;n>0;n--)t.pop()}(n,e.length),String.fromCharCode.apply(String,n)+"~>"},n=function(t){var e,n,r,i,o,a=String,s="length",u=255,l="charCodeAt",c="slice",h="replace";for(t[c](-2),t=t[c](0,-2)[h](/\s/g,"")[h]("z","!!!!!"),r=[],i=0,o=(t+=e="uuuuu"[c](t[s]%5||5))[s];o>i;i+=5)n=52200625*(t[l](i)-33)+614125*(t[l](i+1)-33)+7225*(t[l](i+2)-33)+85*(t[l](i+3)-33)+(t[l](i+4)-33),r.push(u&n>>24,u&n>>16,u&n>>8,u&n);return function(t,e){for(var n=e;n>0;n--)t.pop()}(r,e[s]),a.fromCharCode.apply(a,r)},r=function(t){var e=new RegExp(/^([0-9A-Fa-f]{2})+$/);if(-1!==(t=t.replace(/\s/g,"")).indexOf(">")&&(t=t.substr(0,t.indexOf(">"))),t.length%2&&(t+="0"),!1===e.test(t))return"";for(var n="",r=0;r<t.length;r+=2)n+=String.fromCharCode("0x"+(t[r]+t[r+1]));return n},i=function(t){for(var e=new Uint8Array(t.length),n=t.length;n--;)e[n]=t.charCodeAt(n);return(e=W(e)).reduce((function(t,e){return t+String.fromCharCode(e)}),"")};t.processDataByFilters=function(t,o){var a=0,s=t||"",u=[];for("string"==typeof(o=o||[])&&(o=[o]),a=0;a<o.length;a+=1)switch(o[a]){case"ASCII85Decode":case"/ASCII85Decode":s=n(s),u.push("/ASCII85Encode");break;case"ASCII85Encode":case"/ASCII85Encode":s=e(s),u.push("/ASCII85Decode");break;case"ASCIIHexDecode":case"/ASCIIHexDecode":s=r(s),u.push("/ASCIIHexEncode");break;case"ASCIIHexEncode":case"/ASCIIHexEncode":s=s.split("").map((function(t){return("0"+t.charCodeAt().toString(16)).slice(-2)})).join("")+">",u.push("/ASCIIHexDecode");break;case"FlateEncode":case"/FlateEncode":s=i(s),u.push("/FlateDecode");break;default:throw new Error('The filter: "'+o[a]+'" is not implemented')}return{data:s,reverseChain:u.reverse().join(" ")}}}(Lt.API),function(t){t.loadFile=function(t,e,n){return function(t,e,n){e=!1!==e,n="function"==typeof n?n:function(){};var r=void 0;try{r=function(t,e,n){var r=new XMLHttpRequest,i=0,o=function(t){var e=t.length,n=[],r=String.fromCharCode;for(i=0;i<e;i+=1)n.push(r(255&t.charCodeAt(i)));return n.join("")};if(r.open("GET",t,!e),r.overrideMimeType("text/plain; charset=x-user-defined"),!1===e&&(r.onload=function(){200===r.status?n(o(this.responseText)):n(void 0)}),r.send(null),e&&200===r.status)return o(r.responseText)}(t,e,n)}catch(t){}return r}(t,e,n)},t.loadImageFile=t.loadFile}(Lt.API),function(t){function e(){return(G.html2canvas?Promise.resolve(G.html2canvas):n.e(407).then(n.bind(n,1407))).catch((function(t){return Promise.reject(new Error("Could not load html2canvas: "+t))})).then((function(t){return t.default?t.default:t}))}function r(){return(G.DOMPurify?Promise.resolve(G.DOMPurify):n.e(683).then(n.bind(n,683))).catch((function(t){return Promise.reject(new Error("Could not load dompurify: "+t))})).then((function(t){return t.default?t.default:t}))}var o=function(t){var e=i()(t);return"undefined"===e?"undefined":"string"===e||t instanceof String?"string":"number"===e||t instanceof Number?"number":"function"===e||t instanceof Function?"function":t&&t.constructor===Array?"array":t&&1===t.nodeType?"element":"object"===e?"object":"unknown"},a=function(t,e){var n=document.createElement(t);for(var r in e.className&&(n.className=e.className),e.innerHTML&&e.dompurify&&(n.innerHTML=e.dompurify.sanitize(e.innerHTML)),e.style)n.style[r]=e.style[r];return n},s=function t(e){var n=Object.assign(t.convert(Promise.resolve()),JSON.parse(JSON.stringify(t.template))),r=t.convert(Promise.resolve(),n);return(r=r.setProgress(1,t,1,[t])).set(e)};(s.prototype=Object.create(Promise.prototype)).constructor=s,s.convert=function(t,e){return t.__proto__=e||s.prototype,t},s.template={prop:{src:null,container:null,overlay:null,canvas:null,img:null,pdf:null,pageSize:null,callback:function(){}},progress:{val:0,state:null,n:0,stack:[]},opt:{filename:"file.pdf",margin:[0,0,0,0],enableLinks:!0,x:0,y:0,html2canvas:{},jsPDF:{},backgroundColor:"transparent"}},s.prototype.from=function(t,e){return this.then((function(){switch(e=e||function(t){switch(o(t)){case"string":return"string";case"element":return"canvas"===t.nodeName.toLowerCase()?"canvas":"element";default:return"unknown"}}(t)){case"string":return this.then(r).then((function(e){return this.set({src:a("div",{innerHTML:t,dompurify:e})})}));case"element":return this.set({src:t});case"canvas":return this.set({canvas:t});case"img":return this.set({img:t});default:return this.error("Unknown source type.")}}))},s.prototype.to=function(t){switch(t){case"container":return this.toContainer();case"canvas":return this.toCanvas();case"img":return this.toImg();case"pdf":return this.toPdf();default:return this.error("Invalid target.")}},s.prototype.toContainer=function(){return this.thenList([function(){return this.prop.src||this.error("Cannot duplicate - no source HTML.")},function(){return this.prop.pageSize||this.setPageSize()}]).then((function(){var t={position:"relative",display:"inline-block",width:("number"!=typeof this.opt.width||isNaN(this.opt.width)||"number"!=typeof this.opt.windowWidth||isNaN(this.opt.windowWidth)?Math.max(this.prop.src.clientWidth,this.prop.src.scrollWidth,this.prop.src.offsetWidth):this.opt.windowWidth)+"px",left:0,right:0,top:0,margin:"auto",backgroundColor:this.opt.backgroundColor},e=function t(e,n){for(var r=3===e.nodeType?document.createTextNode(e.nodeValue):e.cloneNode(!1),i=e.firstChild;i;i=i.nextSibling)!0!==n&&1===i.nodeType&&"SCRIPT"===i.nodeName||r.appendChild(t(i,n));return 1===e.nodeType&&("CANVAS"===e.nodeName?(r.width=e.width,r.height=e.height,r.getContext("2d").drawImage(e,0,0)):"TEXTAREA"!==e.nodeName&&"SELECT"!==e.nodeName||(r.value=e.value),r.addEventListener("load",(function(){r.scrollTop=e.scrollTop,r.scrollLeft=e.scrollLeft}),!0)),r}(this.prop.src,this.opt.html2canvas.javascriptEnabled);"BODY"===e.tagName&&(t.height=Math.max(document.body.scrollHeight,document.body.offsetHeight,document.documentElement.clientHeight,document.documentElement.scrollHeight,document.documentElement.offsetHeight)+"px"),this.prop.overlay=a("div",{className:"html2pdf__overlay",style:{position:"fixed",overflow:"hidden",zIndex:1e3,left:"-100000px",right:0,bottom:0,top:0}}),this.prop.container=a("div",{className:"html2pdf__container",style:t}),this.prop.container.appendChild(e),this.prop.container.firstChild.appendChild(a("div",{style:{clear:"both",border:"0 none transparent",margin:0,padding:0,height:0}})),this.prop.container.style.float="none",this.prop.overlay.appendChild(this.prop.container),document.body.appendChild(this.prop.overlay),this.prop.container.firstChild.style.position="relative",this.prop.container.height=Math.max(this.prop.container.firstChild.clientHeight,this.prop.container.firstChild.scrollHeight,this.prop.container.firstChild.offsetHeight)+"px"}))},s.prototype.toCanvas=function(){var t=[function(){return document.body.contains(this.prop.container)||this.toContainer()}];return this.thenList(t).then(e).then((function(t){var e=Object.assign({},this.opt.html2canvas);return delete e.onrendered,t(this.prop.container,e)})).then((function(t){(this.opt.html2canvas.onrendered||function(){})(t),this.prop.canvas=t,document.body.removeChild(this.prop.overlay)}))},s.prototype.toContext2d=function(){var t=[function(){return document.body.contains(this.prop.container)||this.toContainer()}];return this.thenList(t).then(e).then((function(t){var e=this.opt.jsPDF,n=this.opt.fontFaces,r="number"!=typeof this.opt.width||isNaN(this.opt.width)||"number"!=typeof this.opt.windowWidth||isNaN(this.opt.windowWidth)?1:this.opt.width/this.opt.windowWidth,i=Object.assign({async:!0,allowTaint:!0,scale:r,scrollX:this.opt.scrollX||0,scrollY:this.opt.scrollY||0,backgroundColor:"#ffffff",imageTimeout:15e3,logging:!0,proxy:null,removeContainer:!0,foreignObjectRendering:!1,useCORS:!1},this.opt.html2canvas);if(delete i.onrendered,e.context2d.autoPaging=void 0===this.opt.autoPaging||this.opt.autoPaging,e.context2d.posX=this.opt.x,e.context2d.posY=this.opt.y,e.context2d.margin=this.opt.margin,e.context2d.fontFaces=n,n)for(var o=0;o<n.length;++o){var a=n[o],s=a.src.find((function(t){return"truetype"===t.format}));s&&e.addFont(s.url,a.ref.name,a.ref.style)}return i.windowHeight=i.windowHeight||0,i.windowHeight=0==i.windowHeight?Math.max(this.prop.container.clientHeight,this.prop.container.scrollHeight,this.prop.container.offsetHeight):i.windowHeight,e.context2d.save(!0),t(this.prop.container,i)})).then((function(t){this.opt.jsPDF.context2d.restore(!0),(this.opt.html2canvas.onrendered||function(){})(t),this.prop.canvas=t,document.body.removeChild(this.prop.overlay)}))},s.prototype.toImg=function(){return this.thenList([function(){return this.prop.canvas||this.toCanvas()}]).then((function(){var t=this.prop.canvas.toDataURL("image/"+this.opt.image.type,this.opt.image.quality);this.prop.img=document.createElement("img"),this.prop.img.src=t}))},s.prototype.toPdf=function(){return this.thenList([function(){return this.toContext2d()}]).then((function(){this.prop.pdf=this.prop.pdf||this.opt.jsPDF}))},s.prototype.output=function(t,e,n){return"img"===(n=n||"pdf").toLowerCase()||"image"===n.toLowerCase()?this.outputImg(t,e):this.outputPdf(t,e)},s.prototype.outputPdf=function(t,e){return this.thenList([function(){return this.prop.pdf||this.toPdf()}]).then((function(){return this.prop.pdf.output(t,e)}))},s.prototype.outputImg=function(t){return this.thenList([function(){return this.prop.img||this.toImg()}]).then((function(){switch(t){case void 0:case"img":return this.prop.img;case"datauristring":case"dataurlstring":return this.prop.img.src;case"datauri":case"dataurl":return document.location.href=this.prop.img.src;default:throw'Image output type "'+t+'" is not supported.'}}))},s.prototype.save=function(t){return this.thenList([function(){return this.prop.pdf||this.toPdf()}]).set(t?{filename:t}:null).then((function(){this.prop.pdf.save(this.opt.filename)}))},s.prototype.doCallback=function(){return this.thenList([function(){return this.prop.pdf||this.toPdf()}]).then((function(){this.prop.callback(this.prop.pdf)}))},s.prototype.set=function(t){if("object"!==o(t))return this;var e=Object.keys(t||{}).map((function(e){if(e in s.template.prop)return function(){this.prop[e]=t[e]};switch(e){case"margin":return this.setMargin.bind(this,t.margin);case"jsPDF":return function(){return this.opt.jsPDF=t.jsPDF,this.setPageSize()};case"pageSize":return this.setPageSize.bind(this,t.pageSize);default:return function(){this.opt[e]=t[e]}}}),this);return this.then((function(){return this.thenList(e)}))},s.prototype.get=function(t,e){return this.then((function(){var n=t in s.template.prop?this.prop[t]:this.opt[t];return e?e(n):n}))},s.prototype.setMargin=function(t){return this.then((function(){switch(o(t)){case"number":t=[t,t,t,t];case"array":if(2===t.length&&(t=[t[0],t[1],t[0],t[1]]),4===t.length)break;default:return this.error("Invalid margin array.")}this.opt.margin=t})).then(this.setPageSize)},s.prototype.setPageSize=function(t){function e(t,e){return Math.floor(t*e/72*96)}return this.then((function(){(t=t||Lt.getPageSize(this.opt.jsPDF)).hasOwnProperty("inner")||(t.inner={width:t.width-this.opt.margin[1]-this.opt.margin[3],height:t.height-this.opt.margin[0]-this.opt.margin[2]},t.inner.px={width:e(t.inner.width,t.k),height:e(t.inner.height,t.k)},t.inner.ratio=t.inner.height/t.inner.width),this.prop.pageSize=t}))},s.prototype.setProgress=function(t,e,n,r){return null!=t&&(this.progress.val=t),null!=e&&(this.progress.state=e),null!=n&&(this.progress.n=n),null!=r&&(this.progress.stack=r),this.progress.ratio=this.progress.val/this.progress.state,this},s.prototype.updateProgress=function(t,e,n,r){return this.setProgress(t?this.progress.val+t:null,e||null,n?this.progress.n+n:null,r?this.progress.stack.concat(r):null)},s.prototype.then=function(t,e){var n=this;return this.thenCore(t,e,(function(t,e){return n.updateProgress(null,null,1,[t]),Promise.prototype.then.call(this,(function(e){return n.updateProgress(null,t),e})).then(t,e).then((function(t){return n.updateProgress(1),t}))}))},s.prototype.thenCore=function(t,e,n){n=n||Promise.prototype.then,t&&(t=t.bind(this)),e&&(e=e.bind(this));var r=-1!==Promise.toString().indexOf("[native code]")&&"Promise"===Promise.name?this:s.convert(Object.assign({},this),Promise.prototype),i=n.call(r,t,e);return s.convert(i,this.__proto__)},s.prototype.thenExternal=function(t,e){return Promise.prototype.then.call(this,t,e)},s.prototype.thenList=function(t){var e=this;return t.forEach((function(t){e=e.thenCore(t)})),e},s.prototype.catch=function(t){t&&(t=t.bind(this));var e=Promise.prototype.catch.call(this,t);return s.convert(e,this)},s.prototype.catchExternal=function(t){return Promise.prototype.catch.call(this,t)},s.prototype.error=function(t){return this.then((function(){throw new Error(t)}))},s.prototype.using=s.prototype.set,s.prototype.saveAs=s.prototype.save,s.prototype.export=s.prototype.output,s.prototype.run=s.prototype.then,Lt.getPageSize=function(t,e,n){if("object"===i()(t)){var r=t;t=r.orientation,e=r.unit||e,n=r.format||n}e=e||"mm",n=n||"a4",t=(""+(t||"P")).toLowerCase();var o,a=(""+n).toLowerCase(),s={a0:[2383.94,3370.39],a1:[1683.78,2383.94],a2:[1190.55,1683.78],a3:[841.89,1190.55],a4:[595.28,841.89],a5:[419.53,595.28],a6:[297.64,419.53],a7:[209.76,297.64],a8:[147.4,209.76],a9:[104.88,147.4],a10:[73.7,104.88],b0:[2834.65,4008.19],b1:[2004.09,2834.65],b2:[1417.32,2004.09],b3:[1000.63,1417.32],b4:[708.66,1000.63],b5:[498.9,708.66],b6:[354.33,498.9],b7:[249.45,354.33],b8:[175.75,249.45],b9:[124.72,175.75],b10:[87.87,124.72],c0:[2599.37,3676.54],c1:[1836.85,2599.37],c2:[1298.27,1836.85],c3:[918.43,1298.27],c4:[649.13,918.43],c5:[459.21,649.13],c6:[323.15,459.21],c7:[229.61,323.15],c8:[161.57,229.61],c9:[113.39,161.57],c10:[79.37,113.39],dl:[311.81,623.62],letter:[612,792],"government-letter":[576,756],legal:[612,1008],"junior-legal":[576,360],ledger:[1224,792],tabloid:[792,1224],"credit-card":[153,243]};switch(e){case"pt":o=1;break;case"mm":o=72/25.4;break;case"cm":o=72/2.54;break;case"in":o=72;break;case"px":o=.75;break;case"pc":case"em":o=12;break;case"ex":o=6;break;default:throw"Invalid unit: "+e}var u,l=0,c=0;if(s.hasOwnProperty(a))l=s[a][1]/o,c=s[a][0]/o;else try{l=n[1],c=n[0]}catch(t){throw new Error("Invalid format: "+n)}if("p"===t||"portrait"===t)t="p",c>l&&(u=c,c=l,l=u);else{if("l"!==t&&"landscape"!==t)throw"Invalid orientation: "+t;t="l",l>c&&(u=c,c=l,l=u)}return{width:c,height:l,unit:e,k:o,orientation:t}},t.html=function(t,e){(e=e||{}).callback=e.callback||function(){},e.html2canvas=e.html2canvas||{},e.html2canvas.canvas=e.html2canvas.canvas||this.canvas,e.jsPDF=e.jsPDF||this,e.fontFaces=e.fontFaces?e.fontFaces.map(Ae):null;var n=new s(e);return e.worker?n:n.from(t).doCallback()}}(Lt.API),Lt.API.addJS=function(t){return Me=t,this.internal.events.subscribe("postPutResources",(function(){Pe=this.internal.newObject(),this.internal.out("<<"),this.internal.out("/Names [(EmbeddedJS) "+(Pe+1)+" 0 R]"),this.internal.out(">>"),this.internal.out("endobj"),Ie=this.internal.newObject(),this.internal.out("<<"),this.internal.out("/S /JavaScript"),this.internal.out("/JS ("+Me+")"),this.internal.out(">>"),this.internal.out("endobj")})),this.internal.events.subscribe("putCatalog",(function(){void 0!==Pe&&void 0!==Ie&&this.internal.out("/Names <</JavaScript "+Pe+" 0 R>>")})),this},function(t){var e;t.events.push(["postPutResources",function(){var t=this,n=/^(\d+) 0 obj$/;if(this.outline.root.children.length>0)for(var r=t.outline.render().split(/\r\n/),i=0;i<r.length;i++){var o=r[i],a=n.exec(o);if(null!=a){var s=a[1];t.internal.newObjectDeferredBegin(s,!1)}t.internal.write(o)}if(this.outline.createNamedDestinations){var u=this.internal.pages.length,l=[];for(i=0;i<u;i++){var c=t.internal.newObject();l.push(c);var h=t.internal.getPageInfo(i+1);t.internal.write("<< /D["+h.objId+" 0 R /XYZ null null null]>> endobj")}var f=t.internal.newObject();for(t.internal.write("<< /Names [ "),i=0;i<l.length;i++)t.internal.write("(page_"+(i+1)+")"+l[i]+" 0 R");t.internal.write(" ] >>","endobj"),e=t.internal.newObject(),t.internal.write("<< /Dests "+f+" 0 R"),t.internal.write(">>","endobj")}}]),t.events.push(["putCatalog",function(){this.outline.root.children.length>0&&(this.internal.write("/Outlines",this.outline.makeRef(this.outline.root)),this.outline.createNamedDestinations&&this.internal.write("/Names "+e+" 0 R"))}]),t.events.push(["initialized",function(){var t=this;t.outline={createNamedDestinations:!1,root:{children:[]}},t.outline.add=function(t,e,n){var r={title:e,options:n,children:[]};return null==t&&(t=this.root),t.children.push(r),r},t.outline.render=function(){return this.ctx={},this.ctx.val="",this.ctx.pdf=t,this.genIds_r(this.root),this.renderRoot(this.root),this.renderItems(this.root),this.ctx.val},t.outline.genIds_r=function(e){e.id=t.internal.newObjectDeferred();for(var n=0;n<e.children.length;n++)this.genIds_r(e.children[n])},t.outline.renderRoot=function(t){this.objStart(t),this.line("/Type /Outlines"),t.children.length>0&&(this.line("/First "+this.makeRef(t.children[0])),this.line("/Last "+this.makeRef(t.children[t.children.length-1]))),this.line("/Count "+this.count_r({count:0},t)),this.objEnd()},t.outline.renderItems=function(e){for(var n=this.ctx.pdf.internal.getVerticalCoordinateString,r=0;r<e.children.length;r++){var i=e.children[r];this.objStart(i),this.line("/Title "+this.makeString(i.title)),this.line("/Parent "+this.makeRef(e)),r>0&&this.line("/Prev "+this.makeRef(e.children[r-1])),r<e.children.length-1&&this.line("/Next "+this.makeRef(e.children[r+1])),i.children.length>0&&(this.line("/First "+this.makeRef(i.children[0])),this.line("/Last "+this.makeRef(i.children[i.children.length-1])));var o=this.count=this.count_r({count:0},i);if(o>0&&this.line("/Count "+o),i.options&&i.options.pageNumber){var a=t.internal.getPageInfo(i.options.pageNumber);this.line("/Dest ["+a.objId+" 0 R /XYZ 0 "+n(0)+" 0]")}this.objEnd()}for(var s=0;s<e.children.length;s++)this.renderItems(e.children[s])},t.outline.line=function(t){this.ctx.val+=t+"\r\n"},t.outline.makeRef=function(t){return t.id+" 0 R"},t.outline.makeString=function(e){return"("+t.internal.pdfEscape(e)+")"},t.outline.objStart=function(t){this.ctx.val+="\r\n"+t.id+" 0 obj\r\n<<\r\n"},t.outline.objEnd=function(){this.ctx.val+=">> \r\nendobj\r\n"},t.outline.count_r=function(t,e){for(var n=0;n<e.children.length;n++)t.count++,this.count_r(t,e.children[n]);return t.count}}])}(Lt.API),function(t){var e=[192,193,194,195,196,197,198,199];t.processJPEG=function(t,n,r,i,o,a){var s,u=this.decode.DCT_DECODE,l=null;if("string"==typeof t||this.__addimage__.isArrayBuffer(t)||this.__addimage__.isArrayBufferView(t)){switch(t=o||t,t=this.__addimage__.isArrayBuffer(t)?new Uint8Array(t):t,(s=function(t){for(var n,r=256*t.charCodeAt(4)+t.charCodeAt(5),i=t.length,o={width:0,height:0,numcomponents:1},a=4;a<i;a+=2){if(a+=r,-1!==e.indexOf(t.charCodeAt(a+1))){n=256*t.charCodeAt(a+5)+t.charCodeAt(a+6),o={width:256*t.charCodeAt(a+7)+t.charCodeAt(a+8),height:n,numcomponents:t.charCodeAt(a+9)};break}r=256*t.charCodeAt(a+2)+t.charCodeAt(a+3)}return o}(t=this.__addimage__.isArrayBufferView(t)?this.__addimage__.arrayBufferToBinaryString(t):t)).numcomponents){case 1:a=this.color_spaces.DEVICE_GRAY;break;case 4:a=this.color_spaces.DEVICE_CMYK;break;case 3:a=this.color_spaces.DEVICE_RGB}l={data:t,width:s.width,height:s.height,colorSpace:a,bitsPerComponent:8,filter:u,index:n,alias:r}}return l}}(Lt.API);var Fe,Te,Ee,Oe,je,Re=function(){var t,e,n;function r(t){var e,n,r,i,o,a,s,u,l,c,h,f,d,p;for(this.data=t,this.pos=8,this.palette=[],this.imgData=[],this.transparency={},this.animation=null,this.text={},a=null;;){switch(e=this.readUInt32(),l=function(){var t,e;for(e=[],t=0;t<4;++t)e.push(String.fromCharCode(this.data[this.pos++]));return e}.call(this).join("")){case"IHDR":this.width=this.readUInt32(),this.height=this.readUInt32(),this.bits=this.data[this.pos++],this.colorType=this.data[this.pos++],this.compressionMethod=this.data[this.pos++],this.filterMethod=this.data[this.pos++],this.interlaceMethod=this.data[this.pos++];break;case"acTL":this.animation={numFrames:this.readUInt32(),numPlays:this.readUInt32()||1/0,frames:[]};break;case"PLTE":this.palette=this.read(e);break;case"fcTL":a&&this.animation.frames.push(a),this.pos+=4,a={width:this.readUInt32(),height:this.readUInt32(),xOffset:this.readUInt32(),yOffset:this.readUInt32()},o=this.readUInt16(),i=this.readUInt16()||100,a.delay=1e3*o/i,a.disposeOp=this.data[this.pos++],a.blendOp=this.data[this.pos++],a.data=[];break;case"IDAT":case"fdAT":for("fdAT"===l&&(this.pos+=4,e-=4),t=(null!=a?a.data:void 0)||this.imgData,f=0;0<=e?f<e:f>e;0<=e?++f:--f)t.push(this.data[this.pos++]);break;case"tRNS":switch(this.transparency={},this.colorType){case 3:if(r=this.palette.length/3,this.transparency.indexed=this.read(e),this.transparency.indexed.length>r)throw new Error("More transparent colors than palette size");if((c=r-this.transparency.indexed.length)>0)for(d=0;0<=c?d<c:d>c;0<=c?++d:--d)this.transparency.indexed.push(255);break;case 0:this.transparency.grayscale=this.read(e)[0];break;case 2:this.transparency.rgb=this.read(e)}break;case"tEXt":s=(h=this.read(e)).indexOf(0),u=String.fromCharCode.apply(String,h.slice(0,s)),this.text[u]=String.fromCharCode.apply(String,h.slice(s+1));break;case"IEND":return a&&this.animation.frames.push(a),this.colors=function(){switch(this.colorType){case 0:case 3:case 4:return 1;case 2:case 6:return 3}}.call(this),this.hasAlphaChannel=4===(p=this.colorType)||6===p,n=this.colors+(this.hasAlphaChannel?1:0),this.pixelBitlength=this.bits*n,this.colorSpace=function(){switch(this.colors){case 1:return"DeviceGray";case 3:return"DeviceRGB"}}.call(this),void(this.imgData=new Uint8Array(this.imgData));default:this.pos+=e}if(this.pos+=4,this.pos>this.data.length)throw new Error("Incomplete or corrupt PNG file")}}r.prototype.read=function(t){var e,n;for(n=[],e=0;0<=t?e<t:e>t;0<=t?++e:--e)n.push(this.data[this.pos++]);return n},r.prototype.readUInt32=function(){return this.data[this.pos++]<<24|this.data[this.pos++]<<16|this.data[this.pos++]<<8|this.data[this.pos++]},r.prototype.readUInt16=function(){return this.data[this.pos++]<<8|this.data[this.pos++]},r.prototype.decodePixels=function(t){var e=this.pixelBitlength/8,n=new Uint8Array(this.width*this.height*e),r=0,i=this;if(null==t&&(t=this.imgData),0===t.length)return new Uint8Array(0);function o(o,a,s,u){var l,c,h,f,d,p,g,m,v,y,b,w,A,x,_,S,L,N,k,C,P,I=Math.ceil((i.width-o)/s),M=Math.ceil((i.height-a)/u),B=i.width==I&&i.height==M;for(x=e*I,w=B?n:new Uint8Array(x*M),p=t.length,A=0,c=0;A<M&&r<p;){switch(t[r++]){case 0:for(f=L=0;L<x;f=L+=1)w[c++]=t[r++];break;case 1:for(f=N=0;N<x;f=N+=1)l=t[r++],d=f<e?0:w[c-e],w[c++]=(l+d)%256;break;case 2:for(f=k=0;k<x;f=k+=1)l=t[r++],h=(f-f%e)/e,_=A&&w[(A-1)*x+h*e+f%e],w[c++]=(_+l)%256;break;case 3:for(f=C=0;C<x;f=C+=1)l=t[r++],h=(f-f%e)/e,d=f<e?0:w[c-e],_=A&&w[(A-1)*x+h*e+f%e],w[c++]=(l+Math.floor((d+_)/2))%256;break;case 4:for(f=P=0;P<x;f=P+=1)l=t[r++],h=(f-f%e)/e,d=f<e?0:w[c-e],0===A?_=S=0:(_=w[(A-1)*x+h*e+f%e],S=h&&w[(A-1)*x+(h-1)*e+f%e]),g=d+_-S,m=Math.abs(g-d),y=Math.abs(g-_),b=Math.abs(g-S),v=m<=y&&m<=b?d:y<=b?_:S,w[c++]=(l+v)%256;break;default:throw new Error("Invalid filter algorithm: "+t[r-1])}if(!B){var F=((a+A*u)*i.width+o)*e,T=A*x;for(f=0;f<I;f+=1){for(var E=0;E<e;E+=1)n[F++]=w[T++];F+=(s-1)*e}}A++}}return t=V(t),1==i.interlaceMethod?(o(0,0,8,8),o(4,0,8,8),o(0,4,4,8),o(2,0,4,4),o(0,2,2,4),o(1,0,2,2),o(0,1,1,2)):o(0,0,1,1),n},r.prototype.decodePalette=function(){var t,e,n,r,i,o,a,s,u;for(n=this.palette,o=this.transparency.indexed||[],i=new Uint8Array((o.length||0)+n.length),r=0,t=0,e=a=0,s=n.length;a<s;e=a+=3)i[r++]=n[e],i[r++]=n[e+1],i[r++]=n[e+2],i[r++]=null!=(u=o[t++])?u:255;return i},r.prototype.copyToImageData=function(t,e){var n,r,i,o,a,s,u,l,c,h,f;if(r=this.colors,c=null,n=this.hasAlphaChannel,this.palette.length&&(c=null!=(f=this._decodedPalette)?f:this._decodedPalette=this.decodePalette(),r=4,n=!0),l=(i=t.data||t).length,a=c||e,o=s=0,1===r)for(;o<l;)u=c?4*e[o/4]:s,h=a[u++],i[o++]=h,i[o++]=h,i[o++]=h,i[o++]=n?a[u++]:255,s=u;else for(;o<l;)u=c?4*e[o/4]:s,i[o++]=a[u++],i[o++]=a[u++],i[o++]=a[u++],i[o++]=n?a[u++]:255,s=u},r.prototype.decode=function(){var t;return t=new Uint8Array(this.width*this.height*4),this.copyToImageData(t,this.decodePixels()),t};var i=function(){if("[object Window]"===Object.prototype.toString.call(G)){try{e=G.document.createElement("canvas"),n=e.getContext("2d")}catch(t){return!1}return!0}return!1};return i(),t=function(t){var r;if(!0===i())return n.width=t.width,n.height=t.height,n.clearRect(0,0,t.width,t.height),n.putImageData(t,0,0),(r=new Image).src=e.toDataURL(),r;throw new Error("This method requires a Browser with Canvas-capability.")},r.prototype.decodeFrames=function(e){var n,r,i,o,a,s,u,l;if(this.animation){for(l=[],r=a=0,s=(u=this.animation.frames).length;a<s;r=++a)n=u[r],i=e.createImageData(n.width,n.height),o=this.decodePixels(new Uint8Array(n.data)),this.copyToImageData(i,o),n.imageData=i,l.push(n.image=t(i));return l}},r.prototype.renderFrame=function(t,e){var n,r,i;return n=(r=this.animation.frames)[e],i=r[e-1],0===e&&t.clearRect(0,0,this.width,this.height),1===(null!=i?i.disposeOp:void 0)?t.clearRect(i.xOffset,i.yOffset,i.width,i.height):2===(null!=i?i.disposeOp:void 0)&&t.putImageData(i.imageData,i.xOffset,i.yOffset),0===n.blendOp&&t.clearRect(n.xOffset,n.yOffset,n.width,n.height),t.drawImage(n.image,n.xOffset,n.yOffset)},r.prototype.animate=function(t){var e,n,r,i,o,a,s=this;return n=0,a=this.animation,i=a.numFrames,r=a.frames,o=a.numPlays,(e=function(){var a,u;if(a=n++%i,u=r[a],s.renderFrame(t,a),i>1&&n/i<o)return s.animation._timeout=setTimeout(e,u.delay)})()},r.prototype.stopAnimation=function(){var t;return clearTimeout(null!=(t=this.animation)?t._timeout:void 0)},r.prototype.render=function(t){var e,n;return t._png&&t._png.stopAnimation(),t._png=this,t.width=this.width,t.height=this.height,e=t.getContext("2d"),this.animation?(this.decodeFrames(e),this.animate(e)):(n=e.createImageData(this.width,this.height),this.copyToImageData(n,this.decodePixels()),e.putImageData(n,0,0))},r}();function De(t){var e=0;if(71!==t[e++]||73!==t[e++]||70!==t[e++]||56!==t[e++]||56!=(t[e++]+1&253)||97!==t[e++])throw new Error("Invalid GIF 87a/89a header.");var n=t[e++]|t[e++]<<8,r=t[e++]|t[e++]<<8,i=t[e++],o=i>>7,a=1<<1+(7&i);t[e++],t[e++];var s=null,u=null;o&&(s=e,u=a,e+=3*a);var l=!0,c=[],h=0,f=null,d=0,p=null;for(this.width=n,this.height=r;l&&e<t.length;)switch(t[e++]){case 33:switch(t[e++]){case 255:if(11!==t[e]||78==t[e+1]&&69==t[e+2]&&84==t[e+3]&&83==t[e+4]&&67==t[e+5]&&65==t[e+6]&&80==t[e+7]&&69==t[e+8]&&50==t[e+9]&&46==t[e+10]&&48==t[e+11]&&3==t[e+12]&&1==t[e+13]&&0==t[e+16])e+=14,p=t[e++]|t[e++]<<8,e++;else for(e+=12;;){if(!((k=t[e++])>=0))throw Error("Invalid block size");if(0===k)break;e+=k}break;case 249:if(4!==t[e++]||0!==t[e+4])throw new Error("Invalid graphics extension block.");var g=t[e++];h=t[e++]|t[e++]<<8,f=t[e++],0==(1&g)&&(f=null),d=g>>2&7,e++;break;case 254:for(;;){if(!((k=t[e++])>=0))throw Error("Invalid block size");if(0===k)break;e+=k}break;default:throw new Error("Unknown graphic control label: 0x"+t[e-1].toString(16))}break;case 44:var m=t[e++]|t[e++]<<8,v=t[e++]|t[e++]<<8,y=t[e++]|t[e++]<<8,b=t[e++]|t[e++]<<8,w=t[e++],A=w>>6&1,x=1<<1+(7&w),_=s,S=u,L=!1;w>>7&&(L=!0,_=e,S=x,e+=3*x);var N=e;for(e++;;){var k;if(!((k=t[e++])>=0))throw Error("Invalid block size");if(0===k)break;e+=k}c.push({x:m,y:v,width:y,height:b,has_local_palette:L,palette_offset:_,palette_size:S,data_offset:N,data_length:e-N,transparent_index:f,interlaced:!!A,delay:h,disposal:d});break;case 59:l=!1;break;default:throw new Error("Unknown gif block: 0x"+t[e-1].toString(16))}this.numFrames=function(){return c.length},this.loopCount=function(){return p},this.frameInfo=function(t){if(t<0||t>=c.length)throw new Error("Frame index out of range.");return c[t]},this.decodeAndBlitFrameBGRA=function(e,r){var i=this.frameInfo(e),o=i.width*i.height,a=new Uint8Array(o);qe(t,i.data_offset,a,o);var s=i.palette_offset,u=i.transparent_index;null===u&&(u=256);var l=i.width,c=n-l,h=l,f=4*(i.y*n+i.x),d=4*((i.y+i.height)*n+i.x),p=f,g=4*c;!0===i.interlaced&&(g+=4*n*7);for(var m=8,v=0,y=a.length;v<y;++v){var b=a[v];if(0===h&&(h=l,(p+=g)>=d&&(g=4*c+4*n*(m-1),p=f+(l+c)*(m<<1),m>>=1)),b===u)p+=4;else{var w=t[s+3*b],A=t[s+3*b+1],x=t[s+3*b+2];r[p++]=x,r[p++]=A,r[p++]=w,r[p++]=255}--h}},this.decodeAndBlitFrameRGBA=function(e,r){var i=this.frameInfo(e),o=i.width*i.height,a=new Uint8Array(o);qe(t,i.data_offset,a,o);var s=i.palette_offset,u=i.transparent_index;null===u&&(u=256);var l=i.width,c=n-l,h=l,f=4*(i.y*n+i.x),d=4*((i.y+i.height)*n+i.x),p=f,g=4*c;!0===i.interlaced&&(g+=4*n*7);for(var m=8,v=0,y=a.length;v<y;++v){var b=a[v];if(0===h&&(h=l,(p+=g)>=d&&(g=4*c+4*n*(m-1),p=f+(l+c)*(m<<1),m>>=1)),b===u)p+=4;else{var w=t[s+3*b],A=t[s+3*b+1],x=t[s+3*b+2];r[p++]=w,r[p++]=A,r[p++]=x,r[p++]=255}--h}}}function qe(t,e,n,r){for(var i=t[e++],o=1<<i,a=o+1,s=a+1,u=i+1,l=(1<<u)-1,c=0,h=0,f=0,d=t[e++],p=new Int32Array(4096),g=null;;){for(;c<16&&0!==d;)h|=t[e++]<<c,c+=8,1===d?d=t[e++]:--d;if(c<u)break;var m=h&l;if(h>>=u,c-=u,m!==o){if(m===a)break;for(var v=m<s?m:g,y=0,b=v;b>o;)b=p[b]>>8,++y;var w=b;if(f+y+(v!==m?1:0)>r)return void X.log("Warning, gif stream longer than expected.");n[f++]=w;var A=f+=y;for(v!==m&&(n[f++]=w),b=v;y--;)b=p[b],n[--A]=255&b,b>>=8;null!==g&&s<4096&&(p[s++]=g<<8|w,s>=l+1&&u<12&&(++u,l=l<<1|1)),g=m}else s=a+1,l=(1<<(u=i+1))-1,g=null}return f!==r&&X.log("Warning, gif stream shorter than expected."),n}function ze(t){var e,n,r,i,o,a=Math.floor,s=new Array(64),u=new Array(64),l=new Array(64),c=new Array(64),h=new Array(65535),f=new Array(65535),d=new Array(64),p=new Array(64),g=[],m=0,v=7,y=new Array(64),b=new Array(64),w=new Array(64),A=new Array(256),x=new Array(2048),_=[0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,12,17,25,30,41,43,9,11,18,24,31,40,44,53,10,19,23,32,39,45,52,54,20,22,33,38,46,51,55,60,21,34,37,47,50,56,59,61,35,36,48,49,57,58,62,63],S=[0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0],L=[0,1,2,3,4,5,6,7,8,9,10,11],N=[0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125],k=[1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250],C=[0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0],P=[0,1,2,3,4,5,6,7,8,9,10,11],I=[0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119],M=[0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250];function B(t,e){for(var n=0,r=0,i=new Array,o=1;o<=16;o++){for(var a=1;a<=t[o];a++)i[e[r]]=[],i[e[r]][0]=n,i[e[r]][1]=o,r++,n++;n*=2}return i}function F(t){for(var e=t[0],n=t[1]-1;n>=0;)e&1<<n&&(m|=1<<v),n--,--v<0&&(255==m?(T(255),T(0)):T(m),v=7,m=0)}function T(t){g.push(t)}function E(t){T(t>>8&255),T(255&t)}function O(t,e,n,r,i){for(var o,a=i[0],s=i[240],u=function(t,e){var n,r,i,o,a,s,u,l,c,h,f=0;for(c=0;c<8;++c){n=t[f],r=t[f+1],i=t[f+2],o=t[f+3],a=t[f+4],s=t[f+5],u=t[f+6];var p=n+(l=t[f+7]),g=n-l,m=r+u,v=r-u,y=i+s,b=i-s,w=o+a,A=o-a,x=p+w,_=p-w,S=m+y,L=m-y;t[f]=x+S,t[f+4]=x-S;var N=.707106781*(L+_);t[f+2]=_+N,t[f+6]=_-N;var k=.382683433*((x=A+b)-(L=v+g)),C=.5411961*x+k,P=1.306562965*L+k,I=.707106781*(S=b+v),M=g+I,B=g-I;t[f+5]=B+C,t[f+3]=B-C,t[f+1]=M+P,t[f+7]=M-P,f+=8}for(f=0,c=0;c<8;++c){n=t[f],r=t[f+8],i=t[f+16],o=t[f+24],a=t[f+32],s=t[f+40],u=t[f+48];var F=n+(l=t[f+56]),T=n-l,E=r+u,O=r-u,j=i+s,R=i-s,D=o+a,q=o-a,z=F+D,U=F-D,H=E+j,W=E-j;t[f]=z+H,t[f+32]=z-H;var V=.707106781*(W+U);t[f+16]=U+V,t[f+48]=U-V;var G=.382683433*((z=q+R)-(W=O+T)),Y=.5411961*z+G,X=1.306562965*W+G,J=.707106781*(H=R+O),K=T+J,$=T-J;t[f+40]=$+Y,t[f+24]=$-Y,t[f+8]=K+X,t[f+56]=K-X,f++}for(c=0;c<64;++c)h=t[c]*e[c],d[c]=h>0?h+.5|0:h-.5|0;return d}(t,e),l=0;l<64;++l)p[_[l]]=u[l];var c=p[0]-n;n=p[0],0==c?F(r[0]):(F(r[f[o=32767+c]]),F(h[o]));for(var g=63;g>0&&0==p[g];)g--;if(0==g)return F(a),n;for(var m,v=1;v<=g;){for(var y=v;0==p[v]&&v<=g;)++v;var b=v-y;if(b>=16){m=b>>4;for(var w=1;w<=m;++w)F(s);b&=15}o=32767+p[v],F(i[(b<<4)+f[o]]),F(h[o]),v++}return 63!=g&&F(a),n}function j(t){t=Math.min(Math.max(t,1),100),o!=t&&(function(t){for(var e=[16,11,10,16,24,40,51,61,12,12,14,19,26,58,60,55,14,13,16,24,40,57,69,56,14,17,22,29,51,87,80,62,18,22,37,56,68,109,103,77,24,35,55,64,81,104,113,92,49,64,78,87,103,121,120,101,72,92,95,98,112,100,103,99],n=0;n<64;n++){var r=a((e[n]*t+50)/100);r=Math.min(Math.max(r,1),255),s[_[n]]=r}for(var i=[17,18,24,47,99,99,99,99,18,21,26,66,99,99,99,99,24,26,56,99,99,99,99,99,47,66,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99],o=0;o<64;o++){var h=a((i[o]*t+50)/100);h=Math.min(Math.max(h,1),255),u[_[o]]=h}for(var f=[1,1.387039845,1.306562965,1.175875602,1,.785694958,.5411961,.275899379],d=0,p=0;p<8;p++)for(var g=0;g<8;g++)l[d]=1/(s[_[d]]*f[p]*f[g]*8),c[d]=1/(u[_[d]]*f[p]*f[g]*8),d++}(t<50?Math.floor(5e3/t):Math.floor(200-2*t)),o=t)}this.encode=function(t,o){o&&j(o),g=new Array,m=0,v=7,E(65496),E(65504),E(16),T(74),T(70),T(73),T(70),T(0),T(1),T(1),T(0),E(1),E(1),T(0),T(0),function(){E(65499),E(132),T(0);for(var t=0;t<64;t++)T(s[t]);T(1);for(var e=0;e<64;e++)T(u[e])}(),function(t,e){E(65472),E(17),T(8),E(e),E(t),T(3),T(1),T(17),T(0),T(2),T(17),T(1),T(3),T(17),T(1)}(t.width,t.height),function(){E(65476),E(418),T(0);for(var t=0;t<16;t++)T(S[t+1]);for(var e=0;e<=11;e++)T(L[e]);T(16);for(var n=0;n<16;n++)T(N[n+1]);for(var r=0;r<=161;r++)T(k[r]);T(1);for(var i=0;i<16;i++)T(C[i+1]);for(var o=0;o<=11;o++)T(P[o]);T(17);for(var a=0;a<16;a++)T(I[a+1]);for(var s=0;s<=161;s++)T(M[s])}(),E(65498),E(12),T(3),T(1),T(0),T(2),T(17),T(3),T(17),T(0),T(63),T(0);var a=0,h=0,f=0;m=0,v=7,this.encode.displayName="_encode_";for(var d,p,A,_,B,R,D,q,z,U=t.data,H=t.width,W=t.height,V=4*H,G=0;G<W;){for(d=0;d<V;){for(B=V*G+d,D=-1,q=0,z=0;z<64;z++)R=B+(q=z>>3)*V+(D=4*(7&z)),G+q>=W&&(R-=V*(G+1+q-W)),d+D>=V&&(R-=d+D-V+4),p=U[R++],A=U[R++],_=U[R++],y[z]=(x[p]+x[A+256>>0]+x[_+512>>0]>>16)-128,b[z]=(x[p+768>>0]+x[A+1024>>0]+x[_+1280>>0]>>16)-128,w[z]=(x[p+1280>>0]+x[A+1536>>0]+x[_+1792>>0]>>16)-128;a=O(y,l,a,e,r),h=O(b,c,h,n,i),f=O(w,c,f,n,i),d+=32}G+=8}if(v>=0){var Y=[];Y[1]=v+1,Y[0]=(1<<v+1)-1,F(Y)}return E(65497),new Uint8Array(g)},t=t||50,function(){for(var t=String.fromCharCode,e=0;e<256;e++)A[e]=t(e)}(),e=B(S,L),n=B(C,P),r=B(N,k),i=B(I,M),function(){for(var t=1,e=2,n=1;n<=15;n++){for(var r=t;r<e;r++)f[32767+r]=n,h[32767+r]=[],h[32767+r][1]=n,h[32767+r][0]=r;for(var i=-(e-1);i<=-t;i++)f[32767+i]=n,h[32767+i]=[],h[32767+i][1]=n,h[32767+i][0]=e-1+i;t<<=1,e<<=1}}(),function(){for(var t=0;t<256;t++)x[t]=19595*t,x[t+256>>0]=38470*t,x[t+512>>0]=7471*t+32768,x[t+768>>0]=-11059*t,x[t+1024>>0]=-21709*t,x[t+1280>>0]=32768*t+8421375,x[t+1536>>0]=-27439*t,x[t+1792>>0]=-5329*t}(),j(t)}function Ue(t,e){if(this.pos=0,this.buffer=t,this.datav=new DataView(t.buffer),this.is_with_alpha=!!e,this.bottom_up=!0,this.flag=String.fromCharCode(this.buffer[0])+String.fromCharCode(this.buffer[1]),this.pos+=2,-1===["BM","BA","CI","CP","IC","PT"].indexOf(this.flag))throw new Error("Invalid BMP File");this.parseHeader(),this.parseBGR()}function He(t){function e(t){if(!t)throw Error("assert :P")}function n(t,e,n){for(var r=0;4>r;r++)if(t[e+r]!=n.charCodeAt(r))return!0;return!1}function r(t,e,n,r,i){for(var o=0;o<i;o++)t[e+o]=n[r+o]}function i(t,e,n,r){for(var i=0;i<r;i++)t[e+i]=n}function o(t){return new Int32Array(t)}function a(t,e){for(var n=[],r=0;r<t;r++)n.push(new e);return n}function s(t,e){var n=[];return function t(n,r,i){for(var o=i[r],a=0;a<o&&(n.push(i.length>r+1?[]:new e),!(i.length<r+1));a++)t(n[a],r+1,i)}(n,0,t),n}var u=function(){var t=this;function u(t,e){for(var n=1<<e-1>>>0;t&n;)n>>>=1;return n?(t&n-1)+n:t}function l(t,n,r,i,o){e(!(i%r));do{t[n+(i-=r)]=o}while(0<i)}function c(t,n,r,i,a){if(e(2328>=a),512>=a)var s=o(512);else if(null==(s=o(a)))return 0;return function(t,n,r,i,a,s){var c,f,d=n,p=1<<r,g=o(16),m=o(16);for(e(0!=a),e(null!=i),e(null!=t),e(0<r),f=0;f<a;++f){if(15<i[f])return 0;++g[i[f]]}if(g[0]==a)return 0;for(m[1]=0,c=1;15>c;++c){if(g[c]>1<<c)return 0;m[c+1]=m[c]+g[c]}for(f=0;f<a;++f)c=i[f],0<i[f]&&(s[m[c]++]=f);if(1==m[15])return(i=new h).g=0,i.value=s[0],l(t,d,1,p,i),p;var v,y=-1,b=p-1,w=0,A=1,x=1,_=1<<r;for(f=0,c=1,a=2;c<=r;++c,a<<=1){if(A+=x<<=1,0>(x-=g[c]))return 0;for(;0<g[c];--g[c])(i=new h).g=c,i.value=s[f++],l(t,d+w,a,_,i),w=u(w,c)}for(c=r+1,a=2;15>=c;++c,a<<=1){if(A+=x<<=1,0>(x-=g[c]))return 0;for(;0<g[c];--g[c]){if(i=new h,(w&b)!=y){for(d+=_,v=1<<(y=c)-r;15>y&&!(0>=(v-=g[y]));)++y,v<<=1;p+=_=1<<(v=y-r),t[n+(y=w&b)].g=v+r,t[n+y].value=d-n-y}i.g=c-r,i.value=s[f++],l(t,d+(w>>r),a,_,i),w=u(w,c)}}return A!=2*m[15]-1?0:p}(t,n,r,i,a,s)}function h(){this.value=this.g=0}function f(){this.value=this.g=0}function d(){this.G=a(5,h),this.H=o(5),this.jc=this.Qb=this.qb=this.nd=0,this.pd=a(Dn,f)}function p(t,n,r,i){e(null!=t),e(null!=n),e(2147483648>i),t.Ca=254,t.I=0,t.b=-8,t.Ka=0,t.oa=n,t.pa=r,t.Jd=n,t.Yc=r+i,t.Zc=4<=i?r+i-4+1:r,N(t)}function g(t,e){for(var n=0;0<e--;)n|=C(t,128)<<e;return n}function m(t,e){var n=g(t,e);return k(t)?-n:n}function v(t,n,r,i){var o,a=0;for(e(null!=t),e(null!=n),e(4294967288>i),t.Sb=i,t.Ra=0,t.u=0,t.h=0,4<i&&(i=4),o=0;o<i;++o)a+=n[r+o]<<8*o;t.Ra=a,t.bb=i,t.oa=n,t.pa=r}function y(t){for(;8<=t.u&&t.bb<t.Sb;)t.Ra>>>=8,t.Ra+=t.oa[t.pa+t.bb]<<Un-8>>>0,++t.bb,t.u-=8;_(t)&&(t.h=1,t.u=0)}function b(t,n){if(e(0<=n),!t.h&&n<=zn){var r=x(t)&qn[n];return t.u+=n,y(t),r}return t.h=1,t.u=0}function w(){this.b=this.Ca=this.I=0,this.oa=[],this.pa=0,this.Jd=[],this.Yc=0,this.Zc=[],this.Ka=0}function A(){this.Ra=0,this.oa=[],this.h=this.u=this.bb=this.Sb=this.pa=0}function x(t){return t.Ra>>>(t.u&Un-1)>>>0}function _(t){return e(t.bb<=t.Sb),t.h||t.bb==t.Sb&&t.u>Un}function S(t,e){t.u=e,t.h=_(t)}function L(t){t.u>=Hn&&(e(t.u>=Hn),y(t))}function N(t){e(null!=t&&null!=t.oa),t.pa<t.Zc?(t.I=(t.oa[t.pa++]|t.I<<8)>>>0,t.b+=8):(e(null!=t&&null!=t.oa),t.pa<t.Yc?(t.b+=8,t.I=t.oa[t.pa++]|t.I<<8):t.Ka?t.b=0:(t.I<<=8,t.b+=8,t.Ka=1))}function k(t){return g(t,1)}function C(t,e){var n=t.Ca;0>t.b&&N(t);var r=t.b,i=n*e>>>8,o=(t.I>>>r>i)+0;for(o?(n-=i,t.I-=i+1<<r>>>0):n=i+1,r=n,i=0;256<=r;)i+=8,r>>=8;return r=7^i+Wn[r],t.b-=r,t.Ca=(n<<r)-1,o}function P(t,e,n){t[e+0]=n>>24&255,t[e+1]=n>>16&255,t[e+2]=n>>8&255,t[e+3]=n>>0&255}function I(t,e){return t[e+0]<<0|t[e+1]<<8}function M(t,e){return I(t,e)|t[e+2]<<16}function B(t,e){return I(t,e)|I(t,e+2)<<16}function F(t,n){var r=1<<n;return e(null!=t),e(0<n),t.X=o(r),null==t.X?0:(t.Mb=32-n,t.Xa=n,1)}function T(t,n){e(null!=t),e(null!=n),e(t.Xa==n.Xa),r(n.X,0,t.X,0,1<<n.Xa)}function E(){this.X=[],this.Xa=this.Mb=0}function O(t,n,r,i){e(null!=r),e(null!=i);var o=r[0],a=i[0];return 0==o&&(o=(t*a+n/2)/n),0==a&&(a=(n*o+t/2)/t),0>=o||0>=a?0:(r[0]=o,i[0]=a,1)}function j(t,e){return t+(1<<e)-1>>>e}function R(t,e){return((4278255360&t)+(4278255360&e)>>>0&4278255360)+((16711935&t)+(16711935&e)>>>0&16711935)>>>0}function D(e,n){t[n]=function(n,r,i,o,a,s,u){var l;for(l=0;l<a;++l){var c=t[e](s[u+l-1],i,o+l);s[u+l]=R(n[r+l],c)}}}function q(){this.ud=this.hd=this.jd=0}function z(t,e){return((4278124286&(t^e))>>>1)+(t&e)>>>0}function U(t){return 0<=t&&256>t?t:0>t?0:255<t?255:void 0}function H(t,e){return U(t+(t-e+.5>>1))}function W(t,e,n){return Math.abs(e-n)-Math.abs(t-n)}function V(t,e,n,r,i,o,a){for(r=o[a-1],n=0;n<i;++n)o[a+n]=r=R(t[e+n],r)}function G(t,e,n,r,i){var o;for(o=0;o<n;++o){var a=t[e+o],s=a>>8&255,u=16711935&(u=(u=16711935&a)+((s<<16)+s));r[i+o]=(4278255360&a)+u>>>0}}function Y(t,e){e.jd=t>>0&255,e.hd=t>>8&255,e.ud=t>>16&255}function X(t,e,n,r,i,o){var a;for(a=0;a<r;++a){var s=e[n+a],u=s>>>8,l=s,c=255&(c=(c=s>>>16)+((t.jd<<24>>24)*(u<<24>>24)>>>5));l=255&(l=(l+=(t.hd<<24>>24)*(u<<24>>24)>>>5)+((t.ud<<24>>24)*(c<<24>>24)>>>5)),i[o+a]=(4278255360&s)+(c<<16)+l}}function J(e,n,r,i,o){t[n]=function(t,e,n,r,a,s,u,l,c){for(r=u;r<l;++r)for(u=0;u<c;++u)a[s++]=o(n[i(t[e++])])},t[e]=function(e,n,a,s,u,l,c){var h=8>>e.b,f=e.Ea,d=e.K[0],p=e.w;if(8>h)for(e=(1<<e.b)-1,p=(1<<h)-1;n<a;++n){var g,m=0;for(g=0;g<f;++g)g&e||(m=i(s[u++])),l[c++]=o(d[m&p]),m>>=h}else t["VP8LMapColor"+r](s,u,d,p,l,c,n,a,f)}}function K(t,e,n,r,i){for(n=e+n;e<n;){var o=t[e++];r[i++]=o>>16&255,r[i++]=o>>8&255,r[i++]=o>>0&255}}function $(t,e,n,r,i){for(n=e+n;e<n;){var o=t[e++];r[i++]=o>>16&255,r[i++]=o>>8&255,r[i++]=o>>0&255,r[i++]=o>>24&255}}function Z(t,e,n,r,i){for(n=e+n;e<n;){var o=(a=t[e++])>>16&240|a>>12&15,a=a>>0&240|a>>28&15;r[i++]=o,r[i++]=a}}function Q(t,e,n,r,i){for(n=e+n;e<n;){var o=(a=t[e++])>>16&248|a>>13&7,a=a>>5&224|a>>3&31;r[i++]=o,r[i++]=a}}function tt(t,e,n,r,i){for(n=e+n;e<n;){var o=t[e++];r[i++]=o>>0&255,r[i++]=o>>8&255,r[i++]=o>>16&255}}function et(t,e,n,i,o,a){if(0==a)for(n=e+n;e<n;)P(i,((a=t[e++])[0]>>24|a[1]>>8&65280|a[2]<<8&16711680|a[3]<<24)>>>0),o+=32;else r(i,o,t,e,n)}function nt(e,n){t[n][0]=t[e+"0"],t[n][1]=t[e+"1"],t[n][2]=t[e+"2"],t[n][3]=t[e+"3"],t[n][4]=t[e+"4"],t[n][5]=t[e+"5"],t[n][6]=t[e+"6"],t[n][7]=t[e+"7"],t[n][8]=t[e+"8"],t[n][9]=t[e+"9"],t[n][10]=t[e+"10"],t[n][11]=t[e+"11"],t[n][12]=t[e+"12"],t[n][13]=t[e+"13"],t[n][14]=t[e+"0"],t[n][15]=t[e+"0"]}function rt(t){return t==Hr||t==Wr||t==Vr||t==Gr}function it(){this.eb=[],this.size=this.A=this.fb=0}function ot(){this.y=[],this.f=[],this.ea=[],this.F=[],this.Tc=this.Ed=this.Cd=this.Fd=this.lb=this.Db=this.Ab=this.fa=this.J=this.W=this.N=this.O=0}function at(){this.Rd=this.height=this.width=this.S=0,this.f={},this.f.RGBA=new it,this.f.kb=new ot,this.sd=null}function st(){this.width=[0],this.height=[0],this.Pd=[0],this.Qd=[0],this.format=[0]}function ut(){this.Id=this.fd=this.Md=this.hb=this.ib=this.da=this.bd=this.cd=this.j=this.v=this.Da=this.Sd=this.ob=0}function lt(t){return alert("todo:WebPSamplerProcessPlane"),t.T}function ct(t,e){var n=t.T,i=e.ba.f.RGBA,o=i.eb,a=i.fb+t.ka*i.A,s=vi[e.ba.S],u=t.y,l=t.O,c=t.f,h=t.N,f=t.ea,d=t.W,p=e.cc,g=e.dc,m=e.Mc,v=e.Nc,y=t.ka,b=t.ka+t.T,w=t.U,A=w+1>>1;for(0==y?s(u,l,null,null,c,h,f,d,c,h,f,d,o,a,null,null,w):(s(e.ec,e.fc,u,l,p,g,m,v,c,h,f,d,o,a-i.A,o,a,w),++n);y+2<b;y+=2)p=c,g=h,m=f,v=d,h+=t.Rc,d+=t.Rc,a+=2*i.A,s(u,(l+=2*t.fa)-t.fa,u,l,p,g,m,v,c,h,f,d,o,a-i.A,o,a,w);return l+=t.fa,t.j+b<t.o?(r(e.ec,e.fc,u,l,w),r(e.cc,e.dc,c,h,A),r(e.Mc,e.Nc,f,d,A),n--):1&b||s(u,l,null,null,c,h,f,d,c,h,f,d,o,a+i.A,null,null,w),n}function ht(t,n,r){var i=t.F,o=[t.J];if(null!=i){var a=t.U,s=n.ba.S,u=s==qr||s==Vr;n=n.ba.f.RGBA;var l=[0],c=t.ka;l[0]=t.T,t.Kb&&(0==c?--l[0]:(--c,o[0]-=t.width),t.j+t.ka+t.T==t.o&&(l[0]=t.o-t.j-c));var h=n.eb;c=n.fb+c*n.A,t=Lr(i,o[0],t.width,a,l,h,c+(u?0:3),n.A),e(r==l),t&&rt(s)&&_r(h,c,u,a,l,n.A)}return 0}function ft(t){var e=t.ma,n=e.ba.S,r=11>n,i=n==jr||n==Dr||n==qr||n==zr||12==n||rt(n);if(e.memory=null,e.Ib=null,e.Jb=null,e.Nd=null,!On(e.Oa,t,i?11:12))return 0;if(i&&rt(n)&&bn(),t.da)alert("todo:use_scaling");else{if(r){if(e.Ib=lt,t.Kb){if(n=t.U+1>>1,e.memory=o(t.U+2*n),null==e.memory)return 0;e.ec=e.memory,e.fc=0,e.cc=e.ec,e.dc=e.fc+t.U,e.Mc=e.cc,e.Nc=e.dc+n,e.Ib=ct,bn()}}else alert("todo:EmitYUV");i&&(e.Jb=ht,r&&vn())}if(r&&!Mi){for(t=0;256>t;++t)Bi[t]=89858*(t-128)+Ni>>Li,Ei[t]=-22014*(t-128)+Ni,Ti[t]=-45773*(t-128),Fi[t]=113618*(t-128)+Ni>>Li;for(t=ki;t<Ci;++t)e=76283*(t-16)+Ni>>Li,Oi[t-ki]=Vt(e,255),ji[t-ki]=Vt(e+8>>4,15);Mi=1}return 1}function dt(t){var n=t.ma,r=t.U,i=t.T;return e(!(1&t.ka)),0>=r||0>=i?0:(r=n.Ib(t,n),null!=n.Jb&&n.Jb(t,n,r),n.Dc+=r,1)}function pt(t){t.ma.memory=null}function gt(t,e,n,r){return 47!=b(t,8)?0:(e[0]=b(t,14)+1,n[0]=b(t,14)+1,r[0]=b(t,1),0!=b(t,3)?0:!t.h)}function mt(t,e){if(4>t)return t+1;var n=t-2>>1;return(2+(1&t)<<n)+b(e,n)+1}function vt(t,e){return 120<e?e-120:1<=(n=((n=Zr[e-1])>>4)*t+(8-(15&n)))?n:1;var n}function yt(t,e,n){var r=x(n),i=t[e+=255&r].g-8;return 0<i&&(S(n,n.u+8),r=x(n),e+=t[e].value,e+=r&(1<<i)-1),S(n,n.u+t[e].g),t[e].value}function bt(t,n,r){return r.g+=t.g,r.value+=t.value<<n>>>0,e(8>=r.g),t.g}function wt(t,n,r){var i=t.xc;return e((n=0==i?0:t.vc[t.md*(r>>i)+(n>>i)])<t.Wb),t.Ya[n]}function At(t,n,i,o){var a=t.ab,s=t.c*n,u=t.C;n=u+n;var l=i,c=o;for(o=t.Ta,i=t.Ua;0<a--;){var h=t.gc[a],f=u,d=n,p=l,g=c,m=(c=o,l=i,h.Ea);switch(e(f<d),e(d<=h.nc),h.hc){case 2:Yn(p,g,(d-f)*m,c,l);break;case 0:var v=f,y=d,b=c,w=l,A=(N=h).Ea;0==v&&(Vn(p,g,null,null,1,b,w),V(p,g+1,0,0,A-1,b,w+1),g+=A,w+=A,++v);for(var x=1<<N.b,_=x-1,S=j(A,N.b),L=N.K,N=N.w+(v>>N.b)*S;v<y;){var k=L,C=N,P=1;for(Gn(p,g,b,w-A,1,b,w);P<A;){var I=(P&~_)+x;I>A&&(I=A),(0,Zn[k[C++]>>8&15])(p,g+ +P,b,w+P-A,I-P,b,w+P),P=I}g+=A,w+=A,++v&_||(N+=S)}d!=h.nc&&r(c,l-m,c,l+(d-f-1)*m,m);break;case 1:for(m=p,y=g,A=(p=h.Ea)-(w=p&~(b=(g=1<<h.b)-1)),v=j(p,h.b),x=h.K,h=h.w+(f>>h.b)*v;f<d;){for(_=x,S=h,L=new q,N=y+w,k=y+p;y<N;)Y(_[S++],L),Qn(L,m,y,g,c,l),y+=g,l+=g;y<k&&(Y(_[S++],L),Qn(L,m,y,A,c,l),y+=A,l+=A),++f&b||(h+=v)}break;case 3:if(p==c&&g==l&&0<h.b){for(y=c,p=m=l+(d-f)*m-(w=(d-f)*j(h.Ea,h.b)),g=c,b=l,v=[],w=(A=w)-1;0<=w;--w)v[w]=g[b+w];for(w=A-1;0<=w;--w)y[p+w]=v[w];Xn(h,f,d,c,m,c,l)}else Xn(h,f,d,p,g,c,l)}l=o,c=i}c!=i&&r(o,i,l,c,s)}function xt(t,n){var r=t.V,i=t.Ba+t.c*t.C,o=n-t.C;if(e(n<=t.l.o),e(16>=o),0<o){var a=t.l,s=t.Ta,u=t.Ua,l=a.width;if(At(t,o,r,i),o=u=[u],e((r=t.C)<(i=n)),e(a.v<a.va),i>a.o&&(i=a.o),r<a.j){var c=a.j-r;r=a.j,o[0]+=c*l}if(r>=i?r=0:(o[0]+=4*a.v,a.ka=r-a.j,a.U=a.va-a.v,a.T=i-r,r=1),r){if(u=u[0],11>(r=t.ca).S){var h=r.f.RGBA,f=(i=r.S,o=a.U,a=a.T,c=h.eb,h.A),d=a;for(h=h.fb+t.Ma*h.A;0<d--;){var p=s,g=u,m=o,v=c,y=h;switch(i){case Or:tr(p,g,m,v,y);break;case jr:er(p,g,m,v,y);break;case Hr:er(p,g,m,v,y),_r(v,y,0,m,1,0);break;case Rr:ir(p,g,m,v,y);break;case Dr:et(p,g,m,v,y,1);break;case Wr:et(p,g,m,v,y,1),_r(v,y,0,m,1,0);break;case qr:et(p,g,m,v,y,0);break;case Vr:et(p,g,m,v,y,0),_r(v,y,1,m,1,0);break;case zr:nr(p,g,m,v,y);break;case Gr:nr(p,g,m,v,y),Sr(v,y,m,1,0);break;case Ur:rr(p,g,m,v,y);break;default:e(0)}u+=l,h+=f}t.Ma+=a}else alert("todo:EmitRescaledRowsYUVA");e(t.Ma<=r.height)}}t.C=n,e(t.C<=t.i)}function _t(t){var e;if(0<t.ua)return 0;for(e=0;e<t.Wb;++e){var n=t.Ya[e].G,r=t.Ya[e].H;if(0<n[1][r[1]+0].g||0<n[2][r[2]+0].g||0<n[3][r[3]+0].g)return 0}return 1}function St(t,n,r,i,o,a){if(0!=t.Z){var s=t.qd,u=t.rd;for(e(null!=mi[t.Z]);n<r;++n)mi[t.Z](s,u,i,o,i,o,a),s=i,u=o,o+=a;t.qd=s,t.rd=u}}function Lt(t,n){var r=t.l.ma,i=0==r.Z||1==r.Z?t.l.j:t.C;if(i=t.C<i?i:t.C,e(n<=t.l.o),n>i){var o=t.l.width,a=r.ca,s=r.tb+o*i,u=t.V,l=t.Ba+t.c*i,c=t.gc;e(1==t.ab),e(3==c[0].hc),Kn(c[0],i,n,u,l,a,s),St(r,i,n,a,s,o)}t.C=t.Ma=n}function Nt(t,n,r,i,o,a,s){var u=t.$/i,l=t.$%i,c=t.m,h=t.s,f=r+t.$,d=f;o=r+i*o;var p=r+i*a,g=280+h.ua,m=t.Pb?u:16777216,v=0<h.ua?h.Wa:null,y=h.wc,b=f<p?wt(h,l,u):null;e(t.C<a),e(p<=o);var w=!1;t:for(;;){for(;w||f<p;){var A=0;if(u>=m){var N=f-r;e((m=t).Pb),m.wd=m.m,m.xd=N,0<m.s.ua&&T(m.s.Wa,m.s.vb),m=u+ti}if(l&y||(b=wt(h,l,u)),e(null!=b),b.Qb&&(n[f]=b.qb,w=!0),!w)if(L(c),b.jc){A=c,N=n;var k=f,C=b.pd[x(A)&Dn-1];e(b.jc),256>C.g?(S(A,A.u+C.g),N[k]=C.value,A=0):(S(A,A.u+C.g-256),e(256<=C.value),A=C.value),0==A&&(w=!0)}else A=yt(b.G[0],b.H[0],c);if(c.h)break;if(w||256>A){if(!w)if(b.nd)n[f]=(b.qb|A<<8)>>>0;else{if(L(c),w=yt(b.G[1],b.H[1],c),L(c),N=yt(b.G[2],b.H[2],c),k=yt(b.G[3],b.H[3],c),c.h)break;n[f]=(k<<24|w<<16|A<<8|N)>>>0}if(w=!1,++f,++l>=i&&(l=0,++u,null!=s&&u<=a&&!(u%16)&&s(t,u),null!=v))for(;d<f;)A=n[d++],v.X[(506832829*A&4294967295)>>>v.Mb]=A}else if(280>A){if(A=mt(A-256,c),N=yt(b.G[4],b.H[4],c),L(c),N=vt(i,N=mt(N,c)),c.h)break;if(f-r<N||o-f<A)break t;for(k=0;k<A;++k)n[f+k]=n[f+k-N];for(f+=A,l+=A;l>=i;)l-=i,++u,null!=s&&u<=a&&!(u%16)&&s(t,u);if(e(f<=o),l&y&&(b=wt(h,l,u)),null!=v)for(;d<f;)A=n[d++],v.X[(506832829*A&4294967295)>>>v.Mb]=A}else{if(!(A<g))break t;for(w=A-280,e(null!=v);d<f;)A=n[d++],v.X[(506832829*A&4294967295)>>>v.Mb]=A;A=f,e(!(w>>>(N=v).Xa)),n[A]=N.X[w],w=!0}w||e(c.h==_(c))}if(t.Pb&&c.h&&f<o)e(t.m.h),t.a=5,t.m=t.wd,t.$=t.xd,0<t.s.ua&&T(t.s.vb,t.s.Wa);else{if(c.h)break t;null!=s&&s(t,u>a?a:u),t.a=0,t.$=f-r}return 1}return t.a=3,0}function kt(t){e(null!=t),t.vc=null,t.yc=null,t.Ya=null;var n=t.Wa;null!=n&&(n.X=null),t.vb=null,e(null!=t)}function Ct(){var e=new sn;return null==e?null:(e.a=0,e.xb=gi,nt("Predictor","VP8LPredictors"),nt("Predictor","VP8LPredictors_C"),nt("PredictorAdd","VP8LPredictorsAdd"),nt("PredictorAdd","VP8LPredictorsAdd_C"),Yn=G,Qn=X,tr=K,er=$,nr=Z,rr=Q,ir=tt,t.VP8LMapColor32b=Jn,t.VP8LMapColor8b=$n,e)}function Pt(t,n,r,s,u){var l=1,f=[t],p=[n],g=s.m,m=s.s,v=null,y=0;t:for(;;){if(r)for(;l&&b(g,1);){var w=f,A=p,_=s,N=1,k=_.m,C=_.gc[_.ab],P=b(k,2);if(_.Oc&1<<P)l=0;else{switch(_.Oc|=1<<P,C.hc=P,C.Ea=w[0],C.nc=A[0],C.K=[null],++_.ab,e(4>=_.ab),P){case 0:case 1:C.b=b(k,3)+2,N=Pt(j(C.Ea,C.b),j(C.nc,C.b),0,_,C.K),C.K=C.K[0];break;case 3:var I,M=b(k,8)+1,B=16<M?0:4<M?1:2<M?2:3;if(w[0]=j(C.Ea,B),C.b=B,I=N=Pt(M,1,0,_,C.K)){var T,E=M,O=C,D=1<<(8>>O.b),q=o(D);if(null==q)I=0;else{var z=O.K[0],U=O.w;for(q[0]=O.K[0][0],T=1;T<1*E;++T)q[T]=R(z[U+T],q[T-1]);for(;T<4*D;++T)q[T]=0;O.K[0]=null,O.K[0]=q,I=1}}N=I;break;case 2:break;default:e(0)}l=N}}if(f=f[0],p=p[0],l&&b(g,1)&&!(l=1<=(y=b(g,4))&&11>=y)){s.a=3;break t}var H;if(H=l)e:{var W,V,G,Y=s,X=f,J=p,K=y,$=r,Z=Y.m,Q=Y.s,tt=[null],et=1,nt=0,rt=Qr[K];n:for(;;){if($&&b(Z,1)){var it=b(Z,3)+2,ot=j(X,it),at=j(J,it),st=ot*at;if(!Pt(ot,at,0,Y,tt))break n;for(tt=tt[0],Q.xc=it,W=0;W<st;++W){var ut=tt[W]>>8&65535;tt[W]=ut,ut>=et&&(et=ut+1)}}if(Z.h)break n;for(V=0;5>V;++V){var lt=Jr[V];!V&&0<K&&(lt+=1<<K),nt<lt&&(nt=lt)}var ct=a(et*rt,h),ht=et,ft=a(ht,d);if(null==ft)var dt=null;else e(65536>=ht),dt=ft;var pt=o(nt);if(null==dt||null==pt||null==ct){Y.a=1;break n}var gt=ct;for(W=G=0;W<et;++W){var mt=dt[W],vt=mt.G,yt=mt.H,wt=0,At=1,xt=0;for(V=0;5>V;++V){lt=Jr[V],vt[V]=gt,yt[V]=G,!V&&0<K&&(lt+=1<<K);r:{var _t,St=lt,Lt=Y,Ct=pt,It=gt,Mt=G,Bt=0,Ft=Lt.m,Tt=b(Ft,1);if(i(Ct,0,0,St),Tt){var Et=b(Ft,1)+1,Ot=b(Ft,1),jt=b(Ft,0==Ot?1:8);Ct[jt]=1,2==Et&&(Ct[jt=b(Ft,8)]=1);var Rt=1}else{var Dt=o(19),qt=b(Ft,4)+4;if(19<qt){Lt.a=3;var zt=0;break r}for(_t=0;_t<qt;++_t)Dt[$r[_t]]=b(Ft,3);var Ut=void 0,Ht=void 0,Wt=Lt,Vt=Dt,Gt=St,Yt=Ct,Xt=0,Jt=Wt.m,Kt=8,$t=a(128,h);i:for(;c($t,0,7,Vt,19);){if(b(Jt,1)){var Zt=2+2*b(Jt,3);if((Ut=2+b(Jt,Zt))>Gt)break i}else Ut=Gt;for(Ht=0;Ht<Gt&&Ut--;){L(Jt);var Qt=$t[0+(127&x(Jt))];S(Jt,Jt.u+Qt.g);var te=Qt.value;if(16>te)Yt[Ht++]=te,0!=te&&(Kt=te);else{var ee=16==te,ne=te-16,re=Xr[ne],ie=b(Jt,Yr[ne])+re;if(Ht+ie>Gt)break i;for(var oe=ee?Kt:0;0<ie--;)Yt[Ht++]=oe}}Xt=1;break i}Xt||(Wt.a=3),Rt=Xt}(Rt=Rt&&!Ft.h)&&(Bt=c(It,Mt,8,Ct,St)),Rt&&0!=Bt?zt=Bt:(Lt.a=3,zt=0)}if(0==zt)break n;if(At&&1==Kr[V]&&(At=0==gt[G].g),wt+=gt[G].g,G+=zt,3>=V){var ae,se=pt[0];for(ae=1;ae<lt;++ae)pt[ae]>se&&(se=pt[ae]);xt+=se}}if(mt.nd=At,mt.Qb=0,At&&(mt.qb=(vt[3][yt[3]+0].value<<24|vt[1][yt[1]+0].value<<16|vt[2][yt[2]+0].value)>>>0,0==wt&&256>vt[0][yt[0]+0].value&&(mt.Qb=1,mt.qb+=vt[0][yt[0]+0].value<<8)),mt.jc=!mt.Qb&&6>xt,mt.jc){var ue,le=mt;for(ue=0;ue<Dn;++ue){var ce=ue,he=le.pd[ce],fe=le.G[0][le.H[0]+ce];256<=fe.value?(he.g=fe.g+256,he.value=fe.value):(he.g=0,he.value=0,ce>>=bt(fe,8,he),ce>>=bt(le.G[1][le.H[1]+ce],16,he),ce>>=bt(le.G[2][le.H[2]+ce],0,he),bt(le.G[3][le.H[3]+ce],24,he))}}}Q.vc=tt,Q.Wb=et,Q.Ya=dt,Q.yc=ct,H=1;break e}H=0}if(!(l=H)){s.a=3;break t}if(0<y){if(m.ua=1<<y,!F(m.Wa,y)){s.a=1,l=0;break t}}else m.ua=0;var de=s,pe=f,ge=p,me=de.s,ve=me.xc;if(de.c=pe,de.i=ge,me.md=j(pe,ve),me.wc=0==ve?-1:(1<<ve)-1,r){s.xb=pi;break t}if(null==(v=o(f*p))){s.a=1,l=0;break t}l=(l=Nt(s,v,0,f,p,p,null))&&!g.h;break t}return l?(null!=u?u[0]=v:(e(null==v),e(r)),s.$=0,r||kt(m)):kt(m),l}function It(t,n){var r=t.c*t.i,i=r+n+16*n;return e(t.c<=n),t.V=o(i),null==t.V?(t.Ta=null,t.Ua=0,t.a=1,0):(t.Ta=t.V,t.Ua=t.Ba+r+n,1)}function Mt(t,n){var r=t.C,i=n-r,o=t.V,a=t.Ba+t.c*r;for(e(n<=t.l.o);0<i;){var s=16<i?16:i,u=t.l.ma,l=t.l.width,c=l*s,h=u.ca,f=u.tb+l*r,d=t.Ta,p=t.Ua;At(t,s,o,a),Nr(d,p,h,f,c),St(u,r,r+s,h,f,l),i-=s,o+=s*t.c,r+=s}e(r==n),t.C=t.Ma=n}function Bt(){this.ub=this.yd=this.td=this.Rb=0}function Ft(){this.Kd=this.Ld=this.Ud=this.Td=this.i=this.c=0}function Tt(){this.Fb=this.Bb=this.Cb=0,this.Zb=o(4),this.Lb=o(4)}function Et(){this.Yb=function(){var t=[];return function t(e,n,r){for(var i=r[n],o=0;o<i&&(e.push(r.length>n+1?[]:0),!(r.length<n+1));o++)t(e[o],n+1,r)}(t,0,[3,11]),t}()}function Ot(){this.jb=o(3),this.Wc=s([4,8],Et),this.Xc=s([4,17],Et)}function jt(){this.Pc=this.wb=this.Tb=this.zd=0,this.vd=new o(4),this.od=new o(4)}function Rt(){this.ld=this.La=this.dd=this.tc=0}function Dt(){this.Na=this.la=0}function qt(){this.Sc=[0,0],this.Eb=[0,0],this.Qc=[0,0],this.ia=this.lc=0}function zt(){this.ad=o(384),this.Za=0,this.Ob=o(16),this.$b=this.Ad=this.ia=this.Gc=this.Hc=this.Dd=0}function Ut(){this.uc=this.M=this.Nb=0,this.wa=Array(new Rt),this.Y=0,this.ya=Array(new zt),this.aa=0,this.l=new Gt}function Ht(){this.y=o(16),this.f=o(8),this.ea=o(8)}function Wt(){this.cb=this.a=0,this.sc="",this.m=new w,this.Od=new Bt,this.Kc=new Ft,this.ed=new jt,this.Qa=new Tt,this.Ic=this.$c=this.Aa=0,this.D=new Ut,this.Xb=this.Va=this.Hb=this.zb=this.yb=this.Ub=this.za=0,this.Jc=a(8,w),this.ia=0,this.pb=a(4,qt),this.Pa=new Ot,this.Bd=this.kc=0,this.Ac=[],this.Bc=0,this.zc=[0,0,0,0],this.Gd=Array(new Ht),this.Hd=0,this.rb=Array(new Dt),this.sb=0,this.wa=Array(new Rt),this.Y=0,this.oc=[],this.pc=0,this.sa=[],this.ta=0,this.qa=[],this.ra=0,this.Ha=[],this.B=this.R=this.Ia=0,this.Ec=[],this.M=this.ja=this.Vb=this.Fc=0,this.ya=Array(new zt),this.L=this.aa=0,this.gd=s([4,2],Rt),this.ga=null,this.Fa=[],this.Cc=this.qc=this.P=0,this.Gb=[],this.Uc=0,this.mb=[],this.nb=0,this.rc=[],this.Ga=this.Vc=0}function Vt(t,e){return 0>t?0:t>e?e:t}function Gt(){this.T=this.U=this.ka=this.height=this.width=0,this.y=[],this.f=[],this.ea=[],this.Rc=this.fa=this.W=this.N=this.O=0,this.ma="void",this.put="VP8IoPutHook",this.ac="VP8IoSetupHook",this.bc="VP8IoTeardownHook",this.ha=this.Kb=0,this.data=[],this.hb=this.ib=this.da=this.o=this.j=this.va=this.v=this.Da=this.ob=this.w=0,this.F=[],this.J=0}function Yt(){var t=new Wt;return null!=t&&(t.a=0,t.sc="OK",t.cb=0,t.Xb=0,ri||(ri=$t)),t}function Xt(t,e,n){return 0==t.a&&(t.a=e,t.sc=n,t.cb=0),0}function Jt(t,e,n){return 3<=n&&157==t[e+0]&&1==t[e+1]&&42==t[e+2]}function Kt(t,n){if(null==t)return 0;if(t.a=0,t.sc="OK",null==n)return Xt(t,2,"null VP8Io passed to VP8GetHeaders()");var r=n.data,o=n.w,a=n.ha;if(4>a)return Xt(t,7,"Truncated header.");var s=r[o+0]|r[o+1]<<8|r[o+2]<<16,u=t.Od;if(u.Rb=!(1&s),u.td=s>>1&7,u.yd=s>>4&1,u.ub=s>>5,3<u.td)return Xt(t,3,"Incorrect keyframe parameters.");if(!u.yd)return Xt(t,4,"Frame not displayable.");o+=3,a-=3;var l=t.Kc;if(u.Rb){if(7>a)return Xt(t,7,"cannot parse picture header");if(!Jt(r,o,a))return Xt(t,3,"Bad code word");l.c=16383&(r[o+4]<<8|r[o+3]),l.Td=r[o+4]>>6,l.i=16383&(r[o+6]<<8|r[o+5]),l.Ud=r[o+6]>>6,o+=7,a-=7,t.za=l.c+15>>4,t.Ub=l.i+15>>4,n.width=l.c,n.height=l.i,n.Da=0,n.j=0,n.v=0,n.va=n.width,n.o=n.height,n.da=0,n.ib=n.width,n.hb=n.height,n.U=n.width,n.T=n.height,i((s=t.Pa).jb,0,255,s.jb.length),e(null!=(s=t.Qa)),s.Cb=0,s.Bb=0,s.Fb=1,i(s.Zb,0,0,s.Zb.length),i(s.Lb,0,0,s.Lb)}if(u.ub>a)return Xt(t,7,"bad partition length");p(s=t.m,r,o,u.ub),o+=u.ub,a-=u.ub,u.Rb&&(l.Ld=k(s),l.Kd=k(s)),l=t.Qa;var c,h=t.Pa;if(e(null!=s),e(null!=l),l.Cb=k(s),l.Cb){if(l.Bb=k(s),k(s)){for(l.Fb=k(s),c=0;4>c;++c)l.Zb[c]=k(s)?m(s,7):0;for(c=0;4>c;++c)l.Lb[c]=k(s)?m(s,6):0}if(l.Bb)for(c=0;3>c;++c)h.jb[c]=k(s)?g(s,8):255}else l.Bb=0;if(s.Ka)return Xt(t,3,"cannot parse segment header");if((l=t.ed).zd=k(s),l.Tb=g(s,6),l.wb=g(s,3),l.Pc=k(s),l.Pc&&k(s)){for(h=0;4>h;++h)k(s)&&(l.vd[h]=m(s,6));for(h=0;4>h;++h)k(s)&&(l.od[h]=m(s,6))}if(t.L=0==l.Tb?0:l.zd?1:2,s.Ka)return Xt(t,3,"cannot parse filter header");var f=a;if(a=c=o,o=c+f,l=f,t.Xb=(1<<g(t.m,2))-1,f<3*(h=t.Xb))r=7;else{for(c+=3*h,l-=3*h,f=0;f<h;++f){var d=r[a+0]|r[a+1]<<8|r[a+2]<<16;d>l&&(d=l),p(t.Jc[+f],r,c,d),c+=d,l-=d,a+=3}p(t.Jc[+h],r,c,l),r=c<o?0:5}if(0!=r)return Xt(t,r,"cannot parse partitions");for(r=g(c=t.m,7),a=k(c)?m(c,4):0,o=k(c)?m(c,4):0,l=k(c)?m(c,4):0,h=k(c)?m(c,4):0,c=k(c)?m(c,4):0,f=t.Qa,d=0;4>d;++d){if(f.Cb){var v=f.Zb[d];f.Fb||(v+=r)}else{if(0<d){t.pb[d]=t.pb[0];continue}v=r}var y=t.pb[d];y.Sc[0]=ei[Vt(v+a,127)],y.Sc[1]=ni[Vt(v+0,127)],y.Eb[0]=2*ei[Vt(v+o,127)],y.Eb[1]=101581*ni[Vt(v+l,127)]>>16,8>y.Eb[1]&&(y.Eb[1]=8),y.Qc[0]=ei[Vt(v+h,117)],y.Qc[1]=ni[Vt(v+c,127)],y.lc=v+c}if(!u.Rb)return Xt(t,4,"Not a key frame.");for(k(s),u=t.Pa,r=0;4>r;++r){for(a=0;8>a;++a)for(o=0;3>o;++o)for(l=0;11>l;++l)h=C(s,li[r][a][o][l])?g(s,8):si[r][a][o][l],u.Wc[r][a].Yb[o][l]=h;for(a=0;17>a;++a)u.Xc[r][a]=u.Wc[r][ci[a]]}return t.kc=k(s),t.kc&&(t.Bd=g(s,8)),t.cb=1}function $t(t,e,n,r,i,o,a){var s=e[i].Yb[n];for(n=0;16>i;++i){if(!C(t,s[n+0]))return i;for(;!C(t,s[n+1]);)if(s=e[++i].Yb[0],n=0,16==i)return 16;var u=e[i+1].Yb;if(C(t,s[n+2])){var l=t,c=0;if(C(l,(f=s)[(h=n)+3]))if(C(l,f[h+6])){for(s=0,h=2*(c=C(l,f[h+8]))+(f=C(l,f[h+9+c])),c=0,f=ii[h];f[s];++s)c+=c+C(l,f[s]);c+=3+(8<<h)}else C(l,f[h+7])?(c=7+2*C(l,165),c+=C(l,145)):c=5+C(l,159);else c=C(l,f[h+4])?3+C(l,f[h+5]):2;s=u[2]}else c=1,s=u[1];u=a+oi[i],0>(l=t).b&&N(l);var h,f=l.b,d=(h=l.Ca>>1)-(l.I>>f)>>31;--l.b,l.Ca+=d,l.Ca|=1,l.I-=(h+1&d)<<f,o[u]=((c^d)-d)*r[(0<i)+0]}return 16}function Zt(t){var e=t.rb[t.sb-1];e.la=0,e.Na=0,i(t.zc,0,0,t.zc.length),t.ja=0}function Qt(t,n){if(null==t)return 0;if(null==n)return Xt(t,2,"NULL VP8Io parameter in VP8Decode().");if(!t.cb&&!Kt(t,n))return 0;if(e(t.cb),null==n.ac||n.ac(n)){n.ob&&(t.L=0);var s=Di[t.L];if(2==t.L?(t.yb=0,t.zb=0):(t.yb=n.v-s>>4,t.zb=n.j-s>>4,0>t.yb&&(t.yb=0),0>t.zb&&(t.zb=0)),t.Va=n.o+15+s>>4,t.Hb=n.va+15+s>>4,t.Hb>t.za&&(t.Hb=t.za),t.Va>t.Ub&&(t.Va=t.Ub),0<t.L){var u=t.ed;for(s=0;4>s;++s){var l;if(t.Qa.Cb){var c=t.Qa.Lb[s];t.Qa.Fb||(c+=u.Tb)}else c=u.Tb;for(l=0;1>=l;++l){var h=t.gd[s][l],f=c;if(u.Pc&&(f+=u.vd[0],l&&(f+=u.od[0])),0<(f=0>f?0:63<f?63:f)){var d=f;0<u.wb&&(d=4<u.wb?d>>2:d>>1)>9-u.wb&&(d=9-u.wb),1>d&&(d=1),h.dd=d,h.tc=2*f+d,h.ld=40<=f?2:15<=f?1:0}else h.tc=0;h.La=l}}}s=0}else Xt(t,6,"Frame setup failed"),s=t.a;if(s=0==s){if(s){t.$c=0,0<t.Aa||(t.Ic=zi);t:{s=t.Ic,u=4*(d=t.za);var p=32*d,g=d+1,m=0<t.L?d*(0<t.Aa?2:1):0,v=(2==t.Aa?2:1)*d;if((h=u+832+(l=3*(16*s+Di[t.L])/2*p)+(c=null!=t.Fa&&0<t.Fa.length?t.Kc.c*t.Kc.i:0))!=h)s=0;else{if(h>t.Vb){if(t.Vb=0,t.Ec=o(h),t.Fc=0,null==t.Ec){s=Xt(t,1,"no memory during frame initialization.");break t}t.Vb=h}h=t.Ec,f=t.Fc,t.Ac=h,t.Bc=f,f+=u,t.Gd=a(p,Ht),t.Hd=0,t.rb=a(g+1,Dt),t.sb=1,t.wa=m?a(m,Rt):null,t.Y=0,t.D.Nb=0,t.D.wa=t.wa,t.D.Y=t.Y,0<t.Aa&&(t.D.Y+=d),e(!0),t.oc=h,t.pc=f,f+=832,t.ya=a(v,zt),t.aa=0,t.D.ya=t.ya,t.D.aa=t.aa,2==t.Aa&&(t.D.aa+=d),t.R=16*d,t.B=8*d,d=(p=Di[t.L])*t.R,p=p/2*t.B,t.sa=h,t.ta=f+d,t.qa=t.sa,t.ra=t.ta+16*s*t.R+p,t.Ha=t.qa,t.Ia=t.ra+8*s*t.B+p,t.$c=0,f+=l,t.mb=c?h:null,t.nb=c?f:null,e(f+c<=t.Fc+t.Vb),Zt(t),i(t.Ac,t.Bc,0,u),s=1}}if(s){if(n.ka=0,n.y=t.sa,n.O=t.ta,n.f=t.qa,n.N=t.ra,n.ea=t.Ha,n.Vd=t.Ia,n.fa=t.R,n.Rc=t.B,n.F=null,n.J=0,!Mr){for(s=-255;255>=s;++s)kr[255+s]=0>s?-s:s;for(s=-1020;1020>=s;++s)Cr[1020+s]=-128>s?-128:127<s?127:s;for(s=-112;112>=s;++s)Pr[112+s]=-16>s?-16:15<s?15:s;for(s=-255;510>=s;++s)Ir[255+s]=0>s?0:255<s?255:s;Mr=1}or=le,ar=oe,ur=ae,lr=se,cr=ue,sr=ie,hr=Xe,fr=Je,dr=Ze,pr=Qe,gr=Ke,mr=$e,vr=tn,yr=en,br=Ue,wr=He,Ar=We,xr=Ve,fi[0]=Se,fi[1]=he,fi[2]=xe,fi[3]=_e,fi[4]=Le,fi[5]=ke,fi[6]=Ne,fi[7]=Ce,fi[8]=Ie,fi[9]=Pe,hi[0]=ve,hi[1]=de,hi[2]=pe,hi[3]=ge,hi[4]=ye,hi[5]=be,hi[6]=we,di[0]=Te,di[1]=fe,di[2]=Me,di[3]=Be,di[4]=Oe,di[5]=Ee,di[6]=je,s=1}else s=0}s&&(s=function(t,n){for(t.M=0;t.M<t.Va;++t.M){var a,s=t.Jc[t.M&t.Xb],u=t.m,l=t;for(a=0;a<l.za;++a){var c=u,h=l,f=h.Ac,d=h.Bc+4*a,p=h.zc,g=h.ya[h.aa+a];if(h.Qa.Bb?g.$b=C(c,h.Pa.jb[0])?2+C(c,h.Pa.jb[2]):C(c,h.Pa.jb[1]):g.$b=0,h.kc&&(g.Ad=C(c,h.Bd)),g.Za=!C(c,145)+0,g.Za){var m=g.Ob,v=0;for(h=0;4>h;++h){var y,b=p[0+h];for(y=0;4>y;++y){b=ui[f[d+y]][b];for(var w=ai[C(c,b[0])];0<w;)w=ai[2*w+C(c,b[w])];b=-w,f[d+y]=b}r(m,v,f,d,4),v+=4,p[0+h]=b}}else b=C(c,156)?C(c,128)?1:3:C(c,163)?2:0,g.Ob[0]=b,i(f,d,b,4),i(p,0,b,4);g.Dd=C(c,142)?C(c,114)?C(c,183)?1:3:2:0}if(l.m.Ka)return Xt(t,7,"Premature end-of-partition0 encountered.");for(;t.ja<t.za;++t.ja){if(l=s,c=(u=t).rb[u.sb-1],f=u.rb[u.sb+u.ja],a=u.ya[u.aa+u.ja],d=u.kc?a.Ad:0)c.la=f.la=0,a.Za||(c.Na=f.Na=0),a.Hc=0,a.Gc=0,a.ia=0;else{var A,x;if(c=f,f=l,d=u.Pa.Xc,p=u.ya[u.aa+u.ja],g=u.pb[p.$b],h=p.ad,m=0,v=u.rb[u.sb-1],b=y=0,i(h,m,0,384),p.Za)var _=0,S=d[3];else{w=o(16);var L=c.Na+v.Na;if(L=ri(f,d[1],L,g.Eb,0,w,0),c.Na=v.Na=(0<L)+0,1<L)or(w,0,h,m);else{var N=w[0]+3>>3;for(w=0;256>w;w+=16)h[m+w]=N}_=1,S=d[0]}var k=15&c.la,P=15&v.la;for(w=0;4>w;++w){var I=1&P;for(N=x=0;4>N;++N)k=k>>1|(I=(L=ri(f,S,L=I+(1&k),g.Sc,_,h,m))>_)<<7,x=x<<2|(3<L?3:1<L?2:0!=h[m+0]),m+=16;k>>=4,P=P>>1|I<<7,y=(y<<8|x)>>>0}for(S=k,_=P>>4,A=0;4>A;A+=2){for(x=0,k=c.la>>4+A,P=v.la>>4+A,w=0;2>w;++w){for(I=1&P,N=0;2>N;++N)L=I+(1&k),k=k>>1|(I=0<(L=ri(f,d[2],L,g.Qc,0,h,m)))<<3,x=x<<2|(3<L?3:1<L?2:0!=h[m+0]),m+=16;k>>=2,P=P>>1|I<<5}b|=x<<4*A,S|=k<<4<<A,_|=(240&P)<<A}c.la=S,v.la=_,p.Hc=y,p.Gc=b,p.ia=43690&b?0:g.ia,d=!(y|b)}if(0<u.L&&(u.wa[u.Y+u.ja]=u.gd[a.$b][a.Za],u.wa[u.Y+u.ja].La|=!d),l.Ka)return Xt(t,7,"Premature end-of-file encountered.")}if(Zt(t),u=n,l=1,a=(s=t).D,c=0<s.L&&s.M>=s.zb&&s.M<=s.Va,0==s.Aa)t:{if(a.M=s.M,a.uc=c,Tn(s,a),l=1,a=(x=s.D).Nb,c=(b=Di[s.L])*s.R,f=b/2*s.B,w=16*a*s.R,N=8*a*s.B,d=s.sa,p=s.ta-c+w,g=s.qa,h=s.ra-f+N,m=s.Ha,v=s.Ia-f+N,P=0==(k=x.M),y=k>=s.Va-1,2==s.Aa&&Tn(s,x),x.uc)for(I=(L=s).D.M,e(L.D.uc),x=L.yb;x<L.Hb;++x){_=x,S=I;var M=(B=(z=L).D).Nb;A=z.R;var B=B.wa[B.Y+_],F=z.sa,T=z.ta+16*M*A+16*_,E=B.dd,O=B.tc;if(0!=O)if(e(3<=O),1==z.L)0<_&&wr(F,T,A,O+4),B.La&&xr(F,T,A,O),0<S&&br(F,T,A,O+4),B.La&&Ar(F,T,A,O);else{var j=z.B,R=z.qa,D=z.ra+8*M*j+8*_,q=z.Ha,z=z.Ia+8*M*j+8*_;M=B.ld,0<_&&(fr(F,T,A,O+4,E,M),pr(R,D,q,z,j,O+4,E,M)),B.La&&(mr(F,T,A,O,E,M),yr(R,D,q,z,j,O,E,M)),0<S&&(hr(F,T,A,O+4,E,M),dr(R,D,q,z,j,O+4,E,M)),B.La&&(gr(F,T,A,O,E,M),vr(R,D,q,z,j,O,E,M))}}if(s.ia&&alert("todo:DitherRow"),null!=u.put){if(x=16*k,k=16*(k+1),P?(u.y=s.sa,u.O=s.ta+w,u.f=s.qa,u.N=s.ra+N,u.ea=s.Ha,u.W=s.Ia+N):(x-=b,u.y=d,u.O=p,u.f=g,u.N=h,u.ea=m,u.W=v),y||(k-=b),k>u.o&&(k=u.o),u.F=null,u.J=null,null!=s.Fa&&0<s.Fa.length&&x<k&&(u.J=fn(s,u,x,k-x),u.F=s.mb,null==u.F&&0==u.F.length)){l=Xt(s,3,"Could not decode alpha data.");break t}x<u.j&&(b=u.j-x,x=u.j,e(!(1&b)),u.O+=s.R*b,u.N+=s.B*(b>>1),u.W+=s.B*(b>>1),null!=u.F&&(u.J+=u.width*b)),x<k&&(u.O+=u.v,u.N+=u.v>>1,u.W+=u.v>>1,null!=u.F&&(u.J+=u.v),u.ka=x-u.j,u.U=u.va-u.v,u.T=k-x,l=u.put(u))}a+1!=s.Ic||y||(r(s.sa,s.ta-c,d,p+16*s.R,c),r(s.qa,s.ra-f,g,h+8*s.B,f),r(s.Ha,s.Ia-f,m,v+8*s.B,f))}if(!l)return Xt(t,6,"Output aborted.")}return 1}(t,n)),null!=n.bc&&n.bc(n),s&=1}return s?(t.cb=0,s):0}function te(t,e,n,r,i){i=t[e+n+32*r]+(i>>3),t[e+n+32*r]=-256&i?0>i?0:255:i}function ee(t,e,n,r,i,o){te(t,e,0,n,r+i),te(t,e,1,n,r+o),te(t,e,2,n,r-o),te(t,e,3,n,r-i)}function ne(t){return(20091*t>>16)+t}function re(t,e,n,r){var i,a=0,s=o(16);for(i=0;4>i;++i){var u=t[e+0]+t[e+8],l=t[e+0]-t[e+8],c=(35468*t[e+4]>>16)-ne(t[e+12]),h=ne(t[e+4])+(35468*t[e+12]>>16);s[a+0]=u+h,s[a+1]=l+c,s[a+2]=l-c,s[a+3]=u-h,a+=4,e++}for(i=a=0;4>i;++i)u=(t=s[a+0]+4)+s[a+8],l=t-s[a+8],c=(35468*s[a+4]>>16)-ne(s[a+12]),te(n,r,0,0,u+(h=ne(s[a+4])+(35468*s[a+12]>>16))),te(n,r,1,0,l+c),te(n,r,2,0,l-c),te(n,r,3,0,u-h),a++,r+=32}function ie(t,e,n,r){var i=t[e+0]+4,o=35468*t[e+4]>>16,a=ne(t[e+4]),s=35468*t[e+1]>>16;ee(n,r,0,i+a,t=ne(t[e+1]),s),ee(n,r,1,i+o,t,s),ee(n,r,2,i-o,t,s),ee(n,r,3,i-a,t,s)}function oe(t,e,n,r,i){re(t,e,n,r),i&&re(t,e+16,n,r+4)}function ae(t,e,n,r){ar(t,e+0,n,r,1),ar(t,e+32,n,r+128,1)}function se(t,e,n,r){var i;for(t=t[e+0]+4,i=0;4>i;++i)for(e=0;4>e;++e)te(n,r,e,i,t)}function ue(t,e,n,r){t[e+0]&&lr(t,e+0,n,r),t[e+16]&&lr(t,e+16,n,r+4),t[e+32]&&lr(t,e+32,n,r+128),t[e+48]&&lr(t,e+48,n,r+128+4)}function le(t,e,n,r){var i,a=o(16);for(i=0;4>i;++i){var s=t[e+0+i]+t[e+12+i],u=t[e+4+i]+t[e+8+i],l=t[e+4+i]-t[e+8+i],c=t[e+0+i]-t[e+12+i];a[0+i]=s+u,a[8+i]=s-u,a[4+i]=c+l,a[12+i]=c-l}for(i=0;4>i;++i)s=(t=a[0+4*i]+3)+a[3+4*i],u=a[1+4*i]+a[2+4*i],l=a[1+4*i]-a[2+4*i],c=t-a[3+4*i],n[r+0]=s+u>>3,n[r+16]=c+l>>3,n[r+32]=s-u>>3,n[r+48]=c-l>>3,r+=64}function ce(t,e,n){var r,i=e-32,o=Tr,a=255-t[i-1];for(r=0;r<n;++r){var s,u=o,l=a+t[e-1];for(s=0;s<n;++s)t[e+s]=u[l+t[i+s]];e+=32}}function he(t,e){ce(t,e,4)}function fe(t,e){ce(t,e,8)}function de(t,e){ce(t,e,16)}function pe(t,e){var n;for(n=0;16>n;++n)r(t,e+32*n,t,e-32,16)}function ge(t,e){var n;for(n=16;0<n;--n)i(t,e,t[e-1],16),e+=32}function me(t,e,n){var r;for(r=0;16>r;++r)i(e,n+32*r,t,16)}function ve(t,e){var n,r=16;for(n=0;16>n;++n)r+=t[e-1+32*n]+t[e+n-32];me(r>>5,t,e)}function ye(t,e){var n,r=8;for(n=0;16>n;++n)r+=t[e-1+32*n];me(r>>4,t,e)}function be(t,e){var n,r=8;for(n=0;16>n;++n)r+=t[e+n-32];me(r>>4,t,e)}function we(t,e){me(128,t,e)}function Ae(t,e,n){return t+2*e+n+2>>2}function xe(t,e){var n,i=e-32;for(i=new Uint8Array([Ae(t[i-1],t[i+0],t[i+1]),Ae(t[i+0],t[i+1],t[i+2]),Ae(t[i+1],t[i+2],t[i+3]),Ae(t[i+2],t[i+3],t[i+4])]),n=0;4>n;++n)r(t,e+32*n,i,0,i.length)}function _e(t,e){var n=t[e-1],r=t[e-1+32],i=t[e-1+64],o=t[e-1+96];P(t,e+0,16843009*Ae(t[e-1-32],n,r)),P(t,e+32,16843009*Ae(n,r,i)),P(t,e+64,16843009*Ae(r,i,o)),P(t,e+96,16843009*Ae(i,o,o))}function Se(t,e){var n,r=4;for(n=0;4>n;++n)r+=t[e+n-32]+t[e-1+32*n];for(r>>=3,n=0;4>n;++n)i(t,e+32*n,r,4)}function Le(t,e){var n=t[e-1+0],r=t[e-1+32],i=t[e-1+64],o=t[e-1-32],a=t[e+0-32],s=t[e+1-32],u=t[e+2-32],l=t[e+3-32];t[e+0+96]=Ae(r,i,t[e-1+96]),t[e+1+96]=t[e+0+64]=Ae(n,r,i),t[e+2+96]=t[e+1+64]=t[e+0+32]=Ae(o,n,r),t[e+3+96]=t[e+2+64]=t[e+1+32]=t[e+0+0]=Ae(a,o,n),t[e+3+64]=t[e+2+32]=t[e+1+0]=Ae(s,a,o),t[e+3+32]=t[e+2+0]=Ae(u,s,a),t[e+3+0]=Ae(l,u,s)}function Ne(t,e){var n=t[e+1-32],r=t[e+2-32],i=t[e+3-32],o=t[e+4-32],a=t[e+5-32],s=t[e+6-32],u=t[e+7-32];t[e+0+0]=Ae(t[e+0-32],n,r),t[e+1+0]=t[e+0+32]=Ae(n,r,i),t[e+2+0]=t[e+1+32]=t[e+0+64]=Ae(r,i,o),t[e+3+0]=t[e+2+32]=t[e+1+64]=t[e+0+96]=Ae(i,o,a),t[e+3+32]=t[e+2+64]=t[e+1+96]=Ae(o,a,s),t[e+3+64]=t[e+2+96]=Ae(a,s,u),t[e+3+96]=Ae(s,u,u)}function ke(t,e){var n=t[e-1+0],r=t[e-1+32],i=t[e-1+64],o=t[e-1-32],a=t[e+0-32],s=t[e+1-32],u=t[e+2-32],l=t[e+3-32];t[e+0+0]=t[e+1+64]=o+a+1>>1,t[e+1+0]=t[e+2+64]=a+s+1>>1,t[e+2+0]=t[e+3+64]=s+u+1>>1,t[e+3+0]=u+l+1>>1,t[e+0+96]=Ae(i,r,n),t[e+0+64]=Ae(r,n,o),t[e+0+32]=t[e+1+96]=Ae(n,o,a),t[e+1+32]=t[e+2+96]=Ae(o,a,s),t[e+2+32]=t[e+3+96]=Ae(a,s,u),t[e+3+32]=Ae(s,u,l)}function Ce(t,e){var n=t[e+0-32],r=t[e+1-32],i=t[e+2-32],o=t[e+3-32],a=t[e+4-32],s=t[e+5-32],u=t[e+6-32],l=t[e+7-32];t[e+0+0]=n+r+1>>1,t[e+1+0]=t[e+0+64]=r+i+1>>1,t[e+2+0]=t[e+1+64]=i+o+1>>1,t[e+3+0]=t[e+2+64]=o+a+1>>1,t[e+0+32]=Ae(n,r,i),t[e+1+32]=t[e+0+96]=Ae(r,i,o),t[e+2+32]=t[e+1+96]=Ae(i,o,a),t[e+3+32]=t[e+2+96]=Ae(o,a,s),t[e+3+64]=Ae(a,s,u),t[e+3+96]=Ae(s,u,l)}function Pe(t,e){var n=t[e-1+0],r=t[e-1+32],i=t[e-1+64],o=t[e-1+96];t[e+0+0]=n+r+1>>1,t[e+2+0]=t[e+0+32]=r+i+1>>1,t[e+2+32]=t[e+0+64]=i+o+1>>1,t[e+1+0]=Ae(n,r,i),t[e+3+0]=t[e+1+32]=Ae(r,i,o),t[e+3+32]=t[e+1+64]=Ae(i,o,o),t[e+3+64]=t[e+2+64]=t[e+0+96]=t[e+1+96]=t[e+2+96]=t[e+3+96]=o}function Ie(t,e){var n=t[e-1+0],r=t[e-1+32],i=t[e-1+64],o=t[e-1+96],a=t[e-1-32],s=t[e+0-32],u=t[e+1-32],l=t[e+2-32];t[e+0+0]=t[e+2+32]=n+a+1>>1,t[e+0+32]=t[e+2+64]=r+n+1>>1,t[e+0+64]=t[e+2+96]=i+r+1>>1,t[e+0+96]=o+i+1>>1,t[e+3+0]=Ae(s,u,l),t[e+2+0]=Ae(a,s,u),t[e+1+0]=t[e+3+32]=Ae(n,a,s),t[e+1+32]=t[e+3+64]=Ae(r,n,a),t[e+1+64]=t[e+3+96]=Ae(i,r,n),t[e+1+96]=Ae(o,i,r)}function Me(t,e){var n;for(n=0;8>n;++n)r(t,e+32*n,t,e-32,8)}function Be(t,e){var n;for(n=0;8>n;++n)i(t,e,t[e-1],8),e+=32}function Fe(t,e,n){var r;for(r=0;8>r;++r)i(e,n+32*r,t,8)}function Te(t,e){var n,r=8;for(n=0;8>n;++n)r+=t[e+n-32]+t[e-1+32*n];Fe(r>>4,t,e)}function Ee(t,e){var n,r=4;for(n=0;8>n;++n)r+=t[e+n-32];Fe(r>>3,t,e)}function Oe(t,e){var n,r=4;for(n=0;8>n;++n)r+=t[e-1+32*n];Fe(r>>3,t,e)}function je(t,e){Fe(128,t,e)}function Re(t,e,n){var r=t[e-n],i=t[e+0],o=3*(i-r)+Br[1020+t[e-2*n]-t[e+n]],a=Fr[112+(o+4>>3)];t[e-n]=Tr[255+r+Fr[112+(o+3>>3)]],t[e+0]=Tr[255+i-a]}function De(t,e,n,r){var i=t[e+0],o=t[e+n];return Er[255+t[e-2*n]-t[e-n]]>r||Er[255+o-i]>r}function qe(t,e,n,r){return 4*Er[255+t[e-n]-t[e+0]]+Er[255+t[e-2*n]-t[e+n]]<=r}function ze(t,e,n,r,i){var o=t[e-3*n],a=t[e-2*n],s=t[e-n],u=t[e+0],l=t[e+n],c=t[e+2*n],h=t[e+3*n];return 4*Er[255+s-u]+Er[255+a-l]>r?0:Er[255+t[e-4*n]-o]<=i&&Er[255+o-a]<=i&&Er[255+a-s]<=i&&Er[255+h-c]<=i&&Er[255+c-l]<=i&&Er[255+l-u]<=i}function Ue(t,e,n,r){var i=2*r+1;for(r=0;16>r;++r)qe(t,e+r,n,i)&&Re(t,e+r,n)}function He(t,e,n,r){var i=2*r+1;for(r=0;16>r;++r)qe(t,e+r*n,1,i)&&Re(t,e+r*n,1)}function We(t,e,n,r){var i;for(i=3;0<i;--i)Ue(t,e+=4*n,n,r)}function Ve(t,e,n,r){var i;for(i=3;0<i;--i)He(t,e+=4,n,r)}function Ge(t,e,n,r,i,o,a,s){for(o=2*o+1;0<i--;){if(ze(t,e,n,o,a))if(De(t,e,n,s))Re(t,e,n);else{var u=t,l=e,c=n,h=u[l-2*c],f=u[l-c],d=u[l+0],p=u[l+c],g=u[l+2*c],m=27*(y=Br[1020+3*(d-f)+Br[1020+h-p]])+63>>7,v=18*y+63>>7,y=9*y+63>>7;u[l-3*c]=Tr[255+u[l-3*c]+y],u[l-2*c]=Tr[255+h+v],u[l-c]=Tr[255+f+m],u[l+0]=Tr[255+d-m],u[l+c]=Tr[255+p-v],u[l+2*c]=Tr[255+g-y]}e+=r}}function Ye(t,e,n,r,i,o,a,s){for(o=2*o+1;0<i--;){if(ze(t,e,n,o,a))if(De(t,e,n,s))Re(t,e,n);else{var u=t,l=e,c=n,h=u[l-c],f=u[l+0],d=u[l+c],p=Fr[112+(4+(g=3*(f-h))>>3)],g=Fr[112+(g+3>>3)],m=p+1>>1;u[l-2*c]=Tr[255+u[l-2*c]+m],u[l-c]=Tr[255+h+g],u[l+0]=Tr[255+f-p],u[l+c]=Tr[255+d-m]}e+=r}}function Xe(t,e,n,r,i,o){Ge(t,e,n,1,16,r,i,o)}function Je(t,e,n,r,i,o){Ge(t,e,1,n,16,r,i,o)}function Ke(t,e,n,r,i,o){var a;for(a=3;0<a;--a)Ye(t,e+=4*n,n,1,16,r,i,o)}function $e(t,e,n,r,i,o){var a;for(a=3;0<a;--a)Ye(t,e+=4,1,n,16,r,i,o)}function Ze(t,e,n,r,i,o,a,s){Ge(t,e,i,1,8,o,a,s),Ge(n,r,i,1,8,o,a,s)}function Qe(t,e,n,r,i,o,a,s){Ge(t,e,1,i,8,o,a,s),Ge(n,r,1,i,8,o,a,s)}function tn(t,e,n,r,i,o,a,s){Ye(t,e+4*i,i,1,8,o,a,s),Ye(n,r+4*i,i,1,8,o,a,s)}function en(t,e,n,r,i,o,a,s){Ye(t,e+4,1,i,8,o,a,s),Ye(n,r+4,1,i,8,o,a,s)}function nn(){this.ba=new at,this.ec=[],this.cc=[],this.Mc=[],this.Dc=this.Nc=this.dc=this.fc=0,this.Oa=new ut,this.memory=0,this.Ib="OutputFunc",this.Jb="OutputAlphaFunc",this.Nd="OutputRowFunc"}function rn(){this.data=[],this.offset=this.kd=this.ha=this.w=0,this.na=[],this.xa=this.gb=this.Ja=this.Sa=this.P=0}function on(){this.nc=this.Ea=this.b=this.hc=0,this.K=[],this.w=0}function an(){this.ua=0,this.Wa=new E,this.vb=new E,this.md=this.xc=this.wc=0,this.vc=[],this.Wb=0,this.Ya=new d,this.yc=new h}function sn(){this.xb=this.a=0,this.l=new Gt,this.ca=new at,this.V=[],this.Ba=0,this.Ta=[],this.Ua=0,this.m=new A,this.Pb=0,this.wd=new A,this.Ma=this.$=this.C=this.i=this.c=this.xd=0,this.s=new an,this.ab=0,this.gc=a(4,on),this.Oc=0}function un(){this.Lc=this.Z=this.$a=this.i=this.c=0,this.l=new Gt,this.ic=0,this.ca=[],this.tb=0,this.qd=null,this.rd=0}function ln(t,e,n,r,i,o,a){for(t=null==t?0:t[e+0],e=0;e<a;++e)i[o+e]=t+n[r+e]&255,t=i[o+e]}function cn(t,e,n,r,i,o,a){var s;if(null==t)ln(null,null,n,r,i,o,a);else for(s=0;s<a;++s)i[o+s]=t[e+s]+n[r+s]&255}function hn(t,e,n,r,i,o,a){if(null==t)ln(null,null,n,r,i,o,a);else{var s,u=t[e+0],l=u,c=u;for(s=0;s<a;++s)l=c+(u=t[e+s])-l,c=n[r+s]+(-256&l?0>l?0:255:l)&255,l=u,i[o+s]=c}}function fn(t,n,i,a){var s=n.width,u=n.o;if(e(null!=t&&null!=n),0>i||0>=a||i+a>u)return null;if(!t.Cc){if(null==t.ga){var l;if(t.ga=new un,(l=null==t.ga)||(l=n.width*n.o,e(0==t.Gb.length),t.Gb=o(l),t.Uc=0,null==t.Gb?l=0:(t.mb=t.Gb,t.nb=t.Uc,t.rc=null,l=1),l=!l),!l){l=t.ga;var c=t.Fa,h=t.P,f=t.qc,d=t.mb,p=t.nb,g=h+1,m=f-1,y=l.l;if(e(null!=c&&null!=d&&null!=n),mi[0]=null,mi[1]=ln,mi[2]=cn,mi[3]=hn,l.ca=d,l.tb=p,l.c=n.width,l.i=n.height,e(0<l.c&&0<l.i),1>=f)n=0;else if(l.$a=c[h+0]>>0&3,l.Z=c[h+0]>>2&3,l.Lc=c[h+0]>>4&3,h=c[h+0]>>6&3,0>l.$a||1<l.$a||4<=l.Z||1<l.Lc||h)n=0;else if(y.put=dt,y.ac=ft,y.bc=pt,y.ma=l,y.width=n.width,y.height=n.height,y.Da=n.Da,y.v=n.v,y.va=n.va,y.j=n.j,y.o=n.o,l.$a)t:{e(1==l.$a),n=Ct();e:for(;;){if(null==n){n=0;break t}if(e(null!=l),l.mc=n,n.c=l.c,n.i=l.i,n.l=l.l,n.l.ma=l,n.l.width=l.c,n.l.height=l.i,n.a=0,v(n.m,c,g,m),!Pt(l.c,l.i,1,n,null))break e;if(1==n.ab&&3==n.gc[0].hc&&_t(n.s)?(l.ic=1,c=n.c*n.i,n.Ta=null,n.Ua=0,n.V=o(c),n.Ba=0,null==n.V?(n.a=1,n=0):n=1):(l.ic=0,n=It(n,l.c)),!n)break e;n=1;break t}l.mc=null,n=0}else n=m>=l.c*l.i;l=!n}if(l)return null;1!=t.ga.Lc?t.Ga=0:a=u-i}e(null!=t.ga),e(i+a<=u);t:{if(n=(c=t.ga).c,u=c.l.o,0==c.$a){if(g=t.rc,m=t.Vc,y=t.Fa,h=t.P+1+i*n,f=t.mb,d=t.nb+i*n,e(h<=t.P+t.qc),0!=c.Z)for(e(null!=mi[c.Z]),l=0;l<a;++l)mi[c.Z](g,m,y,h,f,d,n),g=f,m=d,d+=n,h+=n;else for(l=0;l<a;++l)r(f,d,y,h,n),g=f,m=d,d+=n,h+=n;t.rc=g,t.Vc=m}else{if(e(null!=c.mc),n=i+a,e(null!=(l=c.mc)),e(n<=l.i),l.C>=n)n=1;else if(c.ic||vn(),c.ic){c=l.V,g=l.Ba,m=l.c;var b=l.i,w=(y=1,h=l.$/m,f=l.$%m,d=l.m,p=l.s,l.$),A=m*b,x=m*n,S=p.wc,N=w<x?wt(p,f,h):null;e(w<=A),e(n<=b),e(_t(p));e:for(;;){for(;!d.h&&w<x;){if(f&S||(N=wt(p,f,h)),e(null!=N),L(d),256>(b=yt(N.G[0],N.H[0],d)))c[g+w]=b,++w,++f>=m&&(f=0,++h<=n&&!(h%16)&&Lt(l,h));else{if(!(280>b)){y=0;break e}b=mt(b-256,d);var k,C=yt(N.G[4],N.H[4],d);if(L(d),!(w>=(C=vt(m,C=mt(C,d)))&&A-w>=b)){y=0;break e}for(k=0;k<b;++k)c[g+w+k]=c[g+w+k-C];for(w+=b,f+=b;f>=m;)f-=m,++h<=n&&!(h%16)&&Lt(l,h);w<x&&f&S&&(N=wt(p,f,h))}e(d.h==_(d))}Lt(l,h>n?n:h);break e}!y||d.h&&w<A?(y=0,l.a=d.h?5:3):l.$=w,n=y}else n=Nt(l,l.V,l.Ba,l.c,l.i,n,Mt);if(!n){a=0;break t}}i+a>=u&&(t.Cc=1),a=1}if(!a)return null;if(t.Cc&&(null!=(a=t.ga)&&(a.mc=null),t.ga=null,0<t.Ga))return alert("todo:WebPDequantizeLevels"),null}return t.nb+i*s}function dn(t,e,n,r,i,o){for(;0<i--;){var a,s=t,u=e+(n?1:0),l=t,c=e+(n?0:3);for(a=0;a<r;++a){var h=l[c+4*a];255!=h&&(h*=32897,s[u+4*a+0]=s[u+4*a+0]*h>>23,s[u+4*a+1]=s[u+4*a+1]*h>>23,s[u+4*a+2]=s[u+4*a+2]*h>>23)}e+=o}}function pn(t,e,n,r,i){for(;0<r--;){var o;for(o=0;o<n;++o){var a=t[e+2*o+0],s=15&(l=t[e+2*o+1]),u=4369*s,l=(240&l|l>>4)*u>>16;t[e+2*o+0]=(240&a|a>>4)*u>>16&240|(15&a|a<<4)*u>>16>>4&15,t[e+2*o+1]=240&l|s}e+=i}}function gn(t,e,n,r,i,o,a,s){var u,l,c=255;for(l=0;l<i;++l){for(u=0;u<r;++u){var h=t[e+u];o[a+4*u]=h,c&=h}e+=n,a+=s}return 255!=c}function mn(t,e,n,r,i){var o;for(o=0;o<i;++o)n[r+o]=t[e+o]>>8}function vn(){_r=dn,Sr=pn,Lr=gn,Nr=mn}function yn(n,r,i){t[n]=function(t,n,o,a,s,u,l,c,h,f,d,p,g,m,v,y,b){var w,A=b-1>>1,x=s[u+0]|l[c+0]<<16,_=h[f+0]|d[p+0]<<16;e(null!=t);var S=3*x+_+131074>>2;for(r(t[n+0],255&S,S>>16,g,m),null!=o&&(S=3*_+x+131074>>2,r(o[a+0],255&S,S>>16,v,y)),w=1;w<=A;++w){var L=s[u+w]|l[c+w]<<16,N=h[f+w]|d[p+w]<<16,k=x+L+_+N+524296,C=k+2*(L+_)>>3;S=C+x>>1,x=(k=k+2*(x+N)>>3)+L>>1,r(t[n+2*w-1],255&S,S>>16,g,m+(2*w-1)*i),r(t[n+2*w-0],255&x,x>>16,g,m+(2*w-0)*i),null!=o&&(S=k+_>>1,x=C+N>>1,r(o[a+2*w-1],255&S,S>>16,v,y+(2*w-1)*i),r(o[a+2*w+0],255&x,x>>16,v,y+(2*w+0)*i)),x=L,_=N}1&b||(S=3*x+_+131074>>2,r(t[n+b-1],255&S,S>>16,g,m+(b-1)*i),null!=o&&(S=3*_+x+131074>>2,r(o[a+b-1],255&S,S>>16,v,y+(b-1)*i)))}}function bn(){vi[Or]=yi,vi[jr]=wi,vi[Rr]=bi,vi[Dr]=Ai,vi[qr]=xi,vi[zr]=_i,vi[Ur]=Si,vi[Hr]=wi,vi[Wr]=Ai,vi[Vr]=xi,vi[Gr]=_i}function wn(t){return t&~Ii?0>t?0:255:t>>Pi}function An(t,e){return wn((19077*t>>8)+(26149*e>>8)-14234)}function xn(t,e,n){return wn((19077*t>>8)-(6419*e>>8)-(13320*n>>8)+8708)}function _n(t,e){return wn((19077*t>>8)+(33050*e>>8)-17685)}function Sn(t,e,n,r,i){r[i+0]=An(t,n),r[i+1]=xn(t,e,n),r[i+2]=_n(t,e)}function Ln(t,e,n,r,i){r[i+0]=_n(t,e),r[i+1]=xn(t,e,n),r[i+2]=An(t,n)}function Nn(t,e,n,r,i){var o=xn(t,e,n);e=o<<3&224|_n(t,e)>>3,r[i+0]=248&An(t,n)|o>>5,r[i+1]=e}function kn(t,e,n,r,i){var o=240&_n(t,e)|15;r[i+0]=240&An(t,n)|xn(t,e,n)>>4,r[i+1]=o}function Cn(t,e,n,r,i){r[i+0]=255,Sn(t,e,n,r,i+1)}function Pn(t,e,n,r,i){Ln(t,e,n,r,i),r[i+3]=255}function In(t,e,n,r,i){Sn(t,e,n,r,i),r[i+3]=255}function Vt(t,e){return 0>t?0:t>e?e:t}function Mn(e,n,r){t[e]=function(t,e,i,o,a,s,u,l,c){for(var h=l+(-2&c)*r;l!=h;)n(t[e+0],i[o+0],a[s+0],u,l),n(t[e+1],i[o+0],a[s+0],u,l+r),e+=2,++o,++s,l+=2*r;1&c&&n(t[e+0],i[o+0],a[s+0],u,l)}}function Bn(t,e,n){return 0==n?0==t?0==e?6:5:0==e?4:0:n}function Fn(t,e,n,r,i){switch(t>>>30){case 3:ar(e,n,r,i,0);break;case 2:sr(e,n,r,i);break;case 1:lr(e,n,r,i)}}function Tn(t,e){var n,o,a=e.M,s=e.Nb,u=t.oc,l=t.pc+40,c=t.oc,h=t.pc+584,f=t.oc,d=t.pc+600;for(n=0;16>n;++n)u[l+32*n-1]=129;for(n=0;8>n;++n)c[h+32*n-1]=129,f[d+32*n-1]=129;for(0<a?u[l-1-32]=c[h-1-32]=f[d-1-32]=129:(i(u,l-32-1,127,21),i(c,h-32-1,127,9),i(f,d-32-1,127,9)),o=0;o<t.za;++o){var p=e.ya[e.aa+o];if(0<o){for(n=-1;16>n;++n)r(u,l+32*n-4,u,l+32*n+12,4);for(n=-1;8>n;++n)r(c,h+32*n-4,c,h+32*n+4,4),r(f,d+32*n-4,f,d+32*n+4,4)}var g=t.Gd,m=t.Hd+o,v=p.ad,y=p.Hc;if(0<a&&(r(u,l-32,g[m].y,0,16),r(c,h-32,g[m].f,0,8),r(f,d-32,g[m].ea,0,8)),p.Za){var b=u,w=l-32+16;for(0<a&&(o>=t.za-1?i(b,w,g[m].y[15],4):r(b,w,g[m+1].y,0,4)),n=0;4>n;n++)b[w+128+n]=b[w+256+n]=b[w+384+n]=b[w+0+n];for(n=0;16>n;++n,y<<=2)b=u,w=l+Ri[n],fi[p.Ob[n]](b,w),Fn(y,v,16*+n,b,w)}else if(b=Bn(o,a,p.Ob[0]),hi[b](u,l),0!=y)for(n=0;16>n;++n,y<<=2)Fn(y,v,16*+n,u,l+Ri[n]);for(n=p.Gc,b=Bn(o,a,p.Dd),di[b](c,h),di[b](f,d),y=v,b=c,w=h,255&(p=n>>0)&&(170&p?ur(y,256,b,w):cr(y,256,b,w)),p=f,y=d,255&(n>>=8)&&(170&n?ur(v,320,p,y):cr(v,320,p,y)),a<t.Ub-1&&(r(g[m].y,0,u,l+480,16),r(g[m].f,0,c,h+224,8),r(g[m].ea,0,f,d+224,8)),n=8*s*t.B,g=t.sa,m=t.ta+16*o+16*s*t.R,v=t.qa,p=t.ra+8*o+n,y=t.Ha,b=t.Ia+8*o+n,n=0;16>n;++n)r(g,m+n*t.R,u,l+32*n,16);for(n=0;8>n;++n)r(v,p+n*t.B,c,h+32*n,8),r(y,b+n*t.B,f,d+32*n,8)}}function En(t,r,i,o,a,s,u,l,c){var h=[0],f=[0],d=0,p=null!=c?c.kd:0,g=null!=c?c:new rn;if(null==t||12>i)return 7;g.data=t,g.w=r,g.ha=i,r=[r],i=[i],g.gb=[g.gb];t:{var m=r,y=i,b=g.gb;if(e(null!=t),e(null!=y),e(null!=b),b[0]=0,12<=y[0]&&!n(t,m[0],"RIFF")){if(n(t,m[0]+8,"WEBP")){b=3;break t}var w=B(t,m[0]+4);if(12>w||4294967286<w){b=3;break t}if(p&&w>y[0]-8){b=7;break t}b[0]=w,m[0]+=12,y[0]-=12}b=0}if(0!=b)return b;for(w=0<g.gb[0],i=i[0];;){t:{var x=t;y=r,b=i;var _=h,S=f,L=m=[0];if((C=d=[d])[0]=0,8>b[0])b=7;else{if(!n(x,y[0],"VP8X")){if(10!=B(x,y[0]+4)){b=3;break t}if(18>b[0]){b=7;break t}var N=B(x,y[0]+8),k=1+M(x,y[0]+12);if(2147483648<=k*(x=1+M(x,y[0]+15))){b=3;break t}null!=L&&(L[0]=N),null!=_&&(_[0]=k),null!=S&&(S[0]=x),y[0]+=18,b[0]-=18,C[0]=1}b=0}}if(d=d[0],m=m[0],0!=b)return b;if(y=!!(2&m),!w&&d)return 3;if(null!=s&&(s[0]=!!(16&m)),null!=u&&(u[0]=y),null!=l&&(l[0]=0),u=h[0],m=f[0],d&&y&&null==c){b=0;break}if(4>i){b=7;break}if(w&&d||!w&&!d&&!n(t,r[0],"ALPH")){i=[i],g.na=[g.na],g.P=[g.P],g.Sa=[g.Sa];t:{N=t,b=r,w=i;var C=g.gb;_=g.na,S=g.P,L=g.Sa,k=22,e(null!=N),e(null!=w),x=b[0];var P=w[0];for(e(null!=_),e(null!=L),_[0]=null,S[0]=null,L[0]=0;;){if(b[0]=x,w[0]=P,8>P){b=7;break t}var I=B(N,x+4);if(4294967286<I){b=3;break t}var F=8+I+1&-2;if(k+=F,0<C&&k>C){b=3;break t}if(!n(N,x,"VP8 ")||!n(N,x,"VP8L")){b=0;break t}if(P[0]<F){b=7;break t}n(N,x,"ALPH")||(_[0]=N,S[0]=x+8,L[0]=I),x+=F,P-=F}}if(i=i[0],g.na=g.na[0],g.P=g.P[0],g.Sa=g.Sa[0],0!=b)break}i=[i],g.Ja=[g.Ja],g.xa=[g.xa];t:if(C=t,b=r,w=i,_=g.gb[0],S=g.Ja,L=g.xa,N=b[0],x=!n(C,N,"VP8 "),k=!n(C,N,"VP8L"),e(null!=C),e(null!=w),e(null!=S),e(null!=L),8>w[0])b=7;else{if(x||k){if(C=B(C,N+4),12<=_&&C>_-12){b=3;break t}if(p&&C>w[0]-8){b=7;break t}S[0]=C,b[0]+=8,w[0]-=8,L[0]=k}else L[0]=5<=w[0]&&47==C[N+0]&&!(C[N+4]>>5),S[0]=w[0];b=0}if(i=i[0],g.Ja=g.Ja[0],g.xa=g.xa[0],r=r[0],0!=b)break;if(4294967286<g.Ja)return 3;if(null==l||y||(l[0]=g.xa?2:1),u=[u],m=[m],g.xa){if(5>i){b=7;break}l=u,p=m,y=s,null==t||5>i?t=0:5<=i&&47==t[r+0]&&!(t[r+4]>>5)?(w=[0],C=[0],_=[0],v(S=new A,t,r,i),gt(S,w,C,_)?(null!=l&&(l[0]=w[0]),null!=p&&(p[0]=C[0]),null!=y&&(y[0]=_[0]),t=1):t=0):t=0}else{if(10>i){b=7;break}l=m,null==t||10>i||!Jt(t,r+3,i-3)?t=0:(p=t[r+0]|t[r+1]<<8|t[r+2]<<16,y=16383&(t[r+7]<<8|t[r+6]),t=16383&(t[r+9]<<8|t[r+8]),1&p||3<(p>>1&7)||!(p>>4&1)||p>>5>=g.Ja||!y||!t?t=0:(u&&(u[0]=y),l&&(l[0]=t),t=1))}if(!t)return 3;if(u=u[0],m=m[0],d&&(h[0]!=u||f[0]!=m))return 3;null!=c&&(c[0]=g,c.offset=r-c.w,e(4294967286>r-c.w),e(c.offset==c.ha-i));break}return 0==b||7==b&&d&&null==c?(null!=s&&(s[0]|=null!=g.na&&0<g.na.length),null!=o&&(o[0]=u),null!=a&&(a[0]=m),0):b}function On(t,e,n){var r=e.width,i=e.height,o=0,a=0,s=r,u=i;if(e.Da=null!=t&&0<t.Da,e.Da&&(s=t.cd,u=t.bd,o=t.v,a=t.j,11>n||(o&=-2,a&=-2),0>o||0>a||0>=s||0>=u||o+s>r||a+u>i))return 0;if(e.v=o,e.j=a,e.va=o+s,e.o=a+u,e.U=s,e.T=u,e.da=null!=t&&0<t.da,e.da){if(!O(s,u,n=[t.ib],o=[t.hb]))return 0;e.ib=n[0],e.hb=o[0]}return e.ob=null!=t&&t.ob,e.Kb=null==t||!t.Sd,e.da&&(e.ob=e.ib<3*r/4&&e.hb<3*i/4,e.Kb=0),1}function jn(t){if(null==t)return 2;if(11>t.S){var e=t.f.RGBA;e.fb+=(t.height-1)*e.A,e.A=-e.A}else e=t.f.kb,t=t.height,e.O+=(t-1)*e.fa,e.fa=-e.fa,e.N+=(t-1>>1)*e.Ab,e.Ab=-e.Ab,e.W+=(t-1>>1)*e.Db,e.Db=-e.Db,null!=e.F&&(e.J+=(t-1)*e.lb,e.lb=-e.lb);return 0}function Rn(t,e,n,r){if(null==r||0>=t||0>=e)return 2;if(null!=n){if(n.Da){var i=n.cd,a=n.bd,s=-2&n.v,u=-2&n.j;if(0>s||0>u||0>=i||0>=a||s+i>t||u+a>e)return 2;t=i,e=a}if(n.da){if(!O(t,e,i=[n.ib],a=[n.hb]))return 2;t=i[0],e=a[0]}}r.width=t,r.height=e;t:{var l=r.width,c=r.height;if(t=r.S,0>=l||0>=c||!(t>=Or&&13>t))t=2;else{if(0>=r.Rd&&null==r.sd){s=a=i=e=0;var h=(u=l*Ui[t])*c;if(11>t||(a=(c+1)/2*(e=(l+1)/2),12==t&&(s=(i=l)*c)),null==(c=o(h+2*a+s))){t=1;break t}r.sd=c,11>t?((l=r.f.RGBA).eb=c,l.fb=0,l.A=u,l.size=h):((l=r.f.kb).y=c,l.O=0,l.fa=u,l.Fd=h,l.f=c,l.N=0+h,l.Ab=e,l.Cd=a,l.ea=c,l.W=0+h+a,l.Db=e,l.Ed=a,12==t&&(l.F=c,l.J=0+h+2*a),l.Tc=s,l.lb=i)}if(e=1,i=r.S,a=r.width,s=r.height,i>=Or&&13>i)if(11>i)t=r.f.RGBA,e&=(u=Math.abs(t.A))*(s-1)+a<=t.size,e&=u>=a*Ui[i],e&=null!=t.eb;else{t=r.f.kb,u=(a+1)/2,h=(s+1)/2,l=Math.abs(t.fa),c=Math.abs(t.Ab);var f=Math.abs(t.Db),d=Math.abs(t.lb),p=d*(s-1)+a;e&=l*(s-1)+a<=t.Fd,e&=c*(h-1)+u<=t.Cd,e=(e&=f*(h-1)+u<=t.Ed)&l>=a&c>=u&f>=u,e&=null!=t.y,e&=null!=t.f,e&=null!=t.ea,12==i&&(e&=d>=a,e&=p<=t.Tc,e&=null!=t.F)}else e=0;t=e?0:2}}return 0!=t||null!=n&&n.fd&&(t=jn(r)),t}var Dn=64,qn=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215],zn=24,Un=32,Hn=8,Wn=[0,0,1,1,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7];D("Predictor0","PredictorAdd0"),t.Predictor0=function(){return 4278190080},t.Predictor1=function(t){return t},t.Predictor2=function(t,e,n){return e[n+0]},t.Predictor3=function(t,e,n){return e[n+1]},t.Predictor4=function(t,e,n){return e[n-1]},t.Predictor5=function(t,e,n){return z(z(t,e[n+1]),e[n+0])},t.Predictor6=function(t,e,n){return z(t,e[n-1])},t.Predictor7=function(t,e,n){return z(t,e[n+0])},t.Predictor8=function(t,e,n){return z(e[n-1],e[n+0])},t.Predictor9=function(t,e,n){return z(e[n+0],e[n+1])},t.Predictor10=function(t,e,n){return z(z(t,e[n-1]),z(e[n+0],e[n+1]))},t.Predictor11=function(t,e,n){var r=e[n+0];return 0>=W(r>>24&255,t>>24&255,(e=e[n-1])>>24&255)+W(r>>16&255,t>>16&255,e>>16&255)+W(r>>8&255,t>>8&255,e>>8&255)+W(255&r,255&t,255&e)?r:t},t.Predictor12=function(t,e,n){var r=e[n+0];return(U((t>>24&255)+(r>>24&255)-((e=e[n-1])>>24&255))<<24|U((t>>16&255)+(r>>16&255)-(e>>16&255))<<16|U((t>>8&255)+(r>>8&255)-(e>>8&255))<<8|U((255&t)+(255&r)-(255&e)))>>>0},t.Predictor13=function(t,e,n){var r=e[n-1];return(H((t=z(t,e[n+0]))>>24&255,r>>24&255)<<24|H(t>>16&255,r>>16&255)<<16|H(t>>8&255,r>>8&255)<<8|H(t>>0&255,r>>0&255))>>>0};var Vn=t.PredictorAdd0;t.PredictorAdd1=V,D("Predictor2","PredictorAdd2"),D("Predictor3","PredictorAdd3"),D("Predictor4","PredictorAdd4"),D("Predictor5","PredictorAdd5"),D("Predictor6","PredictorAdd6"),D("Predictor7","PredictorAdd7"),D("Predictor8","PredictorAdd8"),D("Predictor9","PredictorAdd9"),D("Predictor10","PredictorAdd10"),D("Predictor11","PredictorAdd11"),D("Predictor12","PredictorAdd12"),D("Predictor13","PredictorAdd13");var Gn=t.PredictorAdd2;J("ColorIndexInverseTransform","MapARGB","32b",(function(t){return t>>8&255}),(function(t){return t})),J("VP8LColorIndexInverseTransformAlpha","MapAlpha","8b",(function(t){return t}),(function(t){return t>>8&255}));var Yn,Xn=t.ColorIndexInverseTransform,Jn=t.MapARGB,Kn=t.VP8LColorIndexInverseTransformAlpha,$n=t.MapAlpha,Zn=t.VP8LPredictorsAdd=[];Zn.length=16,(t.VP8LPredictors=[]).length=16,(t.VP8LPredictorsAdd_C=[]).length=16,(t.VP8LPredictors_C=[]).length=16;var Qn,tr,er,nr,rr,ir,or,ar,sr,ur,lr,cr,hr,fr,dr,pr,gr,mr,vr,yr,br,wr,Ar,xr,_r,Sr,Lr,Nr,kr=o(511),Cr=o(2041),Pr=o(225),Ir=o(767),Mr=0,Br=Cr,Fr=Pr,Tr=Ir,Er=kr,Or=0,jr=1,Rr=2,Dr=3,qr=4,zr=5,Ur=6,Hr=7,Wr=8,Vr=9,Gr=10,Yr=[2,3,7],Xr=[3,3,11],Jr=[280,256,256,256,40],Kr=[0,1,1,1,0],$r=[17,18,0,1,2,3,4,5,16,6,7,8,9,10,11,12,13,14,15],Zr=[24,7,23,25,40,6,39,41,22,26,38,42,56,5,55,57,21,27,54,58,37,43,72,4,71,73,20,28,53,59,70,74,36,44,88,69,75,52,60,3,87,89,19,29,86,90,35,45,68,76,85,91,51,61,104,2,103,105,18,30,102,106,34,46,84,92,67,77,101,107,50,62,120,1,119,121,83,93,17,31,100,108,66,78,118,122,33,47,117,123,49,63,99,109,82,94,0,116,124,65,79,16,32,98,110,48,115,125,81,95,64,114,126,97,111,80,113,127,96,112],Qr=[2954,2956,2958,2962,2970,2986,3018,3082,3212,3468,3980,5004],ti=8,ei=[4,5,6,7,8,9,10,10,11,12,13,14,15,16,17,17,18,19,20,20,21,21,22,22,23,23,24,25,25,26,27,28,29,30,31,32,33,34,35,36,37,37,38,39,40,41,42,43,44,45,46,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,100,101,102,104,106,108,110,112,114,116,118,122,124,126,128,130,132,134,136,138,140,143,145,148,151,154,157],ni=[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,177,181,185,189,193,197,201,205,209,213,217,221,225,229,234,239,245,249,254,259,264,269,274,279,284],ri=null,ii=[[173,148,140,0],[176,155,140,135,0],[180,157,141,134,130,0],[254,254,243,230,196,177,153,140,133,130,129,0]],oi=[0,1,4,8,5,2,3,6,9,12,13,10,7,11,14,15],ai=[-0,1,-1,2,-2,3,4,6,-3,5,-4,-5,-6,7,-7,8,-8,-9],si=[[[[128,128,128,128,128,128,128,128,128,128,128],[128,128,128,128,128,128,128,128,128,128,128],[128,128,128,128,128,128,128,128,128,128,128]],[[253,136,254,255,228,219,128,128,128,128,128],[189,129,242,255,227,213,255,219,128,128,128],[106,126,227,252,214,209,255,255,128,128,128]],[[1,98,248,255,236,226,255,255,128,128,128],[181,133,238,254,221,234,255,154,128,128,128],[78,134,202,247,198,180,255,219,128,128,128]],[[1,185,249,255,243,255,128,128,128,128,128],[184,150,247,255,236,224,128,128,128,128,128],[77,110,216,255,236,230,128,128,128,128,128]],[[1,101,251,255,241,255,128,128,128,128,128],[170,139,241,252,236,209,255,255,128,128,128],[37,116,196,243,228,255,255,255,128,128,128]],[[1,204,254,255,245,255,128,128,128,128,128],[207,160,250,255,238,128,128,128,128,128,128],[102,103,231,255,211,171,128,128,128,128,128]],[[1,152,252,255,240,255,128,128,128,128,128],[177,135,243,255,234,225,128,128,128,128,128],[80,129,211,255,194,224,128,128,128,128,128]],[[1,1,255,128,128,128,128,128,128,128,128],[246,1,255,128,128,128,128,128,128,128,128],[255,128,128,128,128,128,128,128,128,128,128]]],[[[198,35,237,223,193,187,162,160,145,155,62],[131,45,198,221,172,176,220,157,252,221,1],[68,47,146,208,149,167,221,162,255,223,128]],[[1,149,241,255,221,224,255,255,128,128,128],[184,141,234,253,222,220,255,199,128,128,128],[81,99,181,242,176,190,249,202,255,255,128]],[[1,129,232,253,214,197,242,196,255,255,128],[99,121,210,250,201,198,255,202,128,128,128],[23,91,163,242,170,187,247,210,255,255,128]],[[1,200,246,255,234,255,128,128,128,128,128],[109,178,241,255,231,245,255,255,128,128,128],[44,130,201,253,205,192,255,255,128,128,128]],[[1,132,239,251,219,209,255,165,128,128,128],[94,136,225,251,218,190,255,255,128,128,128],[22,100,174,245,186,161,255,199,128,128,128]],[[1,182,249,255,232,235,128,128,128,128,128],[124,143,241,255,227,234,128,128,128,128,128],[35,77,181,251,193,211,255,205,128,128,128]],[[1,157,247,255,236,231,255,255,128,128,128],[121,141,235,255,225,227,255,255,128,128,128],[45,99,188,251,195,217,255,224,128,128,128]],[[1,1,251,255,213,255,128,128,128,128,128],[203,1,248,255,255,128,128,128,128,128,128],[137,1,177,255,224,255,128,128,128,128,128]]],[[[253,9,248,251,207,208,255,192,128,128,128],[175,13,224,243,193,185,249,198,255,255,128],[73,17,171,221,161,179,236,167,255,234,128]],[[1,95,247,253,212,183,255,255,128,128,128],[239,90,244,250,211,209,255,255,128,128,128],[155,77,195,248,188,195,255,255,128,128,128]],[[1,24,239,251,218,219,255,205,128,128,128],[201,51,219,255,196,186,128,128,128,128,128],[69,46,190,239,201,218,255,228,128,128,128]],[[1,191,251,255,255,128,128,128,128,128,128],[223,165,249,255,213,255,128,128,128,128,128],[141,124,248,255,255,128,128,128,128,128,128]],[[1,16,248,255,255,128,128,128,128,128,128],[190,36,230,255,236,255,128,128,128,128,128],[149,1,255,128,128,128,128,128,128,128,128]],[[1,226,255,128,128,128,128,128,128,128,128],[247,192,255,128,128,128,128,128,128,128,128],[240,128,255,128,128,128,128,128,128,128,128]],[[1,134,252,255,255,128,128,128,128,128,128],[213,62,250,255,255,128,128,128,128,128,128],[55,93,255,128,128,128,128,128,128,128,128]],[[128,128,128,128,128,128,128,128,128,128,128],[128,128,128,128,128,128,128,128,128,128,128],[128,128,128,128,128,128,128,128,128,128,128]]],[[[202,24,213,235,186,191,220,160,240,175,255],[126,38,182,232,169,184,228,174,255,187,128],[61,46,138,219,151,178,240,170,255,216,128]],[[1,112,230,250,199,191,247,159,255,255,128],[166,109,228,252,211,215,255,174,128,128,128],[39,77,162,232,172,180,245,178,255,255,128]],[[1,52,220,246,198,199,249,220,255,255,128],[124,74,191,243,183,193,250,221,255,255,128],[24,71,130,219,154,170,243,182,255,255,128]],[[1,182,225,249,219,240,255,224,128,128,128],[149,150,226,252,216,205,255,171,128,128,128],[28,108,170,242,183,194,254,223,255,255,128]],[[1,81,230,252,204,203,255,192,128,128,128],[123,102,209,247,188,196,255,233,128,128,128],[20,95,153,243,164,173,255,203,128,128,128]],[[1,222,248,255,216,213,128,128,128,128,128],[168,175,246,252,235,205,255,255,128,128,128],[47,116,215,255,211,212,255,255,128,128,128]],[[1,121,236,253,212,214,255,255,128,128,128],[141,84,213,252,201,202,255,219,128,128,128],[42,80,160,240,162,185,255,205,128,128,128]],[[1,1,255,128,128,128,128,128,128,128,128],[244,1,255,128,128,128,128,128,128,128,128],[238,1,255,128,128,128,128,128,128,128,128]]]],ui=[[[231,120,48,89,115,113,120,152,112],[152,179,64,126,170,118,46,70,95],[175,69,143,80,85,82,72,155,103],[56,58,10,171,218,189,17,13,152],[114,26,17,163,44,195,21,10,173],[121,24,80,195,26,62,44,64,85],[144,71,10,38,171,213,144,34,26],[170,46,55,19,136,160,33,206,71],[63,20,8,114,114,208,12,9,226],[81,40,11,96,182,84,29,16,36]],[[134,183,89,137,98,101,106,165,148],[72,187,100,130,157,111,32,75,80],[66,102,167,99,74,62,40,234,128],[41,53,9,178,241,141,26,8,107],[74,43,26,146,73,166,49,23,157],[65,38,105,160,51,52,31,115,128],[104,79,12,27,217,255,87,17,7],[87,68,71,44,114,51,15,186,23],[47,41,14,110,182,183,21,17,194],[66,45,25,102,197,189,23,18,22]],[[88,88,147,150,42,46,45,196,205],[43,97,183,117,85,38,35,179,61],[39,53,200,87,26,21,43,232,171],[56,34,51,104,114,102,29,93,77],[39,28,85,171,58,165,90,98,64],[34,22,116,206,23,34,43,166,73],[107,54,32,26,51,1,81,43,31],[68,25,106,22,64,171,36,225,114],[34,19,21,102,132,188,16,76,124],[62,18,78,95,85,57,50,48,51]],[[193,101,35,159,215,111,89,46,111],[60,148,31,172,219,228,21,18,111],[112,113,77,85,179,255,38,120,114],[40,42,1,196,245,209,10,25,109],[88,43,29,140,166,213,37,43,154],[61,63,30,155,67,45,68,1,209],[100,80,8,43,154,1,51,26,71],[142,78,78,16,255,128,34,197,171],[41,40,5,102,211,183,4,1,221],[51,50,17,168,209,192,23,25,82]],[[138,31,36,171,27,166,38,44,229],[67,87,58,169,82,115,26,59,179],[63,59,90,180,59,166,93,73,154],[40,40,21,116,143,209,34,39,175],[47,15,16,183,34,223,49,45,183],[46,17,33,183,6,98,15,32,183],[57,46,22,24,128,1,54,17,37],[65,32,73,115,28,128,23,128,205],[40,3,9,115,51,192,18,6,223],[87,37,9,115,59,77,64,21,47]],[[104,55,44,218,9,54,53,130,226],[64,90,70,205,40,41,23,26,57],[54,57,112,184,5,41,38,166,213],[30,34,26,133,152,116,10,32,134],[39,19,53,221,26,114,32,73,255],[31,9,65,234,2,15,1,118,73],[75,32,12,51,192,255,160,43,51],[88,31,35,67,102,85,55,186,85],[56,21,23,111,59,205,45,37,192],[55,38,70,124,73,102,1,34,98]],[[125,98,42,88,104,85,117,175,82],[95,84,53,89,128,100,113,101,45],[75,79,123,47,51,128,81,171,1],[57,17,5,71,102,57,53,41,49],[38,33,13,121,57,73,26,1,85],[41,10,67,138,77,110,90,47,114],[115,21,2,10,102,255,166,23,6],[101,29,16,10,85,128,101,196,26],[57,18,10,102,102,213,34,20,43],[117,20,15,36,163,128,68,1,26]],[[102,61,71,37,34,53,31,243,192],[69,60,71,38,73,119,28,222,37],[68,45,128,34,1,47,11,245,171],[62,17,19,70,146,85,55,62,70],[37,43,37,154,100,163,85,160,1],[63,9,92,136,28,64,32,201,85],[75,15,9,9,64,255,184,119,16],[86,6,28,5,64,255,25,248,1],[56,8,17,132,137,255,55,116,128],[58,15,20,82,135,57,26,121,40]],[[164,50,31,137,154,133,25,35,218],[51,103,44,131,131,123,31,6,158],[86,40,64,135,148,224,45,183,128],[22,26,17,131,240,154,14,1,209],[45,16,21,91,64,222,7,1,197],[56,21,39,155,60,138,23,102,213],[83,12,13,54,192,255,68,47,28],[85,26,85,85,128,128,32,146,171],[18,11,7,63,144,171,4,4,246],[35,27,10,146,174,171,12,26,128]],[[190,80,35,99,180,80,126,54,45],[85,126,47,87,176,51,41,20,32],[101,75,128,139,118,146,116,128,85],[56,41,15,176,236,85,37,9,62],[71,30,17,119,118,255,17,18,138],[101,38,60,138,55,70,43,26,142],[146,36,19,30,171,255,97,27,20],[138,45,61,62,219,1,81,188,64],[32,41,20,117,151,142,20,21,163],[112,19,12,61,195,128,48,4,24]]],li=[[[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[176,246,255,255,255,255,255,255,255,255,255],[223,241,252,255,255,255,255,255,255,255,255],[249,253,253,255,255,255,255,255,255,255,255]],[[255,244,252,255,255,255,255,255,255,255,255],[234,254,254,255,255,255,255,255,255,255,255],[253,255,255,255,255,255,255,255,255,255,255]],[[255,246,254,255,255,255,255,255,255,255,255],[239,253,254,255,255,255,255,255,255,255,255],[254,255,254,255,255,255,255,255,255,255,255]],[[255,248,254,255,255,255,255,255,255,255,255],[251,255,254,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,253,254,255,255,255,255,255,255,255,255],[251,254,254,255,255,255,255,255,255,255,255],[254,255,254,255,255,255,255,255,255,255,255]],[[255,254,253,255,254,255,255,255,255,255,255],[250,255,254,255,254,255,255,255,255,255,255],[254,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]]],[[[217,255,255,255,255,255,255,255,255,255,255],[225,252,241,253,255,255,254,255,255,255,255],[234,250,241,250,253,255,253,254,255,255,255]],[[255,254,255,255,255,255,255,255,255,255,255],[223,254,254,255,255,255,255,255,255,255,255],[238,253,254,254,255,255,255,255,255,255,255]],[[255,248,254,255,255,255,255,255,255,255,255],[249,254,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,253,255,255,255,255,255,255,255,255,255],[247,254,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,253,254,255,255,255,255,255,255,255,255],[252,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,254,254,255,255,255,255,255,255,255,255],[253,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,254,253,255,255,255,255,255,255,255,255],[250,255,255,255,255,255,255,255,255,255,255],[254,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]]],[[[186,251,250,255,255,255,255,255,255,255,255],[234,251,244,254,255,255,255,255,255,255,255],[251,251,243,253,254,255,254,255,255,255,255]],[[255,253,254,255,255,255,255,255,255,255,255],[236,253,254,255,255,255,255,255,255,255,255],[251,253,253,254,254,255,255,255,255,255,255]],[[255,254,254,255,255,255,255,255,255,255,255],[254,254,254,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,254,255,255,255,255,255,255,255,255,255],[254,254,255,255,255,255,255,255,255,255,255],[254,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[254,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]]],[[[248,255,255,255,255,255,255,255,255,255,255],[250,254,252,254,255,255,255,255,255,255,255],[248,254,249,253,255,255,255,255,255,255,255]],[[255,253,253,255,255,255,255,255,255,255,255],[246,253,253,255,255,255,255,255,255,255,255],[252,254,251,254,254,255,255,255,255,255,255]],[[255,254,252,255,255,255,255,255,255,255,255],[248,254,253,255,255,255,255,255,255,255,255],[253,255,254,254,255,255,255,255,255,255,255]],[[255,251,254,255,255,255,255,255,255,255,255],[245,251,254,255,255,255,255,255,255,255,255],[253,253,254,255,255,255,255,255,255,255,255]],[[255,251,253,255,255,255,255,255,255,255,255],[252,253,254,255,255,255,255,255,255,255,255],[255,254,255,255,255,255,255,255,255,255,255]],[[255,252,255,255,255,255,255,255,255,255,255],[249,255,254,255,255,255,255,255,255,255,255],[255,255,254,255,255,255,255,255,255,255,255]],[[255,255,253,255,255,255,255,255,255,255,255],[250,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]],[[255,255,255,255,255,255,255,255,255,255,255],[254,255,255,255,255,255,255,255,255,255,255],[255,255,255,255,255,255,255,255,255,255,255]]]],ci=[0,1,2,3,6,4,5,6,6,6,6,6,6,6,6,7,0],hi=[],fi=[],di=[],pi=1,gi=2,mi=[],vi=[];yn("UpsampleRgbLinePair",Sn,3),yn("UpsampleBgrLinePair",Ln,3),yn("UpsampleRgbaLinePair",In,4),yn("UpsampleBgraLinePair",Pn,4),yn("UpsampleArgbLinePair",Cn,4),yn("UpsampleRgba4444LinePair",kn,2),yn("UpsampleRgb565LinePair",Nn,2);var yi=t.UpsampleRgbLinePair,bi=t.UpsampleBgrLinePair,wi=t.UpsampleRgbaLinePair,Ai=t.UpsampleBgraLinePair,xi=t.UpsampleArgbLinePair,_i=t.UpsampleRgba4444LinePair,Si=t.UpsampleRgb565LinePair,Li=16,Ni=1<<Li-1,ki=-227,Ci=482,Pi=6,Ii=(256<<Pi)-1,Mi=0,Bi=o(256),Fi=o(256),Ti=o(256),Ei=o(256),Oi=o(Ci-ki),ji=o(Ci-ki);Mn("YuvToRgbRow",Sn,3),Mn("YuvToBgrRow",Ln,3),Mn("YuvToRgbaRow",In,4),Mn("YuvToBgraRow",Pn,4),Mn("YuvToArgbRow",Cn,4),Mn("YuvToRgba4444Row",kn,2),Mn("YuvToRgb565Row",Nn,2);var Ri=[0,4,8,12,128,132,136,140,256,260,264,268,384,388,392,396],Di=[0,2,8],qi=[8,7,6,4,4,2,2,2,1,1,1,1],zi=1;this.WebPDecodeRGBA=function(t,n,r,i,o){var a=jr,s=new nn,u=new at;s.ba=u,u.S=a,u.width=[u.width],u.height=[u.height];var l=u.width,c=u.height,h=new st;if(null==h||null==t)var f=2;else e(null!=h),f=En(t,n,r,h.width,h.height,h.Pd,h.Qd,h.format,null);if(0!=f?l=0:(null!=l&&(l[0]=h.width[0]),null!=c&&(c[0]=h.height[0]),l=1),l){u.width=u.width[0],u.height=u.height[0],null!=i&&(i[0]=u.width),null!=o&&(o[0]=u.height);t:{if(i=new Gt,(o=new rn).data=t,o.w=n,o.ha=r,o.kd=1,n=[0],e(null!=o),(0==(t=En(o.data,o.w,o.ha,null,null,null,n,null,o))||7==t)&&n[0]&&(t=4),0==(n=t)){if(e(null!=s),i.data=o.data,i.w=o.w+o.offset,i.ha=o.ha-o.offset,i.put=dt,i.ac=ft,i.bc=pt,i.ma=s,o.xa){if(null==(t=Ct())){s=1;break t}if(function(t,n){var r=[0],i=[0],o=[0];e:for(;;){if(null==t)return 0;if(null==n)return t.a=2,0;if(t.l=n,t.a=0,v(t.m,n.data,n.w,n.ha),!gt(t.m,r,i,o)){t.a=3;break e}if(t.xb=gi,n.width=r[0],n.height=i[0],!Pt(r[0],i[0],1,t,null))break e;return 1}return e(0!=t.a),0}(t,i)){if(i=0==(n=Rn(i.width,i.height,s.Oa,s.ba))){e:{i=t;n:for(;;){if(null==i){i=0;break e}if(e(null!=i.s.yc),e(null!=i.s.Ya),e(0<i.s.Wb),e(null!=(r=i.l)),e(null!=(o=r.ma)),0!=i.xb){if(i.ca=o.ba,i.tb=o.tb,e(null!=i.ca),!On(o.Oa,r,Dr)){i.a=2;break n}if(!It(i,r.width))break n;if(r.da)break n;if((r.da||rt(i.ca.S))&&vn(),11>i.ca.S||(alert("todo:WebPInitConvertARGBToYUV"),null!=i.ca.f.kb.F&&vn()),i.Pb&&0<i.s.ua&&null==i.s.vb.X&&!F(i.s.vb,i.s.Wa.Xa)){i.a=1;break n}i.xb=0}if(!Nt(i,i.V,i.Ba,i.c,i.i,r.o,xt))break n;o.Dc=i.Ma,i=1;break e}e(0!=i.a),i=0}i=!i}i&&(n=t.a)}else n=t.a}else{if(null==(t=new Yt)){s=1;break t}if(t.Fa=o.na,t.P=o.P,t.qc=o.Sa,Kt(t,i)){if(0==(n=Rn(i.width,i.height,s.Oa,s.ba))){if(t.Aa=0,r=s.Oa,e(null!=(o=t)),null!=r){if(0<(l=0>(l=r.Md)?0:100<l?255:255*l/100)){for(c=h=0;4>c;++c)12>(f=o.pb[c]).lc&&(f.ia=l*qi[0>f.lc?0:f.lc]>>3),h|=f.ia;h&&(alert("todo:VP8InitRandom"),o.ia=1)}o.Ga=r.Id,100<o.Ga?o.Ga=100:0>o.Ga&&(o.Ga=0)}Qt(t,i)||(n=t.a)}}else n=t.a}0==n&&null!=s.Oa&&s.Oa.fd&&(n=jn(s.ba))}s=n}a=0!=s?null:11>a?u.f.RGBA.eb:u.f.kb.y}else a=null;return a};var Ui=[3,4,3,4,4,2,2,4,4,4,2,1,1]};function l(t,e){for(var n="",r=0;r<4;r++)n+=String.fromCharCode(t[e++]);return n}function c(t,e){return(t[e+0]<<0|t[e+1]<<8|t[e+2]<<16)>>>0}function h(t,e){return(t[e+0]<<0|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0}new u;var f=[0],d=[0],p=[],g=new u,m=t,v=function(t,e){var n={},r=0,i=!1,o=0,a=0;if(n.frames=[],!function(t,e,n,r){for(var i=0;i<4;i++)if(t[e+i]!="RIFF".charCodeAt(i))return!0;return!1}(t,e)){var s,u;for(h(t,e+=4),e+=8;e<t.length;){var f=l(t,e),d=h(t,e+=4);e+=4;var p=d+(1&d);switch(f){case"VP8 ":case"VP8L":void 0===n.frames[r]&&(n.frames[r]={}),(v=n.frames[r]).src_off=i?a:e-8,v.src_size=o+d+8,r++,i&&(i=!1,o=0,a=0);break;case"VP8X":(v=n.header={}).feature_flags=t[e];var g=e+4;v.canvas_width=1+c(t,g),g+=3,v.canvas_height=1+c(t,g),g+=3;break;case"ALPH":i=!0,o=p+8,a=e-8;break;case"ANIM":(v=n.header).bgcolor=h(t,e),g=e+4,v.loop_count=(s=t)[(u=g)+0]<<0|s[u+1]<<8,g+=2;break;case"ANMF":var m,v;(v=n.frames[r]={}).offset_x=2*c(t,e),e+=3,v.offset_y=2*c(t,e),e+=3,v.width=1+c(t,e),e+=3,v.height=1+c(t,e),e+=3,v.duration=c(t,e),e+=3,m=t[e++],v.dispose=1&m,v.blend=m>>1&1}"ANMF"!=f&&(e+=p)}return n}}(m,0);v.response=m,v.rgbaoutput=!0,v.dataurl=!1;var y=v.header?v.header:null,b=v.frames?v.frames:null;if(y){y.loop_counter=y.loop_count,f=[y.canvas_height],d=[y.canvas_width];for(var w=0;w<b.length&&0!=b[w].blend;w++);}var A=b[0],x=g.WebPDecodeRGBA(m,A.src_off,A.src_size,d,f);A.rgba=x,A.imgwidth=d[0],A.imgheight=f[0];for(var _=0;_<d[0]*f[0]*4;_++)p[_]=x[_];return this.width=d,this.height=f,this.data=p,this}!function(t){var e=function(e,r,u,l){var c=4,h=o;switch(l){case t.image_compression.FAST:c=1,h=i;break;case t.image_compression.MEDIUM:c=6,h=a;break;case t.image_compression.SLOW:c=9,h=s}var f=W(e=n(e,r,u,h),{level:c});return t.__addimage__.arrayBufferToBinaryString(f)},n=function(t,e,n,r){for(var i,o,a,s=t.length/e,u=new Uint8Array(t.length+s),h=l(),f=0;f<s;f+=1){if(a=f*e,i=t.subarray(a,a+e),r)u.set(r(i,n,o),a+f);else{for(var d,p=h.length,g=[];d<p;d+=1)g[d]=h[d](i,n,o);var m=c(g.concat());u.set(g[m],a+f)}o=i}return u},r=function(t){var e=Array.apply([],t);return e.unshift(0),e},i=function(t,e){var n,r=[],i=t.length;r[0]=1;for(var o=0;o<i;o+=1)n=t[o-e]||0,r[o+1]=t[o]-n+256&255;return r},o=function(t,e,n){var r,i=[],o=t.length;i[0]=2;for(var a=0;a<o;a+=1)r=n&&n[a]||0,i[a+1]=t[a]-r+256&255;return i},a=function(t,e,n){var r,i,o=[],a=t.length;o[0]=3;for(var s=0;s<a;s+=1)r=t[s-e]||0,i=n&&n[s]||0,o[s+1]=t[s]+256-(r+i>>>1)&255;return o},s=function(t,e,n){var r,i,o,a,s=[],l=t.length;s[0]=4;for(var c=0;c<l;c+=1)r=t[c-e]||0,i=n&&n[c]||0,o=n&&n[c-e]||0,a=u(r,i,o),s[c+1]=t[c]-a+256&255;return s},u=function(t,e,n){if(t===e&&e===n)return t;var r=Math.abs(e-n),i=Math.abs(t-n),o=Math.abs(t+e-n-n);return r<=i&&r<=o?t:i<=o?e:n},l=function(){return[r,i,o,a,s]},c=function(t){var e=t.map((function(t){return t.reduce((function(t,e){return t+Math.abs(e)}),0)}));return e.indexOf(Math.min.apply(null,e))};t.processPNG=function(n,r,i,o){var a,s,u,l,c,h,f,d,p,g,m,v,y,b,w,A=this.decode.FLATE_DECODE,x="";if(this.__addimage__.isArrayBuffer(n)&&(n=new Uint8Array(n)),this.__addimage__.isArrayBufferView(n)){if(n=(u=new Re(n)).imgData,s=u.bits,a=u.colorSpace,c=u.colors,-1!==[4,6].indexOf(u.colorType)){if(8===u.bits){p=(d=32==u.pixelBitlength?new Uint32Array(u.decodePixels().buffer):16==u.pixelBitlength?new Uint16Array(u.decodePixels().buffer):new Uint8Array(u.decodePixels().buffer)).length,m=new Uint8Array(p*u.colors),g=new Uint8Array(p);var _,S=u.pixelBitlength-u.bits;for(b=0,w=0;b<p;b++){for(y=d[b],_=0;_<S;)m[w++]=y>>>_&255,_+=u.bits;g[b]=y>>>_&255}}if(16===u.bits){p=(d=new Uint32Array(u.decodePixels().buffer)).length,m=new Uint8Array(p*(32/u.pixelBitlength)*u.colors),g=new Uint8Array(p*(32/u.pixelBitlength)),v=u.colors>1,b=0,w=0;for(var L=0;b<p;)y=d[b++],m[w++]=y>>>0&255,v&&(m[w++]=y>>>16&255,y=d[b++],m[w++]=y>>>0&255),g[L++]=y>>>16&255;s=8}o!==t.image_compression.NONE?(n=e(m,u.width*u.colors,u.colors,o),f=e(g,u.width,1,o)):(n=m,f=g,A=void 0)}if(3===u.colorType&&(a=this.color_spaces.INDEXED,h=u.palette,u.transparency.indexed)){var N=u.transparency.indexed,k=0;for(b=0,p=N.length;b<p;++b)k+=N[b];if((k/=255)==p-1&&-1!==N.indexOf(0))l=[N.indexOf(0)];else if(k!==p){for(d=u.decodePixels(),g=new Uint8Array(d.length),b=0,p=d.length;b<p;b++)g[b]=N[d[b]];f=e(g,u.width,1)}}var C=function(e){var n;switch(e){case t.image_compression.FAST:n=11;break;case t.image_compression.MEDIUM:n=13;break;case t.image_compression.SLOW:n=14;break;default:n=12}return n}(o);return A===this.decode.FLATE_DECODE&&(x="/Predictor "+C+" "),x+="/Colors "+c+" /BitsPerComponent "+s+" /Columns "+u.width,(this.__addimage__.isArrayBuffer(n)||this.__addimage__.isArrayBufferView(n))&&(n=this.__addimage__.arrayBufferToBinaryString(n)),(f&&this.__addimage__.isArrayBuffer(f)||this.__addimage__.isArrayBufferView(f))&&(f=this.__addimage__.arrayBufferToBinaryString(f)),{alias:i,data:n,index:r,filter:A,decodeParameters:x,transparency:l,palette:h,sMask:f,predictor:C,width:u.width,height:u.height,bitsPerComponent:s,colorSpace:a}}}}(Lt.API),function(t){t.processGIF89A=function(e,n,r,i){var o=new De(e),a=o.width,s=o.height,u=[];o.decodeAndBlitFrameRGBA(0,u);var l={data:u,width:a,height:s},c=new ze(100).encode(l,100);return t.processJPEG.call(this,c,n,r,i)},t.processGIF87A=t.processGIF89A}(Lt.API),Ue.prototype.parseHeader=function(){if(this.fileSize=this.datav.getUint32(this.pos,!0),this.pos+=4,this.reserved=this.datav.getUint32(this.pos,!0),this.pos+=4,this.offset=this.datav.getUint32(this.pos,!0),this.pos+=4,this.headerSize=this.datav.getUint32(this.pos,!0),this.pos+=4,this.width=this.datav.getUint32(this.pos,!0),this.pos+=4,this.height=this.datav.getInt32(this.pos,!0),this.pos+=4,this.planes=this.datav.getUint16(this.pos,!0),this.pos+=2,this.bitPP=this.datav.getUint16(this.pos,!0),this.pos+=2,this.compress=this.datav.getUint32(this.pos,!0),this.pos+=4,this.rawSize=this.datav.getUint32(this.pos,!0),this.pos+=4,this.hr=this.datav.getUint32(this.pos,!0),this.pos+=4,this.vr=this.datav.getUint32(this.pos,!0),this.pos+=4,this.colors=this.datav.getUint32(this.pos,!0),this.pos+=4,this.importantColors=this.datav.getUint32(this.pos,!0),this.pos+=4,16===this.bitPP&&this.is_with_alpha&&(this.bitPP=15),this.bitPP<15){var t=0===this.colors?1<<this.bitPP:this.colors;this.palette=new Array(t);for(var e=0;e<t;e++){var n=this.datav.getUint8(this.pos++,!0),r=this.datav.getUint8(this.pos++,!0),i=this.datav.getUint8(this.pos++,!0),o=this.datav.getUint8(this.pos++,!0);this.palette[e]={red:i,green:r,blue:n,quad:o}}}this.height<0&&(this.height*=-1,this.bottom_up=!1)},Ue.prototype.parseBGR=function(){this.pos=this.offset;try{var t="bit"+this.bitPP,e=this.width*this.height*4;this.data=new Uint8Array(e),this[t]()}catch(t){X.log("bit decode error:"+t)}},Ue.prototype.bit1=function(){var t,e=Math.ceil(this.width/8),n=e%4;for(t=this.height-1;t>=0;t--){for(var r=this.bottom_up?t:this.height-1-t,i=0;i<e;i++)for(var o=this.datav.getUint8(this.pos++,!0),a=r*this.width*4+8*i*4,s=0;s<8&&8*i+s<this.width;s++){var u=this.palette[o>>7-s&1];this.data[a+4*s]=u.blue,this.data[a+4*s+1]=u.green,this.data[a+4*s+2]=u.red,this.data[a+4*s+3]=255}0!==n&&(this.pos+=4-n)}},Ue.prototype.bit4=function(){for(var t=Math.ceil(this.width/2),e=t%4,n=this.height-1;n>=0;n--){for(var r=this.bottom_up?n:this.height-1-n,i=0;i<t;i++){var o=this.datav.getUint8(this.pos++,!0),a=r*this.width*4+2*i*4,s=o>>4,u=15&o,l=this.palette[s];if(this.data[a]=l.blue,this.data[a+1]=l.green,this.data[a+2]=l.red,this.data[a+3]=255,2*i+1>=this.width)break;l=this.palette[u],this.data[a+4]=l.blue,this.data[a+4+1]=l.green,this.data[a+4+2]=l.red,this.data[a+4+3]=255}0!==e&&(this.pos+=4-e)}},Ue.prototype.bit8=function(){for(var t=this.width%4,e=this.height-1;e>=0;e--){for(var n=this.bottom_up?e:this.height-1-e,r=0;r<this.width;r++){var i=this.datav.getUint8(this.pos++,!0),o=n*this.width*4+4*r;if(i<this.palette.length){var a=this.palette[i];this.data[o]=a.red,this.data[o+1]=a.green,this.data[o+2]=a.blue,this.data[o+3]=255}else this.data[o]=255,this.data[o+1]=255,this.data[o+2]=255,this.data[o+3]=255}0!==t&&(this.pos+=4-t)}},Ue.prototype.bit15=function(){for(var t=this.width%3,e=parseInt("11111",2),n=this.height-1;n>=0;n--){for(var r=this.bottom_up?n:this.height-1-n,i=0;i<this.width;i++){var o=this.datav.getUint16(this.pos,!0);this.pos+=2;var a=(o&e)/e*255|0,s=(o>>5&e)/e*255|0,u=(o>>10&e)/e*255|0,l=o>>15?255:0,c=r*this.width*4+4*i;this.data[c]=u,this.data[c+1]=s,this.data[c+2]=a,this.data[c+3]=l}this.pos+=t}},Ue.prototype.bit16=function(){for(var t=this.width%3,e=parseInt("11111",2),n=parseInt("111111",2),r=this.height-1;r>=0;r--){for(var i=this.bottom_up?r:this.height-1-r,o=0;o<this.width;o++){var a=this.datav.getUint16(this.pos,!0);this.pos+=2;var s=(a&e)/e*255|0,u=(a>>5&n)/n*255|0,l=(a>>11)/e*255|0,c=i*this.width*4+4*o;this.data[c]=l,this.data[c+1]=u,this.data[c+2]=s,this.data[c+3]=255}this.pos+=t}},Ue.prototype.bit24=function(){for(var t=this.height-1;t>=0;t--){for(var e=this.bottom_up?t:this.height-1-t,n=0;n<this.width;n++){var r=this.datav.getUint8(this.pos++,!0),i=this.datav.getUint8(this.pos++,!0),o=this.datav.getUint8(this.pos++,!0),a=e*this.width*4+4*n;this.data[a]=o,this.data[a+1]=i,this.data[a+2]=r,this.data[a+3]=255}this.pos+=this.width%4}},Ue.prototype.bit32=function(){for(var t=this.height-1;t>=0;t--)for(var e=this.bottom_up?t:this.height-1-t,n=0;n<this.width;n++){var r=this.datav.getUint8(this.pos++,!0),i=this.datav.getUint8(this.pos++,!0),o=this.datav.getUint8(this.pos++,!0),a=this.datav.getUint8(this.pos++,!0),s=e*this.width*4+4*n;this.data[s]=o,this.data[s+1]=i,this.data[s+2]=r,this.data[s+3]=a}},Ue.prototype.getData=function(){return this.data},function(t){t.processBMP=function(e,n,r,i){var o=new Ue(e,!1),a=o.width,s=o.height,u={data:o.getData(),width:a,height:s},l=new ze(100).encode(u,100);return t.processJPEG.call(this,l,n,r,i)}}(Lt.API),He.prototype.getData=function(){return this.data},function(t){t.processWEBP=function(e,n,r,i){var o=new He(e,!1),a=o.width,s=o.height,u={data:o.getData(),width:a,height:s},l=new ze(100).encode(u,100);return t.processJPEG.call(this,l,n,r,i)}}(Lt.API),Lt.API.processRGBA=function(t,e,n){for(var r=t.data,i=r.length,o=new Uint8Array(i/4*3),a=new Uint8Array(i/4),s=0,u=0,l=0;l<i;l+=4){var c=r[l],h=r[l+1],f=r[l+2],d=r[l+3];o[s++]=c,o[s++]=h,o[s++]=f,a[u++]=d}var p=this.__addimage__.arrayBufferToBinaryString(o);return{alpha:this.__addimage__.arrayBufferToBinaryString(a),data:p,index:e,alias:n,colorSpace:"DeviceRGB",bitsPerComponent:8,width:t.width,height:t.height}},Lt.API.setLanguage=function(t){return void 0===this.internal.languageSettings&&(this.internal.languageSettings={},this.internal.languageSettings.isSubscribed=!1),void 0!=={af:"Afrikaans",sq:"Albanian",ar:"Arabic (Standard)","ar-DZ":"Arabic (Algeria)","ar-BH":"Arabic (Bahrain)","ar-EG":"Arabic (Egypt)","ar-IQ":"Arabic (Iraq)","ar-JO":"Arabic (Jordan)","ar-KW":"Arabic (Kuwait)","ar-LB":"Arabic (Lebanon)","ar-LY":"Arabic (Libya)","ar-MA":"Arabic (Morocco)","ar-OM":"Arabic (Oman)","ar-QA":"Arabic (Qatar)","ar-SA":"Arabic (Saudi Arabia)","ar-SY":"Arabic (Syria)","ar-TN":"Arabic (Tunisia)","ar-AE":"Arabic (U.A.E.)","ar-YE":"Arabic (Yemen)",an:"Aragonese",hy:"Armenian",as:"Assamese",ast:"Asturian",az:"Azerbaijani",eu:"Basque",be:"Belarusian",bn:"Bengali",bs:"Bosnian",br:"Breton",bg:"Bulgarian",my:"Burmese",ca:"Catalan",ch:"Chamorro",ce:"Chechen",zh:"Chinese","zh-HK":"Chinese (Hong Kong)","zh-CN":"Chinese (PRC)","zh-SG":"Chinese (Singapore)","zh-TW":"Chinese (Taiwan)",cv:"Chuvash",co:"Corsican",cr:"Cree",hr:"Croatian",cs:"Czech",da:"Danish",nl:"Dutch (Standard)","nl-BE":"Dutch (Belgian)",en:"English","en-AU":"English (Australia)","en-BZ":"English (Belize)","en-CA":"English (Canada)","en-IE":"English (Ireland)","en-JM":"English (Jamaica)","en-NZ":"English (New Zealand)","en-PH":"English (Philippines)","en-ZA":"English (South Africa)","en-TT":"English (Trinidad & Tobago)","en-GB":"English (United Kingdom)","en-US":"English (United States)","en-ZW":"English (Zimbabwe)",eo:"Esperanto",et:"Estonian",fo:"Faeroese",fj:"Fijian",fi:"Finnish",fr:"French (Standard)","fr-BE":"French (Belgium)","fr-CA":"French (Canada)","fr-FR":"French (France)","fr-LU":"French (Luxembourg)","fr-MC":"French (Monaco)","fr-CH":"French (Switzerland)",fy:"Frisian",fur:"Friulian",gd:"Gaelic (Scots)","gd-IE":"Gaelic (Irish)",gl:"Galacian",ka:"Georgian",de:"German (Standard)","de-AT":"German (Austria)","de-DE":"German (Germany)","de-LI":"German (Liechtenstein)","de-LU":"German (Luxembourg)","de-CH":"German (Switzerland)",el:"Greek",gu:"Gujurati",ht:"Haitian",he:"Hebrew",hi:"Hindi",hu:"Hungarian",is:"Icelandic",id:"Indonesian",iu:"Inuktitut",ga:"Irish",it:"Italian (Standard)","it-CH":"Italian (Switzerland)",ja:"Japanese",kn:"Kannada",ks:"Kashmiri",kk:"Kazakh",km:"Khmer",ky:"Kirghiz",tlh:"Klingon",ko:"Korean","ko-KP":"Korean (North Korea)","ko-KR":"Korean (South Korea)",la:"Latin",lv:"Latvian",lt:"Lithuanian",lb:"Luxembourgish",mk:"North Macedonia",ms:"Malay",ml:"Malayalam",mt:"Maltese",mi:"Maori",mr:"Marathi",mo:"Moldavian",nv:"Navajo",ng:"Ndonga",ne:"Nepali",no:"Norwegian",nb:"Norwegian (Bokmal)",nn:"Norwegian (Nynorsk)",oc:"Occitan",or:"Oriya",om:"Oromo",fa:"Persian","fa-IR":"Persian/Iran",pl:"Polish",pt:"Portuguese","pt-BR":"Portuguese (Brazil)",pa:"Punjabi","pa-IN":"Punjabi (India)","pa-PK":"Punjabi (Pakistan)",qu:"Quechua",rm:"Rhaeto-Romanic",ro:"Romanian","ro-MO":"Romanian (Moldavia)",ru:"Russian","ru-MO":"Russian (Moldavia)",sz:"Sami (Lappish)",sg:"Sango",sa:"Sanskrit",sc:"Sardinian",sd:"Sindhi",si:"Singhalese",sr:"Serbian",sk:"Slovak",sl:"Slovenian",so:"Somani",sb:"Sorbian",es:"Spanish","es-AR":"Spanish (Argentina)","es-BO":"Spanish (Bolivia)","es-CL":"Spanish (Chile)","es-CO":"Spanish (Colombia)","es-CR":"Spanish (Costa Rica)","es-DO":"Spanish (Dominican Republic)","es-EC":"Spanish (Ecuador)","es-SV":"Spanish (El Salvador)","es-GT":"Spanish (Guatemala)","es-HN":"Spanish (Honduras)","es-MX":"Spanish (Mexico)","es-NI":"Spanish (Nicaragua)","es-PA":"Spanish (Panama)","es-PY":"Spanish (Paraguay)","es-PE":"Spanish (Peru)","es-PR":"Spanish (Puerto Rico)","es-ES":"Spanish (Spain)","es-UY":"Spanish (Uruguay)","es-VE":"Spanish (Venezuela)",sx:"Sutu",sw:"Swahili",sv:"Swedish","sv-FI":"Swedish (Finland)","sv-SV":"Swedish (Sweden)",ta:"Tamil",tt:"Tatar",te:"Teluga",th:"Thai",tig:"Tigre",ts:"Tsonga",tn:"Tswana",tr:"Turkish",tk:"Turkmen",uk:"Ukrainian",hsb:"Upper Sorbian",ur:"Urdu",ve:"Venda",vi:"Vietnamese",vo:"Volapuk",wa:"Walloon",cy:"Welsh",xh:"Xhosa",ji:"Yiddish",zu:"Zulu"}[t]&&(this.internal.languageSettings.languageCode=t,!1===this.internal.languageSettings.isSubscribed&&(this.internal.events.subscribe("putCatalog",(function(){this.internal.write("/Lang ("+this.internal.languageSettings.languageCode+")")})),this.internal.languageSettings.isSubscribed=!0)),this},Fe=Lt.API,Te=Fe.getCharWidthsArray=function(t,e){var n,r,o=(e=e||{}).font||this.internal.getFont(),a=e.fontSize||this.internal.getFontSize(),s=e.charSpace||this.internal.getCharSpace(),u=e.widths?e.widths:o.metadata.Unicode.widths,l=u.fof?u.fof:1,c=e.kerning?e.kerning:o.metadata.Unicode.kerning,h=c.fof?c.fof:1,f=!1!==e.doKerning,d=0,p=t.length,g=0,m=u[0]||l,v=[];for(n=0;n<p;n++)r=t.charCodeAt(n),"function"==typeof o.metadata.widthOfString?v.push((o.metadata.widthOfGlyph(o.metadata.characterToGlyph(r))+s*(1e3/a)||0)/1e3):(d=f&&"object"===i()(c[r])&&!isNaN(parseInt(c[r][g],10))?c[r][g]/h:0,v.push((u[r]||m)/l+d)),g=r;return v},Ee=Fe.getStringUnitWidth=function(t,e){var n=(e=e||{}).fontSize||this.internal.getFontSize(),r=e.font||this.internal.getFont(),i=e.charSpace||this.internal.getCharSpace();return Fe.processArabic&&(t=Fe.processArabic(t)),"function"==typeof r.metadata.widthOfString?r.metadata.widthOfString(t,n,i)/n:Te.apply(this,arguments).reduce((function(t,e){return t+e}),0)},Oe=function(t,e,n,r){for(var i=[],o=0,a=t.length,s=0;o!==a&&s+e[o]<n;)s+=e[o],o++;i.push(t.slice(0,o));var u=o;for(s=0;o!==a;)s+e[o]>r&&(i.push(t.slice(u,o)),s=0,u=o),s+=e[o],o++;return u!==o&&i.push(t.slice(u,o)),i},je=function(t,e,n){n||(n={});var r,i,o,a,s,u,l,c=[],h=[c],f=n.textIndent||0,d=0,p=0,g=t.split(" "),m=Te.apply(this,[" ",n])[0];if(u=-1===n.lineIndent?g[0].length+2:n.lineIndent||0){var v=Array(u).join(" "),y=[];g.map((function(t){(t=t.split(/\s*\n/)).length>1?y=y.concat(t.map((function(t,e){return(e&&t.length?"\n":"")+t}))):y.push(t[0])})),g=y,u=Ee.apply(this,[v,n])}for(o=0,a=g.length;o<a;o++){var b=0;if(r=g[o],u&&"\n"==r[0]&&(r=r.substr(1),b=1),f+d+(p=(i=Te.apply(this,[r,n])).reduce((function(t,e){return t+e}),0))>e||b){if(p>e){for(s=Oe.apply(this,[r,i,e-(f+d),e]),c.push(s.shift()),c=[s.pop()];s.length;)h.push([s.shift()]);p=i.slice(r.length-(c[0]?c[0].length:0)).reduce((function(t,e){return t+e}),0)}else c=[r];h.push(c),f=p+u,d=m}else c.push(r),f+=d+p,d=m}return l=u?function(t,e){return(e?v:"")+t.join(" ")}:function(t){return t.join(" ")},h.map(l)},Fe.splitTextToSize=function(t,e,n){var r,i=(n=n||{}).fontSize||this.internal.getFontSize(),o=function(t){if(t.widths&&t.kerning)return{widths:t.widths,kerning:t.kerning};var e=this.internal.getFont(t.fontName,t.fontStyle);return e.metadata.Unicode?{widths:e.metadata.Unicode.widths||{0:1},kerning:e.metadata.Unicode.kerning||{}}:{font:e.metadata,fontSize:this.internal.getFontSize(),charSpace:this.internal.getCharSpace()}}.call(this,n);r=Array.isArray(t)?t:String(t).split(/\r?\n/);var a=1*this.internal.scaleFactor*e/i;o.textIndent=n.textIndent?1*n.textIndent*this.internal.scaleFactor/i:0,o.lineIndent=n.lineIndent;var s,u,l=[];for(s=0,u=r.length;s<u;s++)l=l.concat(je.apply(this,[r[s],a,o]));return l},function(t){t.__fontmetrics__=t.__fontmetrics__||{};for(var e="klmnopqrstuvwxyz",n={},r={},o=0;o<16;o++)n[e[o]]="0123456789abcdef"[o],r["0123456789abcdef"[o]]=e[o];var a=function(t){return"0x"+parseInt(t,10).toString(16)},s=t.__fontmetrics__.compress=function(t){var e,n,o,u,l=["{"];for(var c in t){if(e=t[c],isNaN(parseInt(c,10))?n="'"+c+"'":(c=parseInt(c,10),n=(n=a(c).slice(2)).slice(0,-1)+r[n.slice(-1)]),"number"==typeof e)e<0?(o=a(e).slice(3),u="-"):(o=a(e).slice(2),u=""),o=u+o.slice(0,-1)+r[o.slice(-1)];else{if("object"!==i()(e))throw new Error("Don't know what to do with value type "+i()(e)+".");o=s(e)}l.push(n+o)}return l.push("}"),l.join("")},u=t.__fontmetrics__.uncompress=function(t){if("string"!=typeof t)throw new Error("Invalid argument passed to uncompress.");for(var e,r,i,o,a={},s=1,u=a,l=[],c="",h="",f=t.length-1,d=1;d<f;d+=1)"'"==(o=t[d])?e?(i=e.join(""),e=void 0):e=[]:e?e.push(o):"{"==o?(l.push([u,i]),u={},i=void 0):"}"==o?((r=l.pop())[0][r[1]]=u,i=void 0,u=r[0]):"-"==o?s=-1:void 0===i?n.hasOwnProperty(o)?(c+=n[o],i=parseInt(c,16)*s,s=1,c=""):c+=o:n.hasOwnProperty(o)?(h+=n[o],u[i]=parseInt(h,16)*s,s=1,i=void 0,h=""):h+=o;return a},l={codePages:["WinAnsiEncoding"],WinAnsiEncoding:u("{19m8n201n9q201o9r201s9l201t9m201u8m201w9n201x9o201y8o202k8q202l8r202m9p202q8p20aw8k203k8t203t8v203u9v2cq8s212m9t15m8w15n9w2dw9s16k8u16l9u17s9z17x8y17y9y}")},c={Unicode:{Courier:l,"Courier-Bold":l,"Courier-BoldOblique":l,"Courier-Oblique":l,Helvetica:l,"Helvetica-Bold":l,"Helvetica-BoldOblique":l,"Helvetica-Oblique":l,"Times-Roman":l,"Times-Bold":l,"Times-BoldItalic":l,"Times-Italic":l}},h={Unicode:{"Courier-Oblique":u("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Times-BoldItalic":u("{'widths'{k3o2q4ycx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2r202m2n2n3m2o3m2p5n202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5n4l4m4m4m4n4m4o4s4p4m4q4m4r4s4s4y4t2r4u3m4v4m4w3x4x5t4y4s4z4s5k3x5l4s5m4m5n3r5o3x5p4s5q4m5r5t5s4m5t3x5u3x5v2l5w1w5x2l5y3t5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q2l6r3m6s3r6t1w6u1w6v3m6w1w6x4y6y3r6z3m7k3m7l3m7m2r7n2r7o1w7p3r7q2w7r4m7s3m7t2w7u2r7v2n7w1q7x2n7y3t202l3mcl4mal2ram3man3mao3map3mar3mas2lat4uau1uav3maw3way4uaz2lbk2sbl3t'fof'6obo2lbp3tbq3mbr1tbs2lbu1ybv3mbz3mck4m202k3mcm4mcn4mco4mcp4mcq5ycr4mcs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz2w203k6o212m6o2dw2l2cq2l3t3m3u2l17s3x19m3m}'kerning'{cl{4qu5kt5qt5rs17ss5ts}201s{201ss}201t{cks4lscmscnscoscpscls2wu2yu201ts}201x{2wu2yu}2k{201ts}2w{4qx5kx5ou5qx5rs17su5tu}2x{17su5tu5ou}2y{4qx5kx5ou5qx5rs17ss5ts}'fof'-6ofn{17sw5tw5ou5qw5rs}7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qs}3v{17su5tu5os5qs}7p{17su5tu}ck{4qu5kt5qt5rs17ss5ts}4l{4qu5kt5qt5rs17ss5ts}cm{4qu5kt5qt5rs17ss5ts}cn{4qu5kt5qt5rs17ss5ts}co{4qu5kt5qt5rs17ss5ts}cp{4qu5kt5qt5rs17ss5ts}6l{4qu5ou5qw5rt17su5tu}5q{ckuclucmucnucoucpu4lu}5r{ckuclucmucnucoucpu4lu}7q{cksclscmscnscoscps4ls}6p{4qu5ou5qw5rt17sw5tw}ek{4qu5ou5qw5rt17su5tu}el{4qu5ou5qw5rt17su5tu}em{4qu5ou5qw5rt17su5tu}en{4qu5ou5qw5rt17su5tu}eo{4qu5ou5qw5rt17su5tu}ep{4qu5ou5qw5rt17su5tu}es{17ss5ts5qs4qu}et{4qu5ou5qw5rt17sw5tw}eu{4qu5ou5qw5rt17ss5ts}ev{17ss5ts5qs4qu}6z{17sw5tw5ou5qw5rs}fm{17sw5tw5ou5qw5rs}7n{201ts}fo{17sw5tw5ou5qw5rs}fp{17sw5tw5ou5qw5rs}fq{17sw5tw5ou5qw5rs}7r{cksclscmscnscoscps4ls}fs{17sw5tw5ou5qw5rs}ft{17su5tu}fu{17su5tu}fv{17su5tu}fw{17su5tu}fz{cksclscmscnscoscps4ls}}}"),"Helvetica-Bold":u("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"),Courier:u("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Courier-BoldOblique":u("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Times-Bold":u("{'widths'{k3q2q5ncx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2l202m2n2n3m2o3m2p6o202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5x4l4s4m4m4n4s4o4s4p4m4q3x4r4y4s4y4t2r4u3m4v4y4w4m4x5y4y4s4z4y5k3x5l4y5m4s5n3r5o4m5p4s5q4s5r6o5s4s5t4s5u4m5v2l5w1w5x2l5y3u5z3m6k2l6l3m6m3r6n2w6o3r6p2w6q2l6r3m6s3r6t1w6u2l6v3r6w1w6x5n6y3r6z3m7k3r7l3r7m2w7n2r7o2l7p3r7q3m7r4s7s3m7t3m7u2w7v2r7w1q7x2r7y3o202l3mcl4sal2lam3man3mao3map3mar3mas2lat4uau1yav3maw3tay4uaz2lbk2sbl3t'fof'6obo2lbp3rbr1tbs2lbu2lbv3mbz3mck4s202k3mcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3rek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3m3u2l17s4s19m3m}'kerning'{cl{4qt5ks5ot5qy5rw17sv5tv}201t{cks4lscmscnscoscpscls4wv}2k{201ts}2w{4qu5ku7mu5os5qx5ru17su5tu}2x{17su5tu5ou5qs}2y{4qv5kv7mu5ot5qz5ru17su5tu}'fof'-6o7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qu}3v{17su5tu5os5qu}fu{17su5tu5ou5qu}7p{17su5tu5ou5qu}ck{4qt5ks5ot5qy5rw17sv5tv}4l{4qt5ks5ot5qy5rw17sv5tv}cm{4qt5ks5ot5qy5rw17sv5tv}cn{4qt5ks5ot5qy5rw17sv5tv}co{4qt5ks5ot5qy5rw17sv5tv}cp{4qt5ks5ot5qy5rw17sv5tv}6l{17st5tt5ou5qu}17s{ckuclucmucnucoucpu4lu4wu}5o{ckuclucmucnucoucpu4lu4wu}5q{ckzclzcmzcnzcozcpz4lz4wu}5r{ckxclxcmxcnxcoxcpx4lx4wu}5t{ckuclucmucnucoucpu4lu4wu}7q{ckuclucmucnucoucpu4lu}6p{17sw5tw5ou5qu}ek{17st5tt5qu}el{17st5tt5ou5qu}em{17st5tt5qu}en{17st5tt5qu}eo{17st5tt5qu}ep{17st5tt5ou5qu}es{17ss5ts5qu}et{17sw5tw5ou5qu}eu{17sw5tw5ou5qu}ev{17ss5ts5qu}6z{17sw5tw5ou5qu5rs}fm{17sw5tw5ou5qu5rs}fn{17sw5tw5ou5qu5rs}fo{17sw5tw5ou5qu5rs}fp{17sw5tw5ou5qu5rs}fq{17sw5tw5ou5qu5rs}7r{cktcltcmtcntcotcpt4lt5os}fs{17sw5tw5ou5qu5rs}ft{17su5tu5ou5qu}7m{5os}fv{17su5tu5ou5qu}fw{17su5tu5ou5qu}fz{cksclscmscnscoscps4ls}}}"),Symbol:u("{'widths'{k3uaw4r19m3m2k1t2l2l202m2y2n3m2p5n202q6o3k3m2s2l2t2l2v3r2w1t3m3m2y1t2z1wbk2sbl3r'fof'6o3n3m3o3m3p3m3q3m3r3m3s3m3t3m3u1w3v1w3w3r3x3r3y3r3z2wbp3t3l3m5v2l5x2l5z3m2q4yfr3r7v3k7w1o7x3k}'kerning'{'fof'-6o}}"),Helvetica:u("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}"),"Helvetica-BoldOblique":u("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"),ZapfDingbats:u("{'widths'{k4u2k1w'fof'6o}'kerning'{'fof'-6o}}"),"Courier-Bold":u("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Times-Italic":u("{'widths'{k3n2q4ycx2l201n3m201o5t201s2l201t2l201u2l201w3r201x3r201y3r2k1t2l2l202m2n2n3m2o3m2p5n202q5t2r1p2s2l2t2l2u3m2v4n2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w4n3x4n3y4n3z3m4k5w4l3x4m3x4n4m4o4s4p3x4q3x4r4s4s4s4t2l4u2w4v4m4w3r4x5n4y4m4z4s5k3x5l4s5m3x5n3m5o3r5p4s5q3x5r5n5s3x5t3r5u3r5v2r5w1w5x2r5y2u5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q1w6r3m6s3m6t1w6u1w6v2w6w1w6x4s6y3m6z3m7k3m7l3m7m2r7n2r7o1w7p3m7q2w7r4m7s2w7t2w7u2r7v2s7w1v7x2s7y3q202l3mcl3xal2ram3man3mao3map3mar3mas2lat4wau1vav3maw4nay4waz2lbk2sbl4n'fof'6obo2lbp3mbq3obr1tbs2lbu1zbv3mbz3mck3x202k3mcm3xcn3xco3xcp3xcq5tcr4mcs3xct3xcu3xcv3xcw2l2m2ucy2lcz2ldl4mdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr4nfs3mft3mfu3mfv3mfw3mfz2w203k6o212m6m2dw2l2cq2l3t3m3u2l17s3r19m3m}'kerning'{cl{5kt4qw}201s{201sw}201t{201tw2wy2yy6q-t}201x{2wy2yy}2k{201tw}2w{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}2x{17ss5ts5os}2y{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}'fof'-6o6t{17ss5ts5qs}7t{5os}3v{5qs}7p{17su5tu5qs}ck{5kt4qw}4l{5kt4qw}cm{5kt4qw}cn{5kt4qw}co{5kt4qw}cp{5kt4qw}6l{4qs5ks5ou5qw5ru17su5tu}17s{2ks}5q{ckvclvcmvcnvcovcpv4lv}5r{ckuclucmucnucoucpu4lu}5t{2ks}6p{4qs5ks5ou5qw5ru17su5tu}ek{4qs5ks5ou5qw5ru17su5tu}el{4qs5ks5ou5qw5ru17su5tu}em{4qs5ks5ou5qw5ru17su5tu}en{4qs5ks5ou5qw5ru17su5tu}eo{4qs5ks5ou5qw5ru17su5tu}ep{4qs5ks5ou5qw5ru17su5tu}es{5ks5qs4qs}et{4qs5ks5ou5qw5ru17su5tu}eu{4qs5ks5qw5ru17su5tu}ev{5ks5qs4qs}ex{17ss5ts5qs}6z{4qv5ks5ou5qw5ru17su5tu}fm{4qv5ks5ou5qw5ru17su5tu}fn{4qv5ks5ou5qw5ru17su5tu}fo{4qv5ks5ou5qw5ru17su5tu}fp{4qv5ks5ou5qw5ru17su5tu}fq{4qv5ks5ou5qw5ru17su5tu}7r{5os}fs{4qv5ks5ou5qw5ru17su5tu}ft{17su5tu5qs}fu{17su5tu5qs}fv{17su5tu5qs}fw{17su5tu5qs}}}"),"Times-Roman":u("{'widths'{k3n2q4ycx2l201n3m201o6o201s2l201t2l201u2l201w2w201x2w201y2w2k1t2l2l202m2n2n3m2o3m2p5n202q6o2r1m2s2l2t2l2u3m2v3s2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v1w3w3s3x3s3y3s3z2w4k5w4l4s4m4m4n4m4o4s4p3x4q3r4r4s4s4s4t2l4u2r4v4s4w3x4x5t4y4s4z4s5k3r5l4s5m4m5n3r5o3x5p4s5q4s5r5y5s4s5t4s5u3x5v2l5w1w5x2l5y2z5z3m6k2l6l2w6m3m6n2w6o3m6p2w6q2l6r3m6s3m6t1w6u1w6v3m6w1w6x4y6y3m6z3m7k3m7l3m7m2l7n2r7o1w7p3m7q3m7r4s7s3m7t3m7u2w7v3k7w1o7x3k7y3q202l3mcl4sal2lam3man3mao3map3mar3mas2lat4wau1vav3maw3say4waz2lbk2sbl3s'fof'6obo2lbp3mbq2xbr1tbs2lbu1zbv3mbz2wck4s202k3mcm4scn4sco4scp4scq5tcr4mcs3xct3xcu3xcv3xcw2l2m2tcy2lcz2ldl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek2wel2wem2wen2weo2wep2weq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr3sfs3mft3mfu3mfv3mfw3mfz3m203k6o212m6m2dw2l2cq2l3t3m3u1w17s4s19m3m}'kerning'{cl{4qs5ku17sw5ou5qy5rw201ss5tw201ws}201s{201ss}201t{ckw4lwcmwcnwcowcpwclw4wu201ts}2k{201ts}2w{4qs5kw5os5qx5ru17sx5tx}2x{17sw5tw5ou5qu}2y{4qs5kw5os5qx5ru17sx5tx}'fof'-6o7t{ckuclucmucnucoucpu4lu5os5rs}3u{17su5tu5qs}3v{17su5tu5qs}7p{17sw5tw5qs}ck{4qs5ku17sw5ou5qy5rw201ss5tw201ws}4l{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cm{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cn{4qs5ku17sw5ou5qy5rw201ss5tw201ws}co{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cp{4qs5ku17sw5ou5qy5rw201ss5tw201ws}6l{17su5tu5os5qw5rs}17s{2ktclvcmvcnvcovcpv4lv4wuckv}5o{ckwclwcmwcnwcowcpw4lw4wu}5q{ckyclycmycnycoycpy4ly4wu5ms}5r{cktcltcmtcntcotcpt4lt4ws}5t{2ktclvcmvcnvcovcpv4lv4wuckv}7q{cksclscmscnscoscps4ls}6p{17su5tu5qw5rs}ek{5qs5rs}el{17su5tu5os5qw5rs}em{17su5tu5os5qs5rs}en{17su5qs5rs}eo{5qs5rs}ep{17su5tu5os5qw5rs}es{5qs}et{17su5tu5qw5rs}eu{17su5tu5qs5rs}ev{5qs}6z{17sv5tv5os5qx5rs}fm{5os5qt5rs}fn{17sv5tv5os5qx5rs}fo{17sv5tv5os5qx5rs}fp{5os5qt5rs}fq{5os5qt5rs}7r{ckuclucmucnucoucpu4lu5os}fs{17sv5tv5os5qx5rs}ft{17ss5ts5qs}fu{17sw5tw5qs}fv{17sw5tw5qs}fw{17ss5ts5qs}fz{ckuclucmucnucoucpu4lu5os5rs}}}"),"Helvetica-Oblique":u("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}")}};t.events.push(["addFont",function(t){var e=t.font,n=h.Unicode[e.postScriptName];n&&(e.metadata.Unicode={},e.metadata.Unicode.widths=n.widths,e.metadata.Unicode.kerning=n.kerning);var r=c.Unicode[e.postScriptName];r&&(e.metadata.Unicode.encoding=r,e.encoding=r.codePages[0])}])}(Lt.API),function(t){var e=function(t){for(var e=t.length,n=new Uint8Array(e),r=0;r<e;r++)n[r]=t.charCodeAt(r);return n};t.API.events.push(["addFont",function(n){var r=void 0,i=n.font,o=n.instance;if(!i.isStandardFont){if(void 0===o)throw new Error("Font does not exist in vFS, import fonts or remove declaration doc.addFont('"+i.postScriptName+"').");if("string"!=typeof(r=!1===o.existsFileInVFS(i.postScriptName)?o.loadFile(i.postScriptName):o.getFileFromVFS(i.postScriptName)))throw new Error("Font is not stored as string-data in vFS, import fonts or remove declaration doc.addFont('"+i.postScriptName+"').");!function(n,r){r=/^\x00\x01\x00\x00/.test(r)?e(r):e(Z(r)),n.metadata=t.API.TTFFont.open(r),n.metadata.Unicode=n.metadata.Unicode||{encoding:{},kerning:{},widths:[]},n.metadata.glyIdsUsed=[0]}(i,r)}}])}(Lt),function(t){function e(){return(G.canvg?Promise.resolve(G.canvg):n.e(469).then(n.bind(n,1469))).catch((function(t){return Promise.reject(new Error("Could not load canvg: "+t))})).then((function(t){return t.default?t.default:t}))}Lt.API.addSvgAsImage=function(t,n,r,i,o,a,s,u){if(isNaN(n)||isNaN(r))throw X.error("jsPDF.addSvgAsImage: Invalid coordinates",arguments),new Error("Invalid coordinates passed to jsPDF.addSvgAsImage");if(isNaN(i)||isNaN(o))throw X.error("jsPDF.addSvgAsImage: Invalid measurements",arguments),new Error("Invalid measurements (width and/or height) passed to jsPDF.addSvgAsImage");var l=document.createElement("canvas");l.width=i,l.height=o;var c=l.getContext("2d");c.fillStyle="#fff",c.fillRect(0,0,l.width,l.height);var h={ignoreMouse:!0,ignoreAnimation:!0,ignoreDimensions:!0},f=this;return e().then((function(e){return e.fromString(c,t,h)}),(function(){return Promise.reject(new Error("Could not load canvg."))})).then((function(t){return t.render(h)})).then((function(){f.addImage(l.toDataURL("image/jpeg",1),n,r,i,o,s,u)}))}}(),Lt.API.putTotalPages=function(t){var e,n=0;parseInt(this.internal.getFont().id.substr(1),10)<15?(e=new RegExp(t,"g"),n=this.internal.getNumberOfPages()):(e=new RegExp(this.pdfEscape16(t,this.internal.getFont()),"g"),n=this.pdfEscape16(this.internal.getNumberOfPages()+"",this.internal.getFont()));for(var r=1;r<=this.internal.getNumberOfPages();r++)for(var i=0;i<this.internal.pages[r].length;i++)this.internal.pages[r][i]=this.internal.pages[r][i].replace(e,n);return this},Lt.API.viewerPreferences=function(t,e){var n;t=t||{},e=e||!1;var r,o,a,s={HideToolbar:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},HideMenubar:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},HideWindowUI:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},FitWindow:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},CenterWindow:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},DisplayDocTitle:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.4},NonFullScreenPageMode:{defaultValue:"UseNone",value:"UseNone",type:"name",explicitSet:!1,valueSet:["UseNone","UseOutlines","UseThumbs","UseOC"],pdfVersion:1.3},Direction:{defaultValue:"L2R",value:"L2R",type:"name",explicitSet:!1,valueSet:["L2R","R2L"],pdfVersion:1.3},ViewArea:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},ViewClip:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},PrintArea:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},PrintClip:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},PrintScaling:{defaultValue:"AppDefault",value:"AppDefault",type:"name",explicitSet:!1,valueSet:["AppDefault","None"],pdfVersion:1.6},Duplex:{defaultValue:"",value:"none",type:"name",explicitSet:!1,valueSet:["Simplex","DuplexFlipShortEdge","DuplexFlipLongEdge","none"],pdfVersion:1.7},PickTrayByPDFSize:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.7},PrintPageRange:{defaultValue:"",value:"",type:"array",explicitSet:!1,valueSet:null,pdfVersion:1.7},NumCopies:{defaultValue:1,value:1,type:"integer",explicitSet:!1,valueSet:null,pdfVersion:1.7}},u=Object.keys(s),l=[],c=0,h=0,f=0;function d(t,e){var n,r=!1;for(n=0;n<t.length;n+=1)t[n]===e&&(r=!0);return r}if(void 0===this.internal.viewerpreferences&&(this.internal.viewerpreferences={},this.internal.viewerpreferences.configuration=JSON.parse(JSON.stringify(s)),this.internal.viewerpreferences.isSubscribed=!1),n=this.internal.viewerpreferences.configuration,"reset"===t||!0===e){var p=u.length;for(f=0;f<p;f+=1)n[u[f]].value=n[u[f]].defaultValue,n[u[f]].explicitSet=!1}if("object"===i()(t))for(o in t)if(a=t[o],d(u,o)&&void 0!==a){if("boolean"===n[o].type&&"boolean"==typeof a)n[o].value=a;else if("name"===n[o].type&&d(n[o].valueSet,a))n[o].value=a;else if("integer"===n[o].type&&Number.isInteger(a))n[o].value=a;else if("array"===n[o].type){for(c=0;c<a.length;c+=1)if(r=!0,1===a[c].length&&"number"==typeof a[c][0])l.push(String(a[c]-1));else if(a[c].length>1){for(h=0;h<a[c].length;h+=1)"number"!=typeof a[c][h]&&(r=!1);!0===r&&l.push([a[c][0]-1,a[c][1]-1].join(" "))}n[o].value="["+l.join(" ")+"]"}else n[o].value=n[o].defaultValue;n[o].explicitSet=!0}return!1===this.internal.viewerpreferences.isSubscribed&&(this.internal.events.subscribe("putCatalog",(function(){var t,e=[];for(t in n)!0===n[t].explicitSet&&("name"===n[t].type?e.push("/"+t+" /"+n[t].value):e.push("/"+t+" "+n[t].value));0!==e.length&&this.internal.write("/ViewerPreferences\n<<\n"+e.join("\n")+"\n>>")})),this.internal.viewerpreferences.isSubscribed=!0),this.internal.viewerpreferences.configuration=n,this},function(t){var e=function(){var t='<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"><rdf:Description rdf:about="" xmlns:jspdf="'+this.internal.__metadata__.namespaceuri+'"><jspdf:metadata>',e=unescape(encodeURIComponent('<x:xmpmeta xmlns:x="adobe:ns:meta/">')),n=unescape(encodeURIComponent(t)),r=unescape(encodeURIComponent(this.internal.__metadata__.metadata)),i=unescape(encodeURIComponent("</jspdf:metadata></rdf:Description></rdf:RDF>")),o=unescape(encodeURIComponent("</x:xmpmeta>")),a=n.length+r.length+i.length+e.length+o.length;this.internal.__metadata__.metadata_object_number=this.internal.newObject(),this.internal.write("<< /Type /Metadata /Subtype /XML /Length "+a+" >>"),this.internal.write("stream"),this.internal.write(e+n+r+i+o),this.internal.write("endstream"),this.internal.write("endobj")},n=function(){this.internal.__metadata__.metadata_object_number&&this.internal.write("/Metadata "+this.internal.__metadata__.metadata_object_number+" 0 R")};t.addMetadata=function(t,r){return void 0===this.internal.__metadata__&&(this.internal.__metadata__={metadata:t,namespaceuri:r||"http://jspdf.default.namespaceuri/"},this.internal.events.subscribe("putCatalog",n),this.internal.events.subscribe("postPutResources",e)),this}}(Lt.API),function(t){var e=t.API,n=e.pdfEscape16=function(t,e){for(var n,r=e.metadata.Unicode.widths,i=["","0","00","000","0000"],o=[""],a=0,s=t.length;a<s;++a){if(n=e.metadata.characterToGlyph(t.charCodeAt(a)),e.metadata.glyIdsUsed.push(n),e.metadata.toUnicode[n]=t.charCodeAt(a),-1==r.indexOf(n)&&(r.push(n),r.push([parseInt(e.metadata.widthOfGlyph(n),10)])),"0"==n)return o.join("");n=n.toString(16),o.push(i[4-n.length],n)}return o.join("")},r=function(t){var e,n,r,i,o,a,s;for(o="/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo <<\n  /Registry (Adobe)\n  /Ordering (UCS)\n  /Supplement 0\n>> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000><ffff>\nendcodespacerange",r=[],a=0,s=(n=Object.keys(t).sort((function(t,e){return t-e}))).length;a<s;a++)e=n[a],r.length>=100&&(o+="\n"+r.length+" beginbfchar\n"+r.join("\n")+"\nendbfchar",r=[]),void 0!==t[e]&&null!==t[e]&&"function"==typeof t[e].toString&&(i=("0000"+t[e].toString(16)).slice(-4),e=("0000"+(+e).toString(16)).slice(-4),r.push("<"+e+"><"+i+">"));return r.length&&(o+="\n"+r.length+" beginbfchar\n"+r.join("\n")+"\nendbfchar\n"),o+"endcmap\nCMapName currentdict /CMap defineresource pop\nend\nend"};e.events.push(["putFont",function(e){!function(e){var n=e.font,i=e.out,o=e.newObject,a=e.putStream;if(n.metadata instanceof t.API.TTFFont&&"Identity-H"===n.encoding){for(var s=n.metadata.Unicode.widths,u=n.metadata.subset.encode(n.metadata.glyIdsUsed,1),l="",c=0;c<u.length;c++)l+=String.fromCharCode(u[c]);var h=o();a({data:l,addLength1:!0,objectId:h}),i("endobj");var f=o();a({data:r(n.metadata.toUnicode),addLength1:!0,objectId:f}),i("endobj");var d=o();i("<<"),i("/Type /FontDescriptor"),i("/FontName /"+bt(n.fontName)),i("/FontFile2 "+h+" 0 R"),i("/FontBBox "+t.API.PDFObject.convert(n.metadata.bbox)),i("/Flags "+n.metadata.flags),i("/StemV "+n.metadata.stemV),i("/ItalicAngle "+n.metadata.italicAngle),i("/Ascent "+n.metadata.ascender),i("/Descent "+n.metadata.decender),i("/CapHeight "+n.metadata.capHeight),i(">>"),i("endobj");var p=o();i("<<"),i("/Type /Font"),i("/BaseFont /"+bt(n.fontName)),i("/FontDescriptor "+d+" 0 R"),i("/W "+t.API.PDFObject.convert(s)),i("/CIDToGIDMap /Identity"),i("/DW 1000"),i("/Subtype /CIDFontType2"),i("/CIDSystemInfo"),i("<<"),i("/Supplement 0"),i("/Registry (Adobe)"),i("/Ordering ("+n.encoding+")"),i(">>"),i(">>"),i("endobj"),n.objectNumber=o(),i("<<"),i("/Type /Font"),i("/Subtype /Type0"),i("/ToUnicode "+f+" 0 R"),i("/BaseFont /"+bt(n.fontName)),i("/Encoding /"+n.encoding),i("/DescendantFonts ["+p+" 0 R]"),i(">>"),i("endobj"),n.isAlreadyPutted=!0}}(e)}]),e.events.push(["putFont",function(e){!function(e){var n=e.font,i=e.out,o=e.newObject,a=e.putStream;if(n.metadata instanceof t.API.TTFFont&&"WinAnsiEncoding"===n.encoding){for(var s=n.metadata.rawData,u="",l=0;l<s.length;l++)u+=String.fromCharCode(s[l]);var c=o();a({data:u,addLength1:!0,objectId:c}),i("endobj");var h=o();a({data:r(n.metadata.toUnicode),addLength1:!0,objectId:h}),i("endobj");var f=o();i("<<"),i("/Descent "+n.metadata.decender),i("/CapHeight "+n.metadata.capHeight),i("/StemV "+n.metadata.stemV),i("/Type /FontDescriptor"),i("/FontFile2 "+c+" 0 R"),i("/Flags 96"),i("/FontBBox "+t.API.PDFObject.convert(n.metadata.bbox)),i("/FontName /"+bt(n.fontName)),i("/ItalicAngle "+n.metadata.italicAngle),i("/Ascent "+n.metadata.ascender),i(">>"),i("endobj"),n.objectNumber=o();for(var d=0;d<n.metadata.hmtx.widths.length;d++)n.metadata.hmtx.widths[d]=parseInt(n.metadata.hmtx.widths[d]*(1e3/n.metadata.head.unitsPerEm));i("<</Subtype/TrueType/Type/Font/ToUnicode "+h+" 0 R/BaseFont/"+bt(n.fontName)+"/FontDescriptor "+f+" 0 R/Encoding/"+n.encoding+" /FirstChar 29 /LastChar 255 /Widths "+t.API.PDFObject.convert(n.metadata.hmtx.widths)+">>"),i("endobj"),n.isAlreadyPutted=!0}}(e)}]);var i=function(t){var e,r=t.text||"",i=t.x,o=t.y,a=t.options||{},s=t.mutex||{},u=s.pdfEscape,l=s.activeFontKey,c=s.fonts,h=l,f="",d=0,p="",g=c[h].encoding;if("Identity-H"!==c[h].encoding)return{text:r,x:i,y:o,options:a,mutex:s};for(p=r,h=l,Array.isArray(r)&&(p=r[0]),d=0;d<p.length;d+=1)c[h].metadata.hasOwnProperty("cmap")&&(e=c[h].metadata.cmap.unicode.codeMap[p[d].charCodeAt(0)]),e||p[d].charCodeAt(0)<256&&c[h].metadata.hasOwnProperty("Unicode")?f+=p[d]:f+="";var m="";return parseInt(h.slice(1))<14||"WinAnsiEncoding"===g?m=u(f,h).split("").map((function(t){return t.charCodeAt(0).toString(16)})).join(""):"Identity-H"===g&&(m=n(f,c[h])),s.isHex=!0,{text:m,x:i,y:o,options:a,mutex:s}};e.events.push(["postProcessText",function(t){var e=t.text||"",n=[],r={text:e,x:t.x,y:t.y,options:t.options,mutex:t.mutex};if(Array.isArray(e)){var o=0;for(o=0;o<e.length;o+=1)Array.isArray(e[o])&&3===e[o].length?n.push([i(Object.assign({},r,{text:e[o][0]})).text,e[o][1],e[o][2]]):n.push(i(Object.assign({},r,{text:e[o]})).text);t.text=n}else t.text=i(Object.assign({},r,{text:e})).text}])}(Lt),function(t){var e=function(){return void 0===this.internal.vFS&&(this.internal.vFS={}),!0};t.existsFileInVFS=function(t){return e.call(this),void 0!==this.internal.vFS[t]},t.addFileToVFS=function(t,n){return e.call(this),this.internal.vFS[t]=n,this},t.getFileFromVFS=function(t){return e.call(this),void 0!==this.internal.vFS[t]?this.internal.vFS[t]:null}}(Lt.API),function(t){t.__bidiEngine__=t.prototype.__bidiEngine__=function(t){var n,r,i,o,a,s,u,l=e,c=[[0,3,0,1,0,0,0],[0,3,0,1,2,2,0],[0,3,0,17,2,0,1],[0,3,5,5,4,1,0],[0,3,21,21,4,0,1],[0,3,5,5,4,2,0]],h=[[2,0,1,1,0,1,0],[2,0,1,1,0,2,0],[2,0,2,1,3,2,0],[2,0,2,33,3,1,1]],f={L:0,R:1,EN:2,AN:3,N:4,B:5,S:6},d={0:0,5:1,6:2,7:3,32:4,251:5,254:6,255:7},p=["(",")","(","<",">","<","[","]","[","{","}","{","«","»","«","‹","›","‹","⁅","⁆","⁅","⁽","⁾","⁽","₍","₎","₍","≤","≥","≤","〈","〉","〈","﹙","﹚","﹙","﹛","﹜","﹛","﹝","﹞","﹝","﹤","﹥","﹤"],g=new RegExp(/^([1-4|9]|1[0-9]|2[0-9]|3[0168]|4[04589]|5[012]|7[78]|159|16[0-9]|17[0-2]|21[569]|22[03489]|250)$/),m=!1,v=0;this.__bidiEngine__={};var y=function(t){var e=t.charCodeAt(),n=e>>8,r=d[n];return void 0!==r?l[256*r+(255&e)]:252===n||253===n?"AL":g.test(n)?"L":8===n?"R":"N"},b=function(t){for(var e,n=0;n<t.length;n++){if("L"===(e=y(t.charAt(n))))return!1;if("R"===e)return!0}return!1},w=function(t,e,a,s){var u,l,c,h,f=e[s];switch(f){case"L":case"R":case"LRE":case"RLE":case"LRO":case"RLO":case"PDF":m=!1;break;case"N":case"AN":break;case"EN":m&&(f="AN");break;case"AL":m=!0,f="R";break;case"WS":case"BN":f="N";break;case"CS":s<1||s+1>=e.length||"EN"!==(u=a[s-1])&&"AN"!==u||"EN"!==(l=e[s+1])&&"AN"!==l?f="N":m&&(l="AN"),f=l===u?l:"N";break;case"ES":f="EN"===(u=s>0?a[s-1]:"B")&&s+1<e.length&&"EN"===e[s+1]?"EN":"N";break;case"ET":if(s>0&&"EN"===a[s-1]){f="EN";break}if(m){f="N";break}for(c=s+1,h=e.length;c<h&&"ET"===e[c];)c++;f=c<h&&"EN"===e[c]?"EN":"N";break;case"NSM":if(i&&!o){for(h=e.length,c=s+1;c<h&&"NSM"===e[c];)c++;if(c<h){var d=t[s],p=d>=1425&&d<=2303||64286===d;if(u=e[c],p&&("R"===u||"AL"===u)){f="R";break}}}f=s<1||"B"===(u=e[s-1])?"N":a[s-1];break;case"B":m=!1,n=!0,f=v;break;case"S":r=!0,f="N"}return f},A=function(t,e,n){var r=t.split("");return n&&x(r,n,{hiLevel:v}),r.reverse(),e&&e.reverse(),r.join("")},x=function(t,e,i){var o,a,s,u,l,d=-1,p=t.length,g=0,b=[],A=v?h:c,x=[];for(m=!1,n=!1,r=!1,a=0;a<p;a++)x[a]=y(t[a]);for(s=0;s<p;s++){if(l=g,b[s]=w(t,x,b,s),o=240&(g=A[l][f[b[s]]]),g&=15,e[s]=u=A[g][5],o>0)if(16===o){for(a=d;a<s;a++)e[a]=1;d=-1}else d=-1;if(A[g][6])-1===d&&(d=s);else if(d>-1){for(a=d;a<s;a++)e[a]=u;d=-1}"B"===x[s]&&(e[s]=0),i.hiLevel|=u}r&&function(t,e,n){for(var r=0;r<n;r++)if("S"===t[r]){e[r]=v;for(var i=r-1;i>=0&&"WS"===t[i];i--)e[i]=v}}(x,e,p)},_=function(t,e,r,i,o){if(!(o.hiLevel<t)){if(1===t&&1===v&&!n)return e.reverse(),void(r&&r.reverse());for(var a,s,u,l,c=e.length,h=0;h<c;){if(i[h]>=t){for(u=h+1;u<c&&i[u]>=t;)u++;for(l=h,s=u-1;l<s;l++,s--)a=e[l],e[l]=e[s],e[s]=a,r&&(a=r[l],r[l]=r[s],r[s]=a);h=u}h++}}},S=function(t,e,n){var r=t.split(""),i={hiLevel:v};return n||(n=[]),x(r,n,i),function(t,e,n){if(0!==n.hiLevel&&u)for(var r,i=0;i<t.length;i++)1===e[i]&&(r=p.indexOf(t[i]))>=0&&(t[i]=p[r+1])}(r,n,i),_(2,r,e,n,i),_(1,r,e,n,i),r.join("")};return this.__bidiEngine__.doBidiReorder=function(t,e,n){if(function(t,e){if(e)for(var n=0;n<t.length;n++)e[n]=n;void 0===o&&(o=b(t)),void 0===s&&(s=b(t))}(t,e),i||!a||s)if(i&&a&&o^s)v=o?1:0,t=A(t,e,n);else if(!i&&a&&s)v=o?1:0,t=S(t,e,n),t=A(t,e);else if(!i||o||a||s){if(i&&!a&&o^s)t=A(t,e),o?(v=0,t=S(t,e,n)):(v=1,t=S(t,e,n),t=A(t,e));else if(i&&o&&!a&&s)v=1,t=S(t,e,n),t=A(t,e);else if(!i&&!a&&o^s){var r=u;o?(v=1,t=S(t,e,n),v=0,u=!1,t=S(t,e,n),u=r):(v=0,t=S(t,e,n),t=A(t,e),v=1,u=!1,t=S(t,e,n),u=r,t=A(t,e))}}else v=0,t=S(t,e,n);else v=o?1:0,t=S(t,e,n);return t},this.__bidiEngine__.setOptions=function(t){t&&(i=t.isInputVisual,a=t.isOutputVisual,o=t.isInputRtl,s=t.isOutputRtl,u=t.isSymmetricSwapping)},this.__bidiEngine__.setOptions(t),this.__bidiEngine__};var e=["BN","BN","BN","BN","BN","BN","BN","BN","BN","S","B","S","WS","B","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","B","B","B","S","WS","N","N","ET","ET","ET","N","N","N","N","N","ES","CS","ES","CS","CS","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","CS","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","BN","BN","BN","BN","BN","BN","B","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","CS","N","ET","ET","ET","ET","N","N","N","N","L","N","N","BN","N","N","ET","ET","EN","EN","N","L","N","N","N","EN","L","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","N","N","N","N","N","ET","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","R","NSM","R","NSM","NSM","R","NSM","NSM","R","NSM","N","N","N","N","N","N","N","N","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","N","N","N","N","N","R","R","R","R","R","N","N","N","N","N","N","N","N","N","N","N","AN","AN","AN","AN","AN","AN","N","N","AL","ET","ET","AL","CS","AL","N","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AL","AL","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AN","AN","AN","AN","AN","AN","AN","AN","AN","AN","ET","AN","AN","AL","AL","AL","NSM","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AN","N","NSM","NSM","NSM","NSM","NSM","NSM","AL","AL","NSM","NSM","N","NSM","NSM","NSM","NSM","AL","AL","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","N","AL","AL","NSM","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AL","N","N","N","N","N","N","N","N","N","N","N","N","N","N","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","R","R","N","N","N","N","R","N","N","N","N","N","WS","WS","WS","WS","WS","WS","WS","WS","WS","WS","WS","BN","BN","BN","L","R","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","WS","B","LRE","RLE","PDF","LRO","RLO","CS","ET","ET","ET","ET","ET","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","CS","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","WS","BN","BN","BN","BN","BN","N","LRI","RLI","FSI","PDI","BN","BN","BN","BN","BN","BN","EN","L","N","N","EN","EN","EN","EN","EN","EN","ES","ES","N","N","N","L","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","ES","ES","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","L","L","L","L","L","L","L","N","N","N","N","N","N","N","N","N","N","N","N","L","L","L","L","L","N","N","N","N","N","R","NSM","R","R","R","R","R","R","R","R","R","R","ES","R","R","R","R","R","R","R","R","R","R","R","R","R","N","R","R","R","R","R","N","R","N","R","R","N","R","R","N","R","R","R","R","R","R","R","R","R","R","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","CS","N","CS","N","N","CS","N","N","N","N","N","N","N","N","N","ET","N","N","ES","ES","N","N","N","N","N","ET","ET","N","N","N","N","N","AL","AL","AL","AL","AL","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","N","N","BN","N","N","N","ET","ET","ET","N","N","N","N","N","ES","CS","ES","CS","CS","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","CS","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","N","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","L","L","L","L","L","L","N","N","L","L","L","L","L","L","N","N","L","L","L","L","L","L","N","N","L","L","L","N","N","N","ET","ET","N","N","N","ET","ET","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N"],n=new t.__bidiEngine__({isInputVisual:!0});t.API.events.push(["postProcessText",function(t){var e=t.text,r=(t.x,t.y,t.options||{}),i=(t.mutex,r.lang,[]);if(r.isInputVisual="boolean"!=typeof r.isInputVisual||r.isInputVisual,n.setOptions(r),"[object Array]"===Object.prototype.toString.call(e)){var o=0;for(i=[],o=0;o<e.length;o+=1)"[object Array]"===Object.prototype.toString.call(e[o])?i.push([n.doBidiReorder(e[o][0]),e[o][1],e[o][2]]):i.push([n.doBidiReorder(e[o])]);t.text=i}else t.text=n.doBidiReorder(e);n.setOptions({isInputVisual:!0})}])}(Lt),Lt.API.TTFFont=function(){function t(t){var e;if(this.rawData=t,e=this.contents=new Ve(t),this.contents.pos=4,"ttcf"===e.readString(4))throw new Error("TTCF not supported.");e.pos=0,this.parse(),this.subset=new hn(this),this.registerTTF()}return t.open=function(e){return new t(e)},t.prototype.parse=function(){return this.directory=new Ge(this.contents),this.head=new Je(this),this.name=new nn(this),this.cmap=new $e(this),this.toUnicode={},this.hhea=new Ze(this),this.maxp=new rn(this),this.hmtx=new on(this),this.post=new tn(this),this.os2=new Qe(this),this.loca=new cn(this),this.glyf=new sn(this),this.ascender=this.os2.exists&&this.os2.ascender||this.hhea.ascender,this.decender=this.os2.exists&&this.os2.decender||this.hhea.decender,this.lineGap=this.os2.exists&&this.os2.lineGap||this.hhea.lineGap,this.bbox=[this.head.xMin,this.head.yMin,this.head.xMax,this.head.yMax]},t.prototype.registerTTF=function(){var t,e,n,r,i;if(this.scaleFactor=1e3/this.head.unitsPerEm,this.bbox=function(){var e,n,r,i;for(i=[],e=0,n=(r=this.bbox).length;e<n;e++)t=r[e],i.push(Math.round(t*this.scaleFactor));return i}.call(this),this.stemV=0,this.post.exists?(n=255&(r=this.post.italic_angle),0!=(32768&(e=r>>16))&&(e=-(1+(65535^e))),this.italicAngle=+(e+"."+n)):this.italicAngle=0,this.ascender=Math.round(this.ascender*this.scaleFactor),this.decender=Math.round(this.decender*this.scaleFactor),this.lineGap=Math.round(this.lineGap*this.scaleFactor),this.capHeight=this.os2.exists&&this.os2.capHeight||this.ascender,this.xHeight=this.os2.exists&&this.os2.xHeight||0,this.familyClass=(this.os2.exists&&this.os2.familyClass||0)>>8,this.isSerif=1===(i=this.familyClass)||2===i||3===i||4===i||5===i||7===i,this.isScript=10===this.familyClass,this.flags=0,this.post.isFixedPitch&&(this.flags|=1),this.isSerif&&(this.flags|=2),this.isScript&&(this.flags|=8),0!==this.italicAngle&&(this.flags|=64),this.flags|=32,!this.cmap.unicode)throw new Error("No unicode cmap for font")},t.prototype.characterToGlyph=function(t){var e;return(null!=(e=this.cmap.unicode)?e.codeMap[t]:void 0)||0},t.prototype.widthOfGlyph=function(t){var e;return e=1e3/this.head.unitsPerEm,this.hmtx.forGlyph(t).advance*e},t.prototype.widthOfString=function(t,e,n){var r,i,o,a;for(o=0,i=0,a=(t=""+t).length;0<=a?i<a:i>a;i=0<=a?++i:--i)r=t.charCodeAt(i),o+=this.widthOfGlyph(this.characterToGlyph(r))+n*(1e3/e)||0;return o*(e/1e3)},t.prototype.lineHeight=function(t,e){var n;return null==e&&(e=!1),n=e?this.lineGap:0,(this.ascender+n-this.decender)/1e3*t},t}();var We,Ve=function(){function t(t){this.data=null!=t?t:[],this.pos=0,this.length=this.data.length}return t.prototype.readByte=function(){return this.data[this.pos++]},t.prototype.writeByte=function(t){return this.data[this.pos++]=t},t.prototype.readUInt32=function(){return 16777216*this.readByte()+(this.readByte()<<16)+(this.readByte()<<8)+this.readByte()},t.prototype.writeUInt32=function(t){return this.writeByte(t>>>24&255),this.writeByte(t>>16&255),this.writeByte(t>>8&255),this.writeByte(255&t)},t.prototype.readInt32=function(){var t;return(t=this.readUInt32())>=2147483648?t-4294967296:t},t.prototype.writeInt32=function(t){return t<0&&(t+=4294967296),this.writeUInt32(t)},t.prototype.readUInt16=function(){return this.readByte()<<8|this.readByte()},t.prototype.writeUInt16=function(t){return this.writeByte(t>>8&255),this.writeByte(255&t)},t.prototype.readInt16=function(){var t;return(t=this.readUInt16())>=32768?t-65536:t},t.prototype.writeInt16=function(t){return t<0&&(t+=65536),this.writeUInt16(t)},t.prototype.readString=function(t){var e,n;for(n=[],e=0;0<=t?e<t:e>t;e=0<=t?++e:--e)n[e]=String.fromCharCode(this.readByte());return n.join("")},t.prototype.writeString=function(t){var e,n,r;for(r=[],e=0,n=t.length;0<=n?e<n:e>n;e=0<=n?++e:--e)r.push(this.writeByte(t.charCodeAt(e)));return r},t.prototype.readShort=function(){return this.readInt16()},t.prototype.writeShort=function(t){return this.writeInt16(t)},t.prototype.readLongLong=function(){var t,e,n,r,i,o,a,s;return t=this.readByte(),e=this.readByte(),n=this.readByte(),r=this.readByte(),i=this.readByte(),o=this.readByte(),a=this.readByte(),s=this.readByte(),128&t?-1*(72057594037927940*(255^t)+281474976710656*(255^e)+1099511627776*(255^n)+4294967296*(255^r)+16777216*(255^i)+65536*(255^o)+256*(255^a)+(255^s)+1):72057594037927940*t+281474976710656*e+1099511627776*n+4294967296*r+16777216*i+65536*o+256*a+s},t.prototype.writeLongLong=function(t){var e,n;return e=Math.floor(t/4294967296),n=4294967295&t,this.writeByte(e>>24&255),this.writeByte(e>>16&255),this.writeByte(e>>8&255),this.writeByte(255&e),this.writeByte(n>>24&255),this.writeByte(n>>16&255),this.writeByte(n>>8&255),this.writeByte(255&n)},t.prototype.readInt=function(){return this.readInt32()},t.prototype.writeInt=function(t){return this.writeInt32(t)},t.prototype.read=function(t){var e,n;for(e=[],n=0;0<=t?n<t:n>t;n=0<=t?++n:--n)e.push(this.readByte());return e},t.prototype.write=function(t){var e,n,r,i;for(i=[],n=0,r=t.length;n<r;n++)e=t[n],i.push(this.writeByte(e));return i},t}(),Ge=function(){var t;function e(t){var e,n,r;for(this.scalarType=t.readInt(),this.tableCount=t.readShort(),this.searchRange=t.readShort(),this.entrySelector=t.readShort(),this.rangeShift=t.readShort(),this.tables={},n=0,r=this.tableCount;0<=r?n<r:n>r;n=0<=r?++n:--n)e={tag:t.readString(4),checksum:t.readInt(),offset:t.readInt(),length:t.readInt()},this.tables[e.tag]=e}return e.prototype.encode=function(e){var n,r,i,o,a,s,u,l,c,h,f,d,p;for(p in f=Object.keys(e).length,s=Math.log(2),c=16*Math.floor(Math.log(f)/s),o=Math.floor(c/s),l=16*f-c,(r=new Ve).writeInt(this.scalarType),r.writeShort(f),r.writeShort(c),r.writeShort(o),r.writeShort(l),i=16*f,u=r.pos+i,a=null,d=[],e)for(h=e[p],r.writeString(p),r.writeInt(t(h)),r.writeInt(u),r.writeInt(h.length),d=d.concat(h),"head"===p&&(a=u),u+=h.length;u%4;)d.push(0),u++;return r.write(d),n=2981146554-t(r.data),r.pos=a+8,r.writeUInt32(n),r.data},t=function(t){var e,n,r,i;for(t=an.call(t);t.length%4;)t.push(0);for(r=new Ve(t),n=0,e=0,i=t.length;e<i;e=e+=4)n+=r.readUInt32();return 4294967295&n},e}(),Ye={}.hasOwnProperty,Xe=function(t,e){for(var n in e)Ye.call(e,n)&&(t[n]=e[n]);function r(){this.constructor=t}return r.prototype=e.prototype,t.prototype=new r,t.__super__=e.prototype,t};We=function(){function t(t){var e;this.file=t,e=this.file.directory.tables[this.tag],this.exists=!!e,e&&(this.offset=e.offset,this.length=e.length,this.parse(this.file.contents))}return t.prototype.parse=function(){},t.prototype.encode=function(){},t.prototype.raw=function(){return this.exists?(this.file.contents.pos=this.offset,this.file.contents.read(this.length)):null},t}();var Je=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return Xe(e,We),e.prototype.tag="head",e.prototype.parse=function(t){return t.pos=this.offset,this.version=t.readInt(),this.revision=t.readInt(),this.checkSumAdjustment=t.readInt(),this.magicNumber=t.readInt(),this.flags=t.readShort(),this.unitsPerEm=t.readShort(),this.created=t.readLongLong(),this.modified=t.readLongLong(),this.xMin=t.readShort(),this.yMin=t.readShort(),this.xMax=t.readShort(),this.yMax=t.readShort(),this.macStyle=t.readShort(),this.lowestRecPPEM=t.readShort(),this.fontDirectionHint=t.readShort(),this.indexToLocFormat=t.readShort(),this.glyphDataFormat=t.readShort()},e.prototype.encode=function(t){var e;return(e=new Ve).writeInt(this.version),e.writeInt(this.revision),e.writeInt(this.checkSumAdjustment),e.writeInt(this.magicNumber),e.writeShort(this.flags),e.writeShort(this.unitsPerEm),e.writeLongLong(this.created),e.writeLongLong(this.modified),e.writeShort(this.xMin),e.writeShort(this.yMin),e.writeShort(this.xMax),e.writeShort(this.yMax),e.writeShort(this.macStyle),e.writeShort(this.lowestRecPPEM),e.writeShort(this.fontDirectionHint),e.writeShort(t),e.writeShort(this.glyphDataFormat),e.data},e}(),Ke=function(){function t(t,e){var n,r,i,o,a,s,u,l,c,h,f,d,p,g,m,v,y;switch(this.platformID=t.readUInt16(),this.encodingID=t.readShort(),this.offset=e+t.readInt(),c=t.pos,t.pos=this.offset,this.format=t.readUInt16(),this.length=t.readUInt16(),this.language=t.readUInt16(),this.isUnicode=3===this.platformID&&1===this.encodingID&&4===this.format||0===this.platformID&&4===this.format,this.codeMap={},this.format){case 0:for(s=0;s<256;++s)this.codeMap[s]=t.readByte();break;case 4:for(f=t.readUInt16(),h=f/2,t.pos+=6,i=function(){var e,n;for(n=[],s=e=0;0<=h?e<h:e>h;s=0<=h?++e:--e)n.push(t.readUInt16());return n}(),t.pos+=2,p=function(){var e,n;for(n=[],s=e=0;0<=h?e<h:e>h;s=0<=h?++e:--e)n.push(t.readUInt16());return n}(),u=function(){var e,n;for(n=[],s=e=0;0<=h?e<h:e>h;s=0<=h?++e:--e)n.push(t.readUInt16());return n}(),l=function(){var e,n;for(n=[],s=e=0;0<=h?e<h:e>h;s=0<=h?++e:--e)n.push(t.readUInt16());return n}(),r=(this.length-t.pos+this.offset)/2,a=function(){var e,n;for(n=[],s=e=0;0<=r?e<r:e>r;s=0<=r?++e:--e)n.push(t.readUInt16());return n}(),s=m=0,y=i.length;m<y;s=++m)for(g=i[s],n=v=d=p[s];d<=g?v<=g:v>=g;n=d<=g?++v:--v)0===l[s]?o=n+u[s]:0!==(o=a[l[s]/2+(n-d)-(h-s)]||0)&&(o+=u[s]),this.codeMap[n]=65535&o}t.pos=c}return t.encode=function(t,e){var n,r,i,o,a,s,u,l,c,h,f,d,p,g,m,v,y,b,w,A,x,_,S,L,N,k,C,P,I,M,B,F,T,E,O,j,R,D,q,z,U,H,W,V,G,Y;switch(P=new Ve,o=Object.keys(t).sort((function(t,e){return t-e})),e){case"macroman":for(p=0,g=function(){var t=[];for(d=0;d<256;++d)t.push(0);return t}(),v={0:0},i={},I=0,T=o.length;I<T;I++)null==v[W=t[r=o[I]]]&&(v[W]=++p),i[r]={old:t[r],new:v[t[r]]},g[r]=v[t[r]];return P.writeUInt16(1),P.writeUInt16(0),P.writeUInt32(12),P.writeUInt16(0),P.writeUInt16(262),P.writeUInt16(0),P.write(g),{charMap:i,subtable:P.data,maxGlyphID:p+1};case"unicode":for(k=[],c=[],y=0,v={},n={},m=u=null,M=0,E=o.length;M<E;M++)null==v[w=t[r=o[M]]]&&(v[w]=++y),n[r]={old:w,new:v[w]},a=v[w]-r,null!=m&&a===u||(m&&c.push(m),k.push(r),u=a),m=r;for(m&&c.push(m),c.push(65535),k.push(65535),L=2*(S=k.length),_=2*Math.pow(Math.log(S)/Math.LN2,2),h=Math.log(_/2)/Math.LN2,x=2*S-_,s=[],A=[],f=[],d=B=0,O=k.length;B<O;d=++B){if(N=k[d],l=c[d],65535===N){s.push(0),A.push(0);break}if(N-(C=n[N].new)>=32768)for(s.push(0),A.push(2*(f.length+S-d)),r=F=N;N<=l?F<=l:F>=l;r=N<=l?++F:--F)f.push(n[r].new);else s.push(C-N),A.push(0)}for(P.writeUInt16(3),P.writeUInt16(1),P.writeUInt32(12),P.writeUInt16(4),P.writeUInt16(16+8*S+2*f.length),P.writeUInt16(0),P.writeUInt16(L),P.writeUInt16(_),P.writeUInt16(h),P.writeUInt16(x),U=0,j=c.length;U<j;U++)r=c[U],P.writeUInt16(r);for(P.writeUInt16(0),H=0,R=k.length;H<R;H++)r=k[H],P.writeUInt16(r);for(V=0,D=s.length;V<D;V++)a=s[V],P.writeUInt16(a);for(G=0,q=A.length;G<q;G++)b=A[G],P.writeUInt16(b);for(Y=0,z=f.length;Y<z;Y++)p=f[Y],P.writeUInt16(p);return{charMap:n,subtable:P.data,maxGlyphID:y+1}}},t}(),$e=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return Xe(e,We),e.prototype.tag="cmap",e.prototype.parse=function(t){var e,n,r;for(t.pos=this.offset,this.version=t.readUInt16(),r=t.readUInt16(),this.tables=[],this.unicode=null,n=0;0<=r?n<r:n>r;n=0<=r?++n:--n)e=new Ke(t,this.offset),this.tables.push(e),e.isUnicode&&null==this.unicode&&(this.unicode=e);return!0},e.encode=function(t,e){var n,r;return null==e&&(e="macroman"),n=Ke.encode(t,e),(r=new Ve).writeUInt16(0),r.writeUInt16(1),n.table=r.data.concat(n.subtable),n},e}(),Ze=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return Xe(e,We),e.prototype.tag="hhea",e.prototype.parse=function(t){return t.pos=this.offset,this.version=t.readInt(),this.ascender=t.readShort(),this.decender=t.readShort(),this.lineGap=t.readShort(),this.advanceWidthMax=t.readShort(),this.minLeftSideBearing=t.readShort(),this.minRightSideBearing=t.readShort(),this.xMaxExtent=t.readShort(),this.caretSlopeRise=t.readShort(),this.caretSlopeRun=t.readShort(),this.caretOffset=t.readShort(),t.pos+=8,this.metricDataFormat=t.readShort(),this.numberOfMetrics=t.readUInt16()},e}(),Qe=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return Xe(e,We),e.prototype.tag="OS/2",e.prototype.parse=function(t){if(t.pos=this.offset,this.version=t.readUInt16(),this.averageCharWidth=t.readShort(),this.weightClass=t.readUInt16(),this.widthClass=t.readUInt16(),this.type=t.readShort(),this.ySubscriptXSize=t.readShort(),this.ySubscriptYSize=t.readShort(),this.ySubscriptXOffset=t.readShort(),this.ySubscriptYOffset=t.readShort(),this.ySuperscriptXSize=t.readShort(),this.ySuperscriptYSize=t.readShort(),this.ySuperscriptXOffset=t.readShort(),this.ySuperscriptYOffset=t.readShort(),this.yStrikeoutSize=t.readShort(),this.yStrikeoutPosition=t.readShort(),this.familyClass=t.readShort(),this.panose=function(){var e,n;for(n=[],e=0;e<10;++e)n.push(t.readByte());return n}(),this.charRange=function(){var e,n;for(n=[],e=0;e<4;++e)n.push(t.readInt());return n}(),this.vendorID=t.readString(4),this.selection=t.readShort(),this.firstCharIndex=t.readShort(),this.lastCharIndex=t.readShort(),this.version>0&&(this.ascent=t.readShort(),this.descent=t.readShort(),this.lineGap=t.readShort(),this.winAscent=t.readShort(),this.winDescent=t.readShort(),this.codePageRange=function(){var e,n;for(n=[],e=0;e<2;e=++e)n.push(t.readInt());return n}(),this.version>1))return this.xHeight=t.readShort(),this.capHeight=t.readShort(),this.defaultChar=t.readShort(),this.breakChar=t.readShort(),this.maxContext=t.readShort()},e}(),tn=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return Xe(e,We),e.prototype.tag="post",e.prototype.parse=function(t){var e,n,r;switch(t.pos=this.offset,this.format=t.readInt(),this.italicAngle=t.readInt(),this.underlinePosition=t.readShort(),this.underlineThickness=t.readShort(),this.isFixedPitch=t.readInt(),this.minMemType42=t.readInt(),this.maxMemType42=t.readInt(),this.minMemType1=t.readInt(),this.maxMemType1=t.readInt(),this.format){case 65536:case 196608:break;case 131072:var i;for(n=t.readUInt16(),this.glyphNameIndex=[],i=0;0<=n?i<n:i>n;i=0<=n?++i:--i)this.glyphNameIndex.push(t.readUInt16());for(this.names=[],r=[];t.pos<this.offset+this.length;)e=t.readByte(),r.push(this.names.push(t.readString(e)));return r;case 151552:return n=t.readUInt16(),this.offsets=t.read(n);case 262144:return this.map=function(){var e,n,r;for(r=[],i=e=0,n=this.file.maxp.numGlyphs;0<=n?e<n:e>n;i=0<=n?++e:--e)r.push(t.readUInt32());return r}.call(this)}},e}(),en=function(t,e){this.raw=t,this.length=t.length,this.platformID=e.platformID,this.encodingID=e.encodingID,this.languageID=e.languageID},nn=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return Xe(e,We),e.prototype.tag="name",e.prototype.parse=function(t){var e,n,r,i,o,a,s,u,l,c,h;for(t.pos=this.offset,t.readShort(),e=t.readShort(),a=t.readShort(),n=[],i=0;0<=e?i<e:i>e;i=0<=e?++i:--i)n.push({platformID:t.readShort(),encodingID:t.readShort(),languageID:t.readShort(),nameID:t.readShort(),length:t.readShort(),offset:this.offset+a+t.readShort()});for(s={},i=l=0,c=n.length;l<c;i=++l)r=n[i],t.pos=r.offset,u=t.readString(r.length),o=new en(u,r),null==s[h=r.nameID]&&(s[h]=[]),s[r.nameID].push(o);this.strings=s,this.copyright=s[0],this.fontFamily=s[1],this.fontSubfamily=s[2],this.uniqueSubfamily=s[3],this.fontName=s[4],this.version=s[5];try{this.postscriptName=s[6][0].raw.replace(/[\x00-\x19\x80-\xff]/g,"")}catch(t){this.postscriptName=s[4][0].raw.replace(/[\x00-\x19\x80-\xff]/g,"")}return this.trademark=s[7],this.manufacturer=s[8],this.designer=s[9],this.description=s[10],this.vendorUrl=s[11],this.designerUrl=s[12],this.license=s[13],this.licenseUrl=s[14],this.preferredFamily=s[15],this.preferredSubfamily=s[17],this.compatibleFull=s[18],this.sampleText=s[19]},e}(),rn=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return Xe(e,We),e.prototype.tag="maxp",e.prototype.parse=function(t){return t.pos=this.offset,this.version=t.readInt(),this.numGlyphs=t.readUInt16(),this.maxPoints=t.readUInt16(),this.maxContours=t.readUInt16(),this.maxCompositePoints=t.readUInt16(),this.maxComponentContours=t.readUInt16(),this.maxZones=t.readUInt16(),this.maxTwilightPoints=t.readUInt16(),this.maxStorage=t.readUInt16(),this.maxFunctionDefs=t.readUInt16(),this.maxInstructionDefs=t.readUInt16(),this.maxStackElements=t.readUInt16(),this.maxSizeOfInstructions=t.readUInt16(),this.maxComponentElements=t.readUInt16(),this.maxComponentDepth=t.readUInt16()},e}(),on=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return Xe(e,We),e.prototype.tag="hmtx",e.prototype.parse=function(t){var e,n,r,i,o,a,s;for(t.pos=this.offset,this.metrics=[],e=0,a=this.file.hhea.numberOfMetrics;0<=a?e<a:e>a;e=0<=a?++e:--e)this.metrics.push({advance:t.readUInt16(),lsb:t.readInt16()});for(r=this.file.maxp.numGlyphs-this.file.hhea.numberOfMetrics,this.leftSideBearings=function(){var n,i;for(i=[],e=n=0;0<=r?n<r:n>r;e=0<=r?++n:--n)i.push(t.readInt16());return i}(),this.widths=function(){var t,e,n,r;for(r=[],t=0,e=(n=this.metrics).length;t<e;t++)i=n[t],r.push(i.advance);return r}.call(this),n=this.widths[this.widths.length-1],s=[],e=o=0;0<=r?o<r:o>r;e=0<=r?++o:--o)s.push(this.widths.push(n));return s},e.prototype.forGlyph=function(t){return t in this.metrics?this.metrics[t]:{advance:this.metrics[this.metrics.length-1].advance,lsb:this.leftSideBearings[t-this.metrics.length]}},e}(),an=[].slice,sn=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return Xe(e,We),e.prototype.tag="glyf",e.prototype.parse=function(){return this.cache={}},e.prototype.glyphFor=function(t){var e,n,r,i,o,a,s,u,l,c;return t in this.cache?this.cache[t]:(i=this.file.loca,e=this.file.contents,n=i.indexOf(t),0===(r=i.lengthOf(t))?this.cache[t]=null:(e.pos=this.offset+n,o=(a=new Ve(e.read(r))).readShort(),u=a.readShort(),c=a.readShort(),s=a.readShort(),l=a.readShort(),this.cache[t]=-1===o?new ln(a,u,c,s,l):new un(a,o,u,c,s,l),this.cache[t]))},e.prototype.encode=function(t,e,n){var r,i,o,a,s;for(o=[],i=[],a=0,s=e.length;a<s;a++)r=t[e[a]],i.push(o.length),r&&(o=o.concat(r.encode(n)));return i.push(o.length),{table:o,offsets:i}},e}(),un=function(){function t(t,e,n,r,i,o){this.raw=t,this.numberOfContours=e,this.xMin=n,this.yMin=r,this.xMax=i,this.yMax=o,this.compound=!1}return t.prototype.encode=function(){return this.raw.data},t}(),ln=function(){function t(t,e,n,r,i){var o,a;for(this.raw=t,this.xMin=e,this.yMin=n,this.xMax=r,this.yMax=i,this.compound=!0,this.glyphIDs=[],this.glyphOffsets=[],o=this.raw;a=o.readShort(),this.glyphOffsets.push(o.pos),this.glyphIDs.push(o.readUInt16()),32&a;)o.pos+=1&a?4:2,128&a?o.pos+=8:64&a?o.pos+=4:8&a&&(o.pos+=2)}return t.prototype.encode=function(){var t,e,n;for(e=new Ve(an.call(this.raw.data)),t=0,n=this.glyphIDs.length;t<n;++t)e.pos=this.glyphOffsets[t];return e.data},t}(),cn=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return Xe(e,We),e.prototype.tag="loca",e.prototype.parse=function(t){var e,n;return t.pos=this.offset,e=this.file.head.indexToLocFormat,this.offsets=0===e?function(){var e,r;for(r=[],n=0,e=this.length;n<e;n+=2)r.push(2*t.readUInt16());return r}.call(this):function(){var e,r;for(r=[],n=0,e=this.length;n<e;n+=4)r.push(t.readUInt32());return r}.call(this)},e.prototype.indexOf=function(t){return this.offsets[t]},e.prototype.lengthOf=function(t){return this.offsets[t+1]-this.offsets[t]},e.prototype.encode=function(t,e){for(var n=new Uint32Array(this.offsets.length),r=0,i=0,o=0;o<n.length;++o)if(n[o]=r,i<e.length&&e[i]==o){++i,n[o]=r;var a=this.offsets[o],s=this.offsets[o+1]-a;s>0&&(r+=s)}for(var u=new Array(4*n.length),l=0;l<n.length;++l)u[4*l+3]=255&n[l],u[4*l+2]=(65280&n[l])>>8,u[4*l+1]=(16711680&n[l])>>16,u[4*l]=(4278190080&n[l])>>24;return u},e}(),hn=function(){function t(t){this.font=t,this.subset={},this.unicodes={},this.next=33}return t.prototype.generateCmap=function(){var t,e,n,r,i;for(e in r=this.font.cmap.tables[0].codeMap,t={},i=this.subset)n=i[e],t[e]=r[n];return t},t.prototype.glyphsFor=function(t){var e,n,r,i,o,a,s;for(r={},o=0,a=t.length;o<a;o++)r[i=t[o]]=this.font.glyf.glyphFor(i);for(i in e=[],r)(null!=(n=r[i])?n.compound:void 0)&&e.push.apply(e,n.glyphIDs);if(e.length>0)for(i in s=this.glyphsFor(e))n=s[i],r[i]=n;return r},t.prototype.encode=function(t,e){var n,r,i,o,a,s,u,l,c,h,f,d,p,g,m;for(r in n=$e.encode(this.generateCmap(),"unicode"),o=this.glyphsFor(t),f={0:0},m=n.charMap)f[(s=m[r]).old]=s.new;for(d in h=n.maxGlyphID,o)d in f||(f[d]=h++);return l=function(t){var e,n;for(e in n={},t)n[t[e]]=e;return n}(f),c=Object.keys(l).sort((function(t,e){return t-e})),p=function(){var t,e,n;for(n=[],t=0,e=c.length;t<e;t++)a=c[t],n.push(l[a]);return n}(),i=this.font.glyf.encode(o,p,f),u=this.font.loca.encode(i.offsets,p),g={cmap:this.font.cmap.raw(),glyf:i.table,loca:u,hmtx:this.font.hmtx.raw(),hhea:this.font.hhea.raw(),maxp:this.font.maxp.raw(),post:this.font.post.raw(),name:this.font.name.raw(),head:this.font.head.encode(e)},this.font.os2.exists&&(g["OS/2"]=this.font.os2.raw()),this.font.directory.encode(g)},t}();Lt.API.PDFObject=function(){var t;function e(){}return t=function(t,e){return(Array(e+1).join("0")+t).slice(-e)},e.convert=function(n){var r,i,o,a;if(Array.isArray(n))return"["+function(){var t,i,o;for(o=[],t=0,i=n.length;t<i;t++)r=n[t],o.push(e.convert(r));return o}().join(" ")+"]";if("string"==typeof n)return"/"+n;if(null!=n?n.isString:void 0)return"("+n+")";if(n instanceof Date)return"(D:"+t(n.getUTCFullYear(),4)+t(n.getUTCMonth(),2)+t(n.getUTCDate(),2)+t(n.getUTCHours(),2)+t(n.getUTCMinutes(),2)+t(n.getUTCSeconds(),2)+"Z)";if("[object Object]"==={}.toString.call(n)){for(i in o=["<<"],n)a=n[i],o.push("/"+i+" "+e.convert(a));return o.push(">>"),o.join("\n")}return""+n},e}();const fn=Lt},4339:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>v});var r=n(3379),i=n.n(r),o=n(7795),a=n.n(o),s=n(569),u=n.n(s),l=n(3565),c=n.n(l),h=n(9216),f=n.n(h),d=n(4589),p=n.n(d),g=n(3114),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),i()(g.Z,m);const v=g.Z&&g.Z.locals?g.Z.locals:void 0},8932:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>v});var r=n(3379),i=n.n(r),o=n(7795),a=n.n(o),s=n(569),u=n.n(s),l=n(3565),c=n.n(l),h=n(9216),f=n.n(h),d=n(4589),p=n.n(d),g=n(2439),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),i()(g.Z,m);const v=g.Z&&g.Z.locals?g.Z.locals:void 0},3430:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>v});var r=n(3379),i=n.n(r),o=n(7795),a=n.n(o),s=n(569),u=n.n(s),l=n(3565),c=n.n(l),h=n(9216),f=n.n(h),d=n(4589),p=n.n(d),g=n(6658),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),i()(g.Z,m);const v=g.Z&&g.Z.locals?g.Z.locals:void 0},7233:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>v});var r=n(3379),i=n.n(r),o=n(7795),a=n.n(o),s=n(569),u=n.n(s),l=n(3565),c=n.n(l),h=n(9216),f=n.n(h),d=n(4589),p=n.n(d),g=n(2175),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),i()(g.Z,m);const v=g.Z&&g.Z.locals?g.Z.locals:void 0},3379:t=>{"use strict";var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var o={},a=[],s=0;s<t.length;s++){var u=t[s],l=r.base?u[0]+r.base:u[0],c=o[l]||0,h="".concat(l," ").concat(c);o[l]=c+1;var f=n(h),d={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==f)e[f].references++,e[f].updater(d);else{var p=i(d,r);r.byIndex=s,e.splice(s,0,{identifier:h,updater:p,references:1})}a.push(h)}return a}function i(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,i){var o=r(t=t||[],i=i||{});return function(t){t=t||[];for(var a=0;a<o.length;a++){var s=n(o[a]);e[s].references--}for(var u=r(t,i),l=0;l<o.length;l++){var c=n(o[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=u}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},9216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},3565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},7795:t=>{"use strict";t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,i&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},4589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},3730:(t,e,n)=>{"use strict";n.r(e),n.d(e,{svg2pdf:()=>Wt});var r=n(8820),i=n.n(r),o=n(3804),a=n.n(o),s=n(1006),u=n(6721),l=n.n(u),c=function(t){var e,n,r=t,i={a:0,b:0,c:0},o=[];return e=function(e,n){var a,s,u,l,c,h;if(e.test(r))for(s=0,u=(a=r.match(e)).length;s<u;s+=1)i[n]+=1,l=a[s],c=r.indexOf(l),h=l.length,o.push({selector:t.substr(c,h),type:n,index:c,length:h}),r=r.replace(l,Array(h+1).join(" "))},(n=function(t){var e,n,i,o;if(t.test(r))for(n=0,i=(e=r.match(t)).length;n<i;n+=1)o=e[n],r=r.replace(o,Array(o.length+1).join("A"))})(/\\[0-9A-Fa-f]{6}\s?/g),n(/\\[0-9A-Fa-f]{1,5}\s/g),n(/\\./g),function(){var t,e,n,i,o=/{[^]*/gm;if(o.test(r))for(e=0,n=(t=r.match(o)).length;e<n;e+=1)i=t[e],r=r.replace(i,Array(i.length+1).join(" "))}(),e(/(\[[^\]]+\])/g,"b"),e(/(#[^\#\s\+>~\.\[:\)]+)/g,"a"),e(/(\.[^\s\+>~\.\[:\)]+)/g,"b"),e(/(::[^\s\+>~\.\[:]+|:first-line|:first-letter|:before|:after)/gi,"c"),e(/(:(?!not|global|local)[\w-]+\([^\)]*\))/gi,"b"),e(/(:(?!not|global|local)[^\s\+>~\.\[:]+)/g,"b"),r=(r=(r=(r=(r=(r=r.replace(/[\*\s\+>~]/g," ")).replace(/[#\.]/g," ")).replace(/:not/g,"    ")).replace(/:local/g,"      ")).replace(/:global/g,"       ")).replace(/[\(\)]/g," "),e(/([^\s\+>~\.\[:]+)/g,"c"),o.sort((function(t,e){return t.index-e.index})),{selector:t,specificity:"0,"+i.a.toString()+","+i.b.toString()+","+i.c.toString(),specificityArray:[0,i.a,i.b,i.c],parts:o}},h=function(t,e){return(h=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function f(t,e){function n(){this.constructor=t}h(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var d=function(){return(d=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};function p(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((r=r.apply(t,e||[])).next())}))}function g(t,e){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}}var m=function(){function t(t){if(this.a=void 0,this.r=0,this.g=0,this.b=0,this.simpleColors={},this.colorDefs=[],this.ok=!1,t){for(var e in"#"==t.charAt(0)&&(t=t.substr(1,6)),t=(t=t.replace(/ /g,"")).toLowerCase(),this.simpleColors={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgrey:"a9a9a9",darkgreen:"006400",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",feldspar:"d19275",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",grey:"808080",green:"008000",greenyellow:"adff2f",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgrey:"d3d3d3",lightgreen:"90ee90",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslateblue:"8470ff",lightslategray:"778899",lightslategrey:"778899",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"00ff00",limegreen:"32cd32",linen:"faf0e6",magenta:"ff00ff",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370d8",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"d87093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",red:"ff0000",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",violetred:"d02090",wheat:"f5deb3",white:"ffffff",whitesmoke:"f5f5f5",yellow:"ffff00",yellowgreen:"9acd32"},this.simpleColors)t==e&&(t=this.simpleColors[e]);this.colorDefs=[{re:/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,example:["rgb(123, 234, 45)","rgb(255,234,245)"],process:function(t){return[parseInt(t[1]),parseInt(t[2]),parseInt(t[3])]}},{re:/^(\w{2})(\w{2})(\w{2})$/,example:["#00ff00","336699"],process:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/^(\w{1})(\w{1})(\w{1})$/,example:["#fb0","f0f"],process:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}}];for(var n=0;n<this.colorDefs.length;n++){var r=this.colorDefs[n].re,i=this.colorDefs[n].process,o=r.exec(t);if(o){var a=i(o);this.r=a[0],this.g=a[1],this.b=a[2],this.ok=!0}}this.r=this.r<0||isNaN(this.r)?0:this.r>255?255:this.r,this.g=this.g<0||isNaN(this.g)?0:this.g>255?255:this.g,this.b=this.b<0||isNaN(this.b)?0:this.b>255?255:this.b}}return t.prototype.toRGB=function(){return"rgb("+this.r+", "+this.g+", "+this.b+")"},t.prototype.toRGBA=function(){return"rgba("+this.r+", "+this.g+", "+this.b+", "+(this.a||"1")+")"},t.prototype.toHex=function(){var t=this.r.toString(16),e=this.g.toString(16),n=this.b.toString(16);return 1==t.length&&(t="0"+t),1==e.length&&(e="0"+e),1==n.length&&(n="0"+n),"#"+t+e+n},t.prototype.getHelpXML=function(){for(var e=[],n=0;n<this.colorDefs.length;n++)for(var r=this.colorDefs[n].example,i=0;i<r.length;i++)e[e.length]=r[i];for(var o in this.simpleColors)e[e.length]=o;var a=document.createElement("ul");for(a.setAttribute("id","rgbcolor-examples"),n=0;n<e.length;n++)try{var s=document.createElement("li"),u=new t(e[n]),l=document.createElement("div");l.style.cssText="margin: 3px; border: 1px solid black; background:"+u.toHex()+"; color:"+u.toHex(),l.appendChild(document.createTextNode("test"));var c=document.createTextNode(" "+e[n]+" -> "+u.toRGB()+" -> "+u.toHex());s.appendChild(l),s.appendChild(c),a.appendChild(s)}catch(t){}return a},t}(),v=function(){function t(t){this.color=t}return t.prototype.getFillData=function(t,e){return p(this,void 0,void 0,(function(){return g(this,(function(t){return[2,void 0]}))}))},t}(),y=function(){function t(){this.xmlSpace="",this.fill=null,this.fillOpacity=1,this.fontFamily="",this.fontSize=16,this.fontStyle="",this.fontWeight="",this.opacity=1,this.stroke=null,this.strokeDasharray=null,this.strokeDashoffset=0,this.strokeLinecap="",this.strokeLinejoin="",this.strokeMiterlimit=4,this.strokeOpacity=1,this.strokeWidth=1,this.alignmentBaseline="",this.textAnchor="",this.visibility="",this.color=null}return t.prototype.clone=function(){var e=new t;return e.xmlSpace=this.xmlSpace,e.fill=this.fill,e.fillOpacity=this.fillOpacity,e.fontFamily=this.fontFamily,e.fontSize=this.fontSize,e.fontStyle=this.fontStyle,e.fontWeight=this.fontWeight,e.opacity=this.opacity,e.stroke=this.stroke,e.strokeDasharray=this.strokeDasharray,e.strokeDashoffset=this.strokeDashoffset,e.strokeLinecap=this.strokeLinecap,e.strokeLinejoin=this.strokeLinejoin,e.strokeMiterlimit=this.strokeMiterlimit,e.strokeOpacity=this.strokeOpacity,e.strokeWidth=this.strokeWidth,e.textAnchor=this.textAnchor,e.alignmentBaseline=this.alignmentBaseline,e.visibility=this.visibility,e.color=this.color,e},t.default=function(){var e=new t;return e.xmlSpace="default",e.fill=new v(new m("rgb(0, 0, 0)")),e.fillOpacity=1,e.fontFamily="times",e.fontSize=16,e.fontStyle="normal",e.fontWeight="normal",e.opacity=1,e.stroke=null,e.strokeDasharray=null,e.strokeDashoffset=0,e.strokeLinecap="butt",e.strokeLinejoin="miter",e.strokeMiterlimit=4,e.strokeOpacity=1,e.strokeWidth=1,e.alignmentBaseline="baseline",e.textAnchor="start",e.visibility="visible",e.color=new m("rgb(0, 0, 0)"),e},t}(),b=function(){function t(t,e){var n,r,i;this.pdf=t,this.svg2pdfParameters=e.svg2pdfParameters,this.attributeState=e.attributeState?e.attributeState.clone():y.default(),this.viewport=e.viewport,this.refsHandler=e.refsHandler,this.styleSheets=e.styleSheets,this.textMeasure=e.textMeasure,this.transform=null!==(n=e.transform)&&void 0!==n?n:this.pdf.unitMatrix,this.withinClipPath=null!==(r=e.withinClipPath)&&void 0!==r&&r,this.withinUse=null!==(i=e.withinUse)&&void 0!==i&&i}return t.prototype.clone=function(e){var n,r,i,o;return void 0===e&&(e={}),new t(this.pdf,{svg2pdfParameters:this.svg2pdfParameters,attributeState:e.attributeState?e.attributeState.clone():this.attributeState.clone(),viewport:null!==(n=e.viewport)&&void 0!==n?n:this.viewport,refsHandler:this.refsHandler,styleSheets:this.styleSheets,textMeasure:this.textMeasure,transform:null!==(r=e.transform)&&void 0!==r?r:this.transform,withinClipPath:null!==(i=e.withinClipPath)&&void 0!==i?i:this.withinClipPath,withinUse:null!==(o=e.withinUse)&&void 0!==o?o:this.withinUse})},t}(),w=function(){function t(e){this.renderedElements={},this.idMap=e,this.idPrefix=String(t.instanceCounter++)}return t.prototype.getRendered=function(t,e,n){return p(this,void 0,void 0,(function(){var r,i;return g(this,(function(o){switch(o.label){case 0:return r=this.generateKey(t,e),this.renderedElements.hasOwnProperty(r)?[2,this.renderedElements[t]]:(i=this.get(t),this.renderedElements[r]=i,[4,n(i)]);case 1:return o.sent(),[2,i]}}))}))},t.prototype.get=function(t){return this.idMap[i()(t,{isIdentifier:!0})]},t.prototype.generateKey=function(t,e){return this.idPrefix+"|"+t+"|"+(e||new m("rgb(0,0,0)")).toRGBA()},t.instanceCounter=0,t}();function A(t,e){return Math.atan2(e[1]-t[1],e[0]-t[0])}function x(t,e){return[2/3*(e[0]-t[0])+t[0],2/3*(e[1]-t[1])+t[1]]}function _(t){var e=Math.sqrt(t[0]*t[0]+t[1]*t[1]);return[t[0]/e,t[1]/e]}function S(t,e){return _([e[0]-t[0],e[1]-t[1]])}function L(t,e){return[t[0]+e[0],t[1]+e[1]]}function N(t,e){var n=t[0],r=t[1];return[e.a*n+e.c*r+e.e,e.b*n+e.d*r+e.f]}var k=function(){function t(){this.segments=[]}return t.prototype.moveTo=function(t,e){return this.segments.push(new C(t,e)),this},t.prototype.lineTo=function(t,e){return this.segments.push(new P(t,e)),this},t.prototype.curveTo=function(t,e,n,r,i,o){return this.segments.push(new I(t,e,n,r,i,o)),this},t.prototype.close=function(){return this.segments.push(new M),this},t.prototype.transform=function(t){this.segments.forEach((function(e){if(e instanceof C||e instanceof P||e instanceof I){var n=N([e.x,e.y],t);e.x=n[0],e.y=n[1]}if(e instanceof I){var r=N([e.x1,e.y1],t),i=N([e.x2,e.y2],t);e.x1=r[0],e.y1=r[1],e.x2=i[0],e.y2=i[1]}}))},t.prototype.draw=function(t){var e=t.pdf;this.segments.forEach((function(t){t instanceof C?e.moveTo(t.x,t.y):t instanceof P?e.lineTo(t.x,t.y):t instanceof I?e.curveTo(t.x1,t.y1,t.x2,t.y2,t.x,t.y):e.close()}))},t}(),C=function(t,e){this.x=t,this.y=e},P=function(t,e){this.x=t,this.y=e},I=function(t,e,n,r,i,o){this.x1=t,this.y1=e,this.x2=n,this.y2=r,this.x=i,this.y=o},M=function(){};function B(t,e){return e.split(",").indexOf((t.nodeName||t.tagName).toLowerCase())>=0}function F(t,e,n,r){var i;return void 0===r&&(r=n),(null===(i=t.style)||void 0===i?void 0:i.getPropertyValue(r))||e.getPropertyValue(t,r)||t.hasAttribute(n)&&t.getAttribute(n)||void 0}function T(t,e,n){if("none"===F(t.element,n.styleSheets,"display"))return!1;var r=e,i=F(t.element,n.styleSheets,"visibility");return i&&(r="hidden"!==i),r}function E(t,e,n){var r=T(t,e,n);return 0!==t.element.childNodes.length&&(t.children.forEach((function(t){t.isVisible(r,n)&&(r=!0)})),r)}var O=function(){function t(){this.markers=[]}return t.prototype.addMarker=function(t){this.markers.push(t)},t.prototype.draw=function(t){return p(this,void 0,void 0,(function(){var e,n,r,i,o,a,s;return g(this,(function(u){switch(u.label){case 0:e=0,u.label=1;case 1:return e<this.markers.length?(n=this.markers[e],r=void 0,i=n.angle,o=n.anchor,a=Math.cos(i),s=Math.sin(i),r=t.pdf.Matrix(a,s,-s,a,o[0],o[1]),r=t.pdf.matrixMult(t.pdf.Matrix(t.attributeState.strokeWidth,0,0,t.attributeState.strokeWidth,0,0),r),r=t.pdf.matrixMult(r,t.transform),t.pdf.saveGraphicsState(),[4,t.refsHandler.getRendered(n.id,null,(function(e){return e.apply(t)}))]):[3,4];case 2:u.sent(),t.pdf.doFormObject(n.id,r),t.pdf.restoreGraphicsState(),u.label=3;case 3:return e++,[3,1];case 4:return[2]}}))}))},t}(),j=function(t,e,n){this.id=t,this.anchor=e,this.angle=n},R=/url\(["']?#([^"']+)["']?\)/,D={bottom:"bottom","text-bottom":"bottom",top:"top","text-top":"top",hanging:"hanging",middle:"middle",central:"middle",center:"middle",mathematical:"middle",ideographic:"ideographic",alphabetic:"alphabetic",baseline:"alphabetic"};function q(t,e){var n;return(n=t&&t.toString().match(/^([\-0-9.]+)em$/))?parseFloat(n[1])*e:(n=t&&t.toString().match(/^([\-0-9.]+)(px|)$/))?parseFloat(n[1]):0}function z(t){return D[t]||"alphabetic"}function U(t){for(var e,n=[],r=/[+-]?(?:(?:\d+\.?\d*)|(?:\d*\.?\d+))(?:[eE][+-]?\d+)?/g;e=r.exec(t);)n.push(parseFloat(e[0]));return n}function H(t,e){if("transparent"===t){var n=new m("rgb(0,0,0)");return n.a=0,n}if("currentcolor"===t.toLowerCase())return e||new m("rgb(0,0,0)");var r=/\s*rgba\(((?:[^,\)]*,){3}[^,\)]*)\)\s*/.exec(t);if(r){var i=U(r[1]),o=new m("rgb("+i.slice(0,3).join(",")+")");return o.a=i[3],o}return new m(t)}var W,V={"sans-serif":"helvetica",verdana:"helvetica",arial:"helvetica",fixed:"courier",monospace:"courier",terminal:"courier",serif:"times",cursive:"times",fantasy:"times"},G=(W=s.default.version.split("."),2===parseFloat(W[0])&&3===parseFloat(W[1]));function Y(t,e){return G?400==e?"italic"==t?"italic":"normal":700==e&&"italic"!==t?"bold":t+""+e:400==e||"normal"===e?"italic"===t?"italic":"normal":700!=e&&"bold"!==e||"normal"!==t?(700==e?"bold":e)+""+t:"bold"}function X(t,e){if("none"===F(e.element,t.styleSheets,"display"))return[0,0,0,0];var n=[0,0,0,0];return e.children.forEach((function(e){var r=e.getBoundingBox(t);n=[Math.min(n[0],r[0]),Math.min(n[1],r[1]),Math.max(n[0]+n[2],r[0]+r[2])-Math.min(n[0],r[0]),Math.max(n[1]+n[3],r[1]+r[3])-Math.min(n[1],r[1])]})),n}function J(t,e){var n=parseFloat,r=n(t.getAttribute("x1"))||n(F(t,e.styleSheets,"x"))||n(F(t,e.styleSheets,"cx"))-n(F(t,e.styleSheets,"r"))||0,i=n(t.getAttribute("x2"))||r+n(F(t,e.styleSheets,"width"))||n(F(t,e.styleSheets,"cx"))+n(F(t,e.styleSheets,"r"))||0,o=n(t.getAttribute("y1"))||n(F(t,e.styleSheets,"y"))||n(F(t,e.styleSheets,"cy"))-n(F(t,e.styleSheets,"r"))||0,a=n(t.getAttribute("y2"))||o+n(F(t,e.styleSheets,"height"))||n(F(t,e.styleSheets,"cy"))+n(F(t,e.styleSheets,"r"))||0;return[Math.min(r,i),Math.min(o,a),Math.max(r,i)-Math.min(r,i),Math.max(o,a)-Math.min(o,a)]}function K(t,e,n,r,i,o,a,s){void 0===s&&(s=!1);var u,l,c=e[0],h=e[1],f=e[2],d=e[3],p=i/f,g=o/d,m=t.getAttribute("preserveAspectRatio");if(m){var v=m.split(" ");"defer"===v[0]&&(v=v.slice(1)),u=v[0],l=v[1]||"meet"}else u="xMidYMid",l="meet";if("none"!==u&&("meet"===l?p=g=Math.min(p,g):"slice"===l&&(p=g=Math.max(p,g))),s)return a.pdf.Matrix(p,0,0,g,0,0);var y=n-c*p,b=r-h*g;u.indexOf("xMid")>=0?y+=(i-f*p)/2:u.indexOf("xMax")>=0&&(y+=i-f*p),u.indexOf("YMid")>=0?b+=(o-d*g)/2:u.indexOf("YMax")>=0&&(b+=o-d*g);var w=a.pdf.Matrix(1,0,0,1,y,b),A=a.pdf.Matrix(p,0,0,g,0,0);return a.pdf.matrixMult(A,w)}function $(t,e){if(!t||"none"===t)return e.pdf.unitMatrix;for(var n,r,i=/^[\s,]*matrix\(([^)]+)\)\s*/,o=/^[\s,]*translate\(([^)]+)\)\s*/,a=/^[\s,]*rotate\(([^)]+)\)\s*/,s=/^[\s,]*scale\(([^)]+)\)\s*/,u=/^[\s,]*skewX\(([^)]+)\)\s*/,l=/^[\s,]*skewY\(([^)]+)\)\s*/,c=e.pdf.unitMatrix;t.length>0&&t.length!==r;){r=t.length;var h=i.exec(t);if(h&&(n=U(h[1]),c=e.pdf.matrixMult(e.pdf.Matrix(n[0],n[1],n[2],n[3],n[4],n[5]),c),t=t.substr(h[0].length)),h=a.exec(t)){n=U(h[1]);var f=Math.PI*n[0]/180;if(c=e.pdf.matrixMult(e.pdf.Matrix(Math.cos(f),Math.sin(f),-Math.sin(f),Math.cos(f),0,0),c),n[1]||n[2]){var d=e.pdf.Matrix(1,0,0,1,n[1],n[2]),p=e.pdf.Matrix(1,0,0,1,-n[1],-n[2]);c=e.pdf.matrixMult(p,e.pdf.matrixMult(c,d))}t=t.substr(h[0].length)}(h=o.exec(t))&&(n=U(h[1]),c=e.pdf.matrixMult(e.pdf.Matrix(1,0,0,1,n[0],n[1]||0),c),t=t.substr(h[0].length)),(h=s.exec(t))&&((n=U(h[1]))[1]||(n[1]=n[0]),c=e.pdf.matrixMult(e.pdf.Matrix(n[0],0,0,n[1],0,0),c),t=t.substr(h[0].length)),(h=u.exec(t))&&(n=parseFloat(h[1]),n*=Math.PI/180,c=e.pdf.matrixMult(e.pdf.Matrix(1,0,Math.tan(n),1,0,0),c),t=t.substr(h[0].length)),(h=l.exec(t))&&(n=parseFloat(h[1]),n*=Math.PI/180,c=e.pdf.matrixMult(e.pdf.Matrix(1,Math.tan(n),0,1,0,0),c),t=t.substr(h[0].length))}return c}var Z=function(){function t(t,e){this.element=t,this.children=e,this.parent=null}return t.prototype.setParent=function(t){this.parent=t},t.prototype.getParent=function(){return this.parent},t.prototype.getBoundingBox=function(t){return"none"===F(this.element,t.styleSheets,"display")?[0,0,0,0]:this.getBoundingBoxCore(t)},t.prototype.computeNodeTransform=function(t){var e=this.computeNodeTransformCore(t),n=F(this.element,t.styleSheets,"transform");return n?t.pdf.matrixMult(e,$(n,t)):e},t}(),Q=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return f(e,t),e.prototype.render=function(t){return Promise.resolve()},e.prototype.getBoundingBoxCore=function(t){return[]},e.prototype.computeNodeTransformCore=function(t){return t.pdf.unitMatrix},e}(Z),tt=function(t){function e(e,n,r){var i=t.call(this,n,r)||this;return i.pdfGradientType=e,i.contextColor=void 0,i}return f(e,t),e.prototype.apply=function(t){return p(this,void 0,void 0,(function(){var e,n,r,i,o,a;return g(this,(function(u){return(e=this.element.getAttribute("id"))?(n=this.getStops(t.styleSheets),r=0,i=!1,n.forEach((function(t){var e=t.opacity;e&&1!==e&&(r+=e,i=!0)})),i&&(o=new s.GState({opacity:r/n.length})),a=new s.ShadingPattern(this.pdfGradientType,this.getCoordinates(),n,o),t.pdf.addShadingPattern(e,a),[2]):[2]}))}))},e.prototype.getStops=function(t){var n=this;if(this.stops)return this.stops;if(void 0===this.contextColor){this.contextColor=null;for(var r=this;r;){var i=F(r.element,t,"color");if(i){this.contextColor=H(i,null);break}r=r.getParent()}}var o=[];return this.children.forEach((function(r){if("stop"===r.element.tagName.toLowerCase()){var i=F(r.element,t,"color"),a=H(F(r.element,t,"stop-color")||"",i?H(i,null):n.contextColor),s=parseFloat(F(r.element,t,"stop-opacity")||"1");o.push({offset:e.parseGradientOffset(r.element.getAttribute("offset")||"0"),color:[a.r,a.g,a.b],opacity:s})}})),this.stops=o},e.prototype.getBoundingBoxCore=function(t){return J(this.element,t)},e.prototype.computeNodeTransformCore=function(t){return t.pdf.unitMatrix},e.prototype.isVisible=function(t,e){return E(this,t,e)},e.parseGradientOffset=function(t){var e=parseFloat(t);return!isNaN(e)&&t.indexOf("%")>=0?e/100:e},e}(Q),et=function(t){function e(e,n){return t.call(this,"axial",e,n)||this}return f(e,t),e.prototype.getCoordinates=function(){return[parseFloat(this.element.getAttribute("x1")||"0"),parseFloat(this.element.getAttribute("y1")||"0"),parseFloat(this.element.getAttribute("x2")||"1"),parseFloat(this.element.getAttribute("y2")||"0")]},e}(tt),nt=function(t){function e(e,n){return t.call(this,"radial",e,n)||this}return f(e,t),e.prototype.getCoordinates=function(){var t=this.element.getAttribute("cx"),e=this.element.getAttribute("cy"),n=this.element.getAttribute("fx"),r=this.element.getAttribute("fy");return[parseFloat(n||t||"0.5"),parseFloat(r||e||"0.5"),0,parseFloat(t||"0.5"),parseFloat(e||"0.5"),parseFloat(this.element.getAttribute("r")||"0.5")]},e}(tt),rt=function(){function t(t,e){this.key=t,this.gradient=e}return t.prototype.getFillData=function(t,e){return p(this,void 0,void 0,(function(){var n,r,i;return g(this,(function(o){switch(o.label){case 0:return[4,e.refsHandler.getRendered(this.key,null,(function(t){return t.apply(new b(e.pdf,{refsHandler:e.refsHandler,textMeasure:e.textMeasure,styleSheets:e.styleSheets,viewport:e.viewport,svg2pdfParameters:e.svg2pdfParameters}))}))];case 1:return o.sent(),this.gradient.element.hasAttribute("gradientUnits")&&"objectboundingbox"!==this.gradient.element.getAttribute("gradientUnits").toLowerCase()?n=e.pdf.unitMatrix:(r=t.getBoundingBox(e),n=e.pdf.Matrix(r[2],0,0,r[3],r[0],r[1])),i=$(F(this.gradient.element,e.styleSheets,"gradientTransform","transform"),e),[2,{key:this.key,matrix:e.pdf.matrixMult(i,n)}]}}))}))},t}(),it=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return f(e,t),e.prototype.apply=function(t){return p(this,void 0,void 0,(function(){var e,n,r,i,o;return g(this,(function(a){switch(a.label){case 0:if(!(e=this.element.getAttribute("id")))return[2];n=this.getBoundingBox(t),r=new s.TilingPattern([n[0],n[1],n[0]+n[2],n[1]+n[3]],n[2],n[3]),t.pdf.beginTilingPattern(r),i=0,o=this.children,a.label=1;case 1:return i<o.length?[4,o[i].render(new b(t.pdf,{attributeState:t.attributeState,refsHandler:t.refsHandler,styleSheets:t.styleSheets,viewport:t.viewport,svg2pdfParameters:t.svg2pdfParameters,textMeasure:t.textMeasure}))]:[3,4];case 2:a.sent(),a.label=3;case 3:return i++,[3,1];case 4:return t.pdf.endTilingPattern(e,r),[2]}}))}))},e.prototype.getBoundingBoxCore=function(t){return J(this.element,t)},e.prototype.computeNodeTransformCore=function(t){return t.pdf.unitMatrix},e.prototype.isVisible=function(t,e){return E(this,t,e)},e}(Q),ot=function(){function t(t,e){this.key=t,this.pattern=e}return t.prototype.getFillData=function(t,e){return p(this,void 0,void 0,(function(){var n,r,i,o,a,s,u,l,c,h,f,d;return g(this,(function(p){switch(p.label){case 0:return[4,e.refsHandler.getRendered(this.key,null,(function(t){return t.apply(new b(e.pdf,{refsHandler:e.refsHandler,textMeasure:e.textMeasure,styleSheets:e.styleSheets,viewport:e.viewport,svg2pdfParameters:e.svg2pdfParameters}))}))];case 1:return p.sent(),n={key:this.key,boundingBox:void 0,xStep:0,yStep:0,matrix:void 0},i=e.pdf.unitMatrix,this.pattern.element.hasAttribute("patternUnits")&&"objectboundingbox"!==this.pattern.element.getAttribute("patternUnits").toLowerCase()||(r=t.getBoundingBox(e),i=e.pdf.Matrix(1,0,0,1,r[0],r[1]),a=this.pattern.getBoundingBox(e),s=a[0]*r[0]||0,u=a[1]*r[1]||0,l=a[2]*r[2]||0,c=a[3]*r[3]||0,n.boundingBox=[s,u,s+l,u+c],n.xStep=l,n.yStep=c),o=e.pdf.unitMatrix,this.pattern.element.hasAttribute("patternContentUnits")&&"objectboundingbox"===this.pattern.element.getAttribute("patternContentUnits").toLowerCase()&&(r||(r=t.getBoundingBox(e)),o=e.pdf.Matrix(r[2],0,0,r[3],0,0),a=n.boundingBox||this.pattern.getBoundingBox(e),s=a[0]/r[0]||0,u=a[1]/r[1]||0,l=a[2]/r[2]||0,c=a[3]/r[3]||0,n.boundingBox=[s,u,s+l,u+c],n.xStep=l,n.yStep=c),h=e.pdf.unitMatrix,(f=F(this.pattern.element,e.styleSheets,"patternTransform","transform"))&&(h=$(f,e)),d=o,d=e.pdf.matrixMult(d,i),d=e.pdf.matrixMult(d,h),d=e.pdf.matrixMult(d,e.transform),n.matrix=d,[2,n]}}))}))},t}();function at(t,e,n){var r=n||e.element,i=F(r,t.styleSheets,"color");if(i){var o=H(i,t.attributeState.color);o.ok?t.attributeState.color=o:t.attributeState.color=new m("rgb(0,0,0)")}var s=F(r,t.styleSheets,"visibility");s&&(t.attributeState.visibility=s);var u=F(r,t.styleSheets,"fill");u&&(t.attributeState.fill=function(t,e){var n=R.exec(t);if(n){var r=n[1],i=e.refsHandler.get(r);return i&&(i instanceof et||i instanceof nt)?function(t,e,n){var r=e.getStops(n.styleSheets);if(0===r.length)return null;if(1===r.length){var i=r[0].color,o=new m;return o.ok=!0,o.r=i[0],o.g=i[1],o.b=i[2],o.a=r[0].opacity,new v(o)}return new rt(t,e)}(r,i,e):i&&i instanceof it?new ot(r,i):new v(new m("rgb(0, 0, 0)"))}var o=H(t,e.attributeState.color);return o.ok?new v(o):null}(u,t));var l=F(r,t.styleSheets,"fill-opacity");l&&(t.attributeState.fillOpacity=parseFloat(l));var c=F(r,t.styleSheets,"stroke-opacity");c&&(t.attributeState.strokeOpacity=parseFloat(c));var h=F(r,t.styleSheets,"opacity");h&&(t.attributeState.opacity=parseFloat(h));var f=F(r,t.styleSheets,"stroke-width");void 0!==f&&""!==f&&(t.attributeState.strokeWidth=Math.abs(parseFloat(f)));var d=F(r,t.styleSheets,"stroke");if(d)if("none"===d)t.attributeState.stroke=null;else{var p=H(d,t.attributeState.color);p.ok&&(t.attributeState.stroke=new v(p))}var g=F(r,t.styleSheets,"stroke-linecap");g&&(t.attributeState.strokeLinecap=g);var y=F(r,t.styleSheets,"stroke-linejoin");y&&(t.attributeState.strokeLinejoin=y);var b=F(r,t.styleSheets,"stroke-dasharray");if(b){var w=parseInt(F(r,t.styleSheets,"stroke-dashoffset")||"0");t.attributeState.strokeDasharray=U(b),t.attributeState.strokeDashoffset=w}var A=F(r,t.styleSheets,"stroke-miterlimit");void 0!==A&&""!==A&&(t.attributeState.strokeMiterlimit=parseFloat(A));var x=r.getAttribute("xml:space");x&&(t.attributeState.xmlSpace=x);var _=F(r,t.styleSheets,"font-weight");_&&(t.attributeState.fontWeight=_);var S=F(r,t.styleSheets,"font-style");S&&(t.attributeState.fontStyle=S);var L=F(r,t.styleSheets,"font-family");if(L){var N=a().parse(L);t.attributeState.fontFamily=function(t,e,n){var r=Y(t.fontStyle,t.fontWeight),i=n.pdf.getFontList(),o="";return e.some((function(t){var e=i[t];return e&&e.indexOf(r)>=0?(o=t,!0):(t=t.toLowerCase(),!!V.hasOwnProperty(t)&&(o=t,!0))}))||(o="times"),o}(t.attributeState,N,t)}var k=F(r,t.styleSheets,"font-size");if(k){var C=t.pdf.getFontSize();t.attributeState.fontSize=q(k,C)}var P=F(r,t.styleSheets,"vertical-align")||F(r,t.styleSheets,"alignment-baseline");if(P){var I=P.match(/(baseline|text-bottom|alphabetic|ideographic|middle|central|mathematical|text-top|bottom|center|top|hanging)/);I&&(t.attributeState.alignmentBaseline=I[0])}var M=F(r,t.styleSheets,"text-anchor");M&&(t.attributeState.textAnchor=M)}function st(t,e,n){var r=1,i=1;r*=t.attributeState.fillOpacity,r*=t.attributeState.opacity,t.attributeState.fill instanceof v&&void 0!==t.attributeState.fill.color.a&&(r*=t.attributeState.fill.color.a),i*=t.attributeState.strokeOpacity,i*=t.attributeState.opacity,t.attributeState.stroke instanceof v&&void 0!==t.attributeState.stroke.color.a&&(i*=t.attributeState.stroke.color.a);var o,a,u=r<1,l=i<1;if(B(n,"use")?(u=!0,l=!0,r*=t.attributeState.fill?1:0,i*=t.attributeState.stroke?1:0):t.withinUse&&(t.attributeState.fill!==e.attributeState.fill?(u=!0,r*=t.attributeState.fill?1:0):u&&!t.attributeState.fill&&(r=0),t.attributeState.stroke!==e.attributeState.stroke?(l=!0,i*=t.attributeState.stroke?1:0):l&&!t.attributeState.stroke&&(i=0)),u||l){var c={};u&&(c.opacity=r),l&&(c["stroke-opacity"]=i),t.pdf.setGState(new s.GState(c))}if(t.attributeState.fill&&t.attributeState.fill!==e.attributeState.fill&&t.attributeState.fill instanceof v&&t.attributeState.fill.color.ok&&!B(n,"text")&&t.pdf.setFillColor(t.attributeState.fill.color.r,t.attributeState.fill.color.g,t.attributeState.fill.color.b),t.attributeState.strokeWidth!==e.attributeState.strokeWidth&&t.pdf.setLineWidth(t.attributeState.strokeWidth),t.attributeState.stroke!==e.attributeState.stroke&&t.attributeState.stroke instanceof v&&t.pdf.setDrawColor(t.attributeState.stroke.color.r,t.attributeState.stroke.color.g,t.attributeState.stroke.color.b),t.attributeState.strokeLinecap!==e.attributeState.strokeLinecap&&t.pdf.setLineCap(t.attributeState.strokeLinecap),t.attributeState.strokeLinejoin!==e.attributeState.strokeLinejoin&&t.pdf.setLineJoin(t.attributeState.strokeLinejoin),t.attributeState.strokeDasharray===e.attributeState.strokeDasharray&&t.attributeState.strokeDashoffset===e.attributeState.strokeDashoffset||!t.attributeState.strokeDasharray||t.pdf.setLineDashPattern(t.attributeState.strokeDasharray,t.attributeState.strokeDashoffset),t.attributeState.strokeMiterlimit!==e.attributeState.strokeMiterlimit&&t.pdf.setLineMiterLimit(t.attributeState.strokeMiterlimit),t.attributeState.fontFamily!==e.attributeState.fontFamily&&(o=V.hasOwnProperty(t.attributeState.fontFamily)?V[t.attributeState.fontFamily]:t.attributeState.fontFamily),t.attributeState.fill&&t.attributeState.fill!==e.attributeState.fill&&t.attributeState.fill instanceof v&&t.attributeState.fill.color.ok){var h=t.attributeState.fill.color;t.pdf.setTextColor(h.r,h.g,h.b)}t.attributeState.fontWeight===e.attributeState.fontWeight&&t.attributeState.fontStyle===e.attributeState.fontStyle||(a=Y(t.attributeState.fontStyle,t.attributeState.fontWeight)),void 0===o&&void 0===a||(void 0===o&&(o=V.hasOwnProperty(t.attributeState.fontFamily)?V[t.attributeState.fontFamily]:t.attributeState.fontFamily),t.pdf.setFont(o,a)),t.attributeState.fontSize!==e.attributeState.fontSize&&t.pdf.setFontSize(t.attributeState.fontSize*t.pdf.internal.scaleFactor)}function ut(t,e,n){var r=R.exec(t);if(r){var i=r[1];return n.refsHandler.get(i)||void 0}}function lt(t,e,n){return p(this,void 0,void 0,(function(){var r,i;return g(this,(function(o){switch(o.label){case 0:return r=n.clone(),e.element.hasAttribute("clipPathUnits")&&"objectboundingbox"===e.element.getAttribute("clipPathUnits").toLowerCase()&&(i=t.getBoundingBox(n),r.transform=n.pdf.matrixMult(n.pdf.Matrix(i[2],0,0,i[3],i[0],i[1]),n.transform)),[4,e.apply(r)];case 1:return o.sent(),[2]}}))}))}var ct=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return f(e,t),e.prototype.render=function(t){return p(this,void 0,void 0,(function(){var e,n,r,i;return g(this,(function(o){switch(o.label){case 0:return this.isVisible("hidden"!==t.attributeState.visibility,t)?((e=t.clone()).transform=e.pdf.matrixMult(this.computeNodeTransform(e),t.transform),at(e,this),n=F(this.element,e.styleSheets,"clip-path"),(r=n&&"none"!==n)?(i=ut(n,0,e))?i.isVisible(!0,e)?(e.pdf.saveGraphicsState(),[4,lt(this,i,e)]):[3,2]:[3,4]:[3,5]):[2];case 1:return o.sent(),[3,3];case 2:return[2];case 3:return[3,5];case 4:r=!1,o.label=5;case 5:return e.withinClipPath||e.pdf.saveGraphicsState(),st(e,t,this.element),[4,this.renderCore(e)];case 6:return o.sent(),e.withinClipPath||e.pdf.restoreGraphicsState(),r&&e.pdf.restoreGraphicsState(),[2]}}))}))},e}(Z),ht=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return f(e,t),e}(ct),ft=function(t){function e(e,n,r){var i=t.call(this,n,r)||this;return i.cachedPath=null,i.hasMarkers=e,i}return f(e,t),e.prototype.renderCore=function(t){return p(this,void 0,void 0,(function(){var e;return g(this,(function(n){switch(n.label){case 0:return null===(e=this.getCachedPath(t))||0===e.segments.length?[2]:(t.withinClipPath?e.transform(t.transform):t.pdf.setCurrentTransformationMatrix(t.transform),e.draw(t),[4,this.fillOrStroke(t)]);case 1:return n.sent(),this.hasMarkers?[4,this.drawMarkers(t,e)]:[3,3];case 2:n.sent(),n.label=3;case 3:return[2]}}))}))},e.prototype.getCachedPath=function(t){return this.cachedPath||(this.cachedPath=this.getPath(t))},e.prototype.drawMarkers=function(t,e){return p(this,void 0,void 0,(function(){return g(this,(function(n){switch(n.label){case 0:return[4,this.getMarkers(e,t).draw(t.clone({transform:t.pdf.unitMatrix}))];case 1:return n.sent(),[2]}}))}))},e.prototype.fillOrStroke=function(t){return p(this,void 0,void 0,(function(){var e,n,r,i,o;return g(this,(function(a){switch(a.label){case 0:return t.withinClipPath?[2]:(e=t.attributeState.fill,n=t.attributeState.stroke&&0!==t.attributeState.strokeWidth,e?[4,e.getFillData(this,t)]:[3,2]);case 1:return i=a.sent(),[3,3];case 2:i=void 0,a.label=3;case 3:return r=i,o="evenodd"===F(this.element,t.styleSheets,"fill-rule"),e&&n||t.withinUse?o?t.pdf.fillStrokeEvenOdd(r):t.pdf.fillStroke(r):e?o?t.pdf.fillEvenOdd(r):t.pdf.fill(r):n?t.pdf.stroke():t.pdf.discardPath(),[2]}}))}))},e.prototype.getBoundingBoxCore=function(t){var e=this.getCachedPath(t);if(!e)return[0,0,0,0];for(var n=Number.POSITIVE_INFINITY,r=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,o=Number.NEGATIVE_INFINITY,a=0,s=0,u=0;u<e.segments.length;u++){var l=e.segments[u];(l instanceof C||l instanceof P||l instanceof I)&&(a=l.x,s=l.y),l instanceof I?(n=Math.min(n,a,l.x1,l.x2,l.x),i=Math.max(i,a,l.x1,l.x2,l.x),r=Math.min(r,s,l.y1,l.y2,l.y),o=Math.max(o,s,l.y1,l.y2,l.y)):(n=Math.min(n,a),i=Math.max(i,a),r=Math.min(r,s),o=Math.max(o,s))}return[n,r,i-n,o-r]},e.prototype.getMarkers=function(t,e){var n=F(this.element,e.styleSheets,"marker-start"),r=F(this.element,e.styleSheets,"marker-mid"),i=F(this.element,e.styleSheets,"marker-end"),o=new O;if(n||r||i){i&&(i=dt(i)),n&&(n=dt(n)),r&&(r=dt(r));for(var a=t.segments,s=[1,0],u=void 0,l=!1,c=[1,0],h=!1,f=function(t){var e=a[t],f=n&&(1===t||!(a[t]instanceof C)&&a[t-1]instanceof C);f&&a.forEach((function(e,n){if(!h&&e instanceof M&&n>t){var r=a[n-1];h=(r instanceof C||r instanceof P||r instanceof I)&&r}}));var d=i&&(t===a.length-1||!(a[t]instanceof C)&&a[t+1]instanceof C),p=r&&t>0&&!(1===t&&a[t-1]instanceof C),g=a[t-1]||null;if(g instanceof C||g instanceof P||g instanceof I)if(e instanceof I)f&&o.addMarker(new j(n,[g.x,g.y],A(h?[h.x,h.y]:[g.x,g.y],[e.x1,e.y1]))),d&&o.addMarker(new j(i,[e.x,e.y],A([e.x2,e.y2],[e.x,e.y]))),p&&(u=S([g.x,g.y],[e.x1,e.y1]),u=g instanceof C?u:_(L(s,u)),o.addMarker(new j(r,[g.x,g.y],Math.atan2(u[1],u[0])))),s=S([e.x2,e.y2],[e.x,e.y]);else if(e instanceof C||e instanceof P){if(u=S([g.x,g.y],[e.x,e.y]),f){var m=h?S([h.x,h.y],[e.x,e.y]):u;o.addMarker(new j(n,[g.x,g.y],Math.atan2(m[1],m[0])))}d&&o.addMarker(new j(i,[e.x,e.y],Math.atan2(u[1],u[0]))),p&&(m=e instanceof C?s:g instanceof C?u:_(L(s,u)),o.addMarker(new j(r,[g.x,g.y],Math.atan2(m[1],m[0])))),s=u}else e instanceof M&&(u=S([g.x,g.y],[l.x,l.y]),p&&(m=g instanceof C?u:_(L(s,u)),o.addMarker(new j(r,[g.x,g.y],Math.atan2(m[1],m[0])))),d&&(m=_(L(u,c)),o.addMarker(new j(i,[l.x,l.y],Math.atan2(m[1],m[0])))),s=u);else{l=e instanceof C&&e;var v=a[t+1];(v instanceof C||v instanceof P||v instanceof I)&&(c=S([l.x,l.y],[v.x,v.y]))}},d=0;d<a.length;d++)f(d)}return o},e}(ht);function dt(t){var e=R.exec(t);return e&&e[1]||void 0}var pt=function(t){function e(e,n){return t.call(this,!0,e,n)||this}return f(e,t),e.prototype.getPath=function(t){if(t.withinClipPath||null===t.attributeState.stroke)return null;var e=parseFloat(this.element.getAttribute("x1")||"0"),n=parseFloat(this.element.getAttribute("y1")||"0"),r=parseFloat(this.element.getAttribute("x2")||"0"),i=parseFloat(this.element.getAttribute("y2")||"0");return e||r||n||i?(new k).moveTo(e,n).lineTo(r,i):null},e.prototype.computeNodeTransformCore=function(t){return t.pdf.unitMatrix},e.prototype.isVisible=function(t,e){return T(this,t,e)},e.prototype.fillOrStroke=function(e){return p(this,void 0,void 0,(function(){return g(this,(function(n){switch(n.label){case 0:return e.attributeState.fill=null,[4,t.prototype.fillOrStroke.call(this,e)];case 1:return n.sent(),[2]}}))}))},e}(ft),gt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return f(e,t),e.prototype.apply=function(t){return p(this,void 0,void 0,(function(){var e,n,r,i,o;return g(this,(function(a){switch(a.label){case 0:return this.isVisible("hidden"!==t.attributeState.visibility,t)?((e=t.clone()).transform=e.pdf.unitMatrix,at(e,this),(n=F(this.element,e.styleSheets,"clip-path"))&&"none"!==n&&(r=ut(n,0,e))?r.isVisible(!0,e)?[4,lt(this,r,e)]:[3,2]:[3,3]):[2];case 1:return a.sent(),[3,3];case 2:return[2];case 3:st(e,t,this.element),i=0,o=this.children,a.label=4;case 4:return i<o.length?[4,o[i].render(e)]:[3,7];case 5:a.sent(),a.label=6;case 6:return i++,[3,4];case 7:return[2]}}))}))},e.prototype.getBoundingBoxCore=function(t){return X(t,this)},e.prototype.isVisible=function(t,e){return E(this,t,e)},e.prototype.computeNodeTransformCore=function(t){var e=parseFloat(F(this.element,t.styleSheets,"x")||"0"),n=parseFloat(F(this.element,t.styleSheets,"y")||"0"),r=this.element.getAttribute("viewBox");if(r){var i=U(r),o=parseFloat(F(this.element,t.styleSheets,"width")||F(this.element.ownerSVGElement,t.styleSheets,"width")||r[2]),a=parseFloat(F(this.element,t.styleSheets,"height")||F(this.element.ownerSVGElement,t.styleSheets,"height")||r[3]);return K(this.element,i,e,n,o,a,t)}return t.pdf.Matrix(1,0,0,1,e,n)},e}(Q),mt=function(t,e){this.width=t,this.height=e},vt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return f(e,t),e.prototype.renderCore=function(t){return p(this,void 0,void 0,(function(){var n,r,i,o,a,s,u,l,c,h,f,d,p;return g(this,(function(g){switch(g.label){case 0:return n=parseFloat,(r=this.element.getAttribute("href")||this.element.getAttribute("xlink:href"))?(i=r.substring(1),o=t.refsHandler.get(i),a=B(o.element,"symbol,svg")&&o.element.hasAttribute("viewBox"),s=n(F(this.element,t.styleSheets,"x")||"0"),u=n(F(this.element,t.styleSheets,"y")||"0"),l=void 0,c=void 0,a?(l=n(F(this.element,t.styleSheets,"width")||F(o.element,t.styleSheets,"width")||"0"),c=n(F(this.element,t.styleSheets,"height")||F(o.element,t.styleSheets,"height")||"0"),s+=n(F(o.element,t.styleSheets,"x")||"0"),u+=n(F(o.element,t.styleSheets,"y")||"0"),f=U(o.element.getAttribute("viewBox")),h=K(o.element,f,s,u,l,c,t)):h=t.pdf.Matrix(1,0,0,1,s,u),d=new b(t.pdf,{refsHandler:t.refsHandler,styleSheets:t.styleSheets,withinUse:!0,viewport:a?new mt(l,c):t.viewport,svg2pdfParameters:t.svg2pdfParameters,textMeasure:t.textMeasure}),p=t.attributeState.color,[4,t.refsHandler.getRendered(i,p,(function(t){return e.renderReferencedNode(t,i,p,d)}))]):[2];case 1:return g.sent(),t.pdf.saveGraphicsState(),t.pdf.setCurrentTransformationMatrix(t.transform),a&&"visible"!==F(o.element,t.styleSheets,"overflow")&&(t.pdf.rect(s,u,l,c),t.pdf.clip().discardPath()),t.pdf.doFormObject(t.refsHandler.generateKey(i,p),h),t.pdf.restoreGraphicsState(),[2]}}))}))},e.renderReferencedNode=function(t,e,n,r){return p(this,void 0,void 0,(function(){var i;return g(this,(function(o){switch(o.label){case 0:return i=[(i=t.getBoundingBox(r))[0]-.5*i[2],i[1]-.5*i[3],2*i[2],2*i[3]],r.attributeState.color=n,r.pdf.beginFormObject(i[0],i[1],i[2],i[3],r.pdf.unitMatrix),t instanceof gt?[4,t.apply(r)]:[3,2];case 1:return o.sent(),[3,4];case 2:return[4,t.render(r)];case 3:o.sent(),o.label=4;case 4:return r.pdf.endFormObject(r.refsHandler.generateKey(e,n)),[2]}}))}))},e.prototype.getBoundingBoxCore=function(t){return J(this.element,t)},e.prototype.isVisible=function(t,e){return T(this,t,e)},e.prototype.computeNodeTransformCore=function(t){return t.pdf.unitMatrix},e}(ht),yt=function(t){function e(e,n){return t.call(this,!1,e,n)||this}return f(e,t),e.prototype.getPath=function(t){var e=parseFloat(F(this.element,t.styleSheets,"width")||"0"),n=parseFloat(F(this.element,t.styleSheets,"height")||"0");if(!isFinite(e)||e<=0||!isFinite(n)||n<=0)return null;var r=F(this.element,t.styleSheets,"rx"),i=F(this.element,t.styleSheets,"ry"),o=Math.min(parseFloat(r||i||"0"),.5*e),a=Math.min(parseFloat(i||r||"0"),.5*n),s=parseFloat(F(this.element,t.styleSheets,"x")||"0"),u=parseFloat(F(this.element,t.styleSheets,"y")||"0"),l=4/3*(Math.SQRT2-1);return 0===o&&0===a?(new k).moveTo(s,u).lineTo(s+e,u).lineTo(s+e,u+n).lineTo(s,u+n).close():(new k).moveTo(s+=o,u).lineTo(s+=e-2*o,u).curveTo(s+o*l,u,s+o,u+(a-a*l),s+=o,u+=a).lineTo(s,u+=n-2*a).curveTo(s,u+a*l,s-o*l,u+a,s-=o,u+=a).lineTo(s+=2*o-e,u).curveTo(s-o*l,u,s-o,u-a*l,s-=o,u-=a).lineTo(s,u+=2*a-n).curveTo(s,u-a*l,s+o*l,u-a,s+=o,u-=a).close()},e.prototype.computeNodeTransformCore=function(t){return t.pdf.unitMatrix},e.prototype.isVisible=function(t,e){return T(this,t,e)},e}(ft),bt=function(t){function e(e,n){return t.call(this,!1,e,n)||this}return f(e,t),e.prototype.getPath=function(t){var e=this.getRx(t),n=this.getRy(t);if(!isFinite(e)||n<=0||!isFinite(n)||n<=0)return null;var r=parseFloat(F(this.element,t.styleSheets,"cx")||"0"),i=parseFloat(F(this.element,t.styleSheets,"cy")||"0"),o=4/3*(Math.SQRT2-1)*e,a=4/3*(Math.SQRT2-1)*n;return(new k).moveTo(r+e,i).curveTo(r+e,i-a,r+o,i-n,r,i-n).curveTo(r-o,i-n,r-e,i-a,r-e,i).curveTo(r-e,i+a,r-o,i+n,r,i+n).curveTo(r+o,i+n,r+e,i+a,r+e,i)},e.prototype.computeNodeTransformCore=function(t){return t.pdf.unitMatrix},e.prototype.isVisible=function(t,e){return T(this,t,e)},e}(ft),wt=function(t){function e(e,n){return t.call(this,e,n)||this}return f(e,t),e.prototype.getRx=function(t){return parseFloat(F(this.element,t.styleSheets,"rx")||"0")},e.prototype.getRy=function(t){return parseFloat(F(this.element,t.styleSheets,"ry")||"0")},e}(bt);function At(t){var e="invisible",n=t.stroke&&0!==t.strokeWidth,r=t.fill;return r&&n?e="fillThenStroke":r?e="fill":n&&(e="stroke"),e}function xt(t){return t.replace(/[\n\r]/g,"")}function _t(t){return t.replace(/[\t]/g," ")}function St(t){return t.replace(/ +/g," ")}function Lt(t,e,n){switch(F(t,n.styleSheets,"text-transform")){case"uppercase":return e.toUpperCase();case"lowercase":return e.toLowerCase();default:return e}}var Nt=function(){function t(t,e,n,r){this.textNode=t,this.texts=[],this.textNodes=[],this.contexts=[],this.textAnchor=e,this.originX=n,this.originY=r,this.textMeasures=[]}return t.prototype.setX=function(t){this.originX=t},t.prototype.setY=function(t){this.originY=t},t.prototype.add=function(t,e,n){this.texts.push(e),this.textNodes.push(t),this.contexts.push(n)},t.prototype.rightTrimText=function(){for(var t=this.texts.length-1;t>=0;t--)if("default"===this.contexts[t].attributeState.xmlSpace&&(this.texts[t]=this.texts[t].replace(/\s+$/,"")),this.texts[t].match(/[^\s]/))return!1;return!0},t.prototype.measureText=function(t){for(var e=0;e<this.texts.length;e++)this.textMeasures.push({width:t.textMeasure.measureTextWidth(this.texts[e],this.contexts[e].attributeState),length:this.texts[e].length})},t.prototype.put=function(e,n){var r,i,o,a,s=[],u=[],l=[],c=this.originX,h=this.originY,f=c,d=c;for(r=0;r<this.textNodes.length;r++){i=this.textNodes[r],o=this.contexts[r],a=this.textMeasures[r]||{width:e.textMeasure.measureTextWidth(this.texts[r],this.contexts[r].attributeState),length:this.texts[r].length};var p=c,g=h;if("#text"!==i.nodeName&&!s.includes(i)){s.push(i);var m=t.resolveRelativePositionAttribute(i,"dx");null!==m&&(p+=q(m,o.attributeState.fontSize));var v=t.resolveRelativePositionAttribute(i,"dy");null!==v&&(g+=q(v,o.attributeState.fontSize))}u[r]=p,l[r]=g,c=p+a.width+a.length*n,h=g,f=Math.min(f,p),d=Math.max(d,c)}var y=0;switch(this.textAnchor){case"start":y=0;break;case"middle":y=(d-f)/2;break;case"end":y=d-f}for(r=0;r<this.textNodes.length;r++)if(i=this.textNodes[r],o=this.contexts[r],"#text"===i.nodeName||"hidden"!==o.attributeState.visibility){e.pdf.saveGraphicsState(),st(o,e,i);var b=o.attributeState.alignmentBaseline,w=At(o.attributeState);e.pdf.text(this.texts[r],u[r]-y,l[r],{baseline:z(b),angle:e.transform,renderingMode:"fill"===w?void 0:w,charSpace:0===n?void 0:n}),e.pdf.restoreGraphicsState()}return[c,h]},t.resolveRelativePositionAttribute=function(t,e){for(var n,r=t;r&&B(r,"tspan");){if(r.hasAttribute(e))return r.getAttribute(e);if((null===(n=t.parentElement)||void 0===n?void 0:n.firstChild)!==t)break;r=r.parentElement}return null},t}(),kt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return f(e,t),e.prototype.processTSpans=function(t,e,n,r,i,o){for(var a=n.pdf.getFontSize(),s=n.attributeState.xmlSpace,u=!0,l=!1,c=0;c<e.childNodes.length;c++){var h=e.childNodes[c];if(h.textContent){var f=h.textContent;if("#text"===h.nodeName){var d=xt(f);d=_t(d),"default"===s&&(d=St(d),u&&d.match(/^\s/)&&(l=!0),d.match(/[^\s]/)&&(u=!1),o.prevText.match(/\s$/)&&(d=d.replace(/^\s+/,"")));var p=Lt(e,d,n);i.add(e,p,n),o.prevText=f,o.prevContext=n}else if(B(h,"title"));else if(B(h,"tspan")){var g=h,m=g.getAttribute("x");if(null!==m){var v=q(m,a);i=new Nt(this,F(g,n.styleSheets,"text-anchor")||n.attributeState.textAnchor,v,0),r.push({type:"y",chunk:i})}var y=g.getAttribute("y");if(null!==y){var b=q(y,a);i=new Nt(this,F(g,n.styleSheets,"text-anchor")||n.attributeState.textAnchor,0,b),r.push({type:"x",chunk:i})}var w=n.clone();at(w,t,g),this.processTSpans(t,g,w,r,i,o)}}}return l},e.prototype.renderCore=function(t){return p(this,void 0,void 0,(function(){var e,n,r,i,o,a,s,u,l,c,h,f,d,p,m,v,y,b,w,A,x,_,S;return g(this,(function(g){if(t.pdf.saveGraphicsState(),e=0,n=0,r=1,i=t.pdf.getFontSize(),o=q(this.element.getAttribute("x"),i),a=q(this.element.getAttribute("y"),i),s=q(this.element.getAttribute("dx"),i),u=q(this.element.getAttribute("dy"),i),l=parseFloat(this.element.getAttribute("textLength")||"0"),c=t.attributeState.visibility,0===this.element.childElementCount)h=this.element.textContent||"",f=function(t,e){return t=_t(t=xt(t)),"default"===e.xmlSpace&&(t=St(t=t.trim())),t}(h,t.attributeState),d=Lt(this.element,f,t),e=t.textMeasure.getTextOffset(d,t.attributeState),l>0&&(p=t.textMeasure.measureTextWidth(d,t.attributeState),"default"===t.attributeState.xmlSpace&&h.match(/^\s/)&&(r=0),n=(l-p)/(d.length-r)||0),"visible"===c&&(m=t.attributeState.alignmentBaseline,v=At(t.attributeState),t.pdf.text(d,o+s-e,a+u,{baseline:z(m),angle:t.transform,renderingMode:"fill"===v?void 0:v,charSpace:0===n?void 0:n}));else{for(y=[],b=new Nt(this,t.attributeState.textAnchor,o+s,a+u),y.push({type:"",chunk:b}),w=this.processTSpans(this,this.element,t,y,b,{prevText:" ",prevContext:t}),r=w?0:1,A=!0,x=y.length-1;x>=0;x--)A&&(A=y[x].chunk.rightTrimText());l>0&&(_=0,S=0,y.forEach((function(e){var n=e.chunk;n.measureText(t),n.textMeasures.forEach((function(t){var e=t.width,n=t.length;_+=e,S+=n}))})),n=(l-_)/(S-r)),y.reduce((function(e,r){var i=r.type,o=r.chunk;return"x"===i?o.setX(e[0]):"y"===i&&o.setY(e[1]),o.put(t,n)}),[0,0])}return t.pdf.restoreGraphicsState(),[2]}))}))},e.prototype.isVisible=function(t,e){return E(this,t,e)},e.prototype.getBoundingBoxCore=function(t){return J(this.element,t)},e.prototype.computeNodeTransformCore=function(t){return t.pdf.unitMatrix},e}(ht),Ct=function(t){function e(e,n){return t.call(this,!0,e,n)||this}return f(e,t),e.prototype.computeNodeTransformCore=function(t){return t.pdf.unitMatrix},e.prototype.isVisible=function(t,e){return T(this,t,e)},e.prototype.getPath=function(t){var e,n,r=new(l())(F(this.element,t.styleSheets,"d")||"").unshort().unarc().abs(),i=new k;return r.iterate((function(t){switch(t[0]){case"M":i.moveTo(t[1],t[2]);break;case"L":i.lineTo(t[1],t[2]);break;case"H":i.lineTo(t[1],n);break;case"V":i.lineTo(e,t[1]);break;case"C":i.curveTo(t[1],t[2],t[3],t[4],t[5],t[6]);break;case"Q":var r=x([e,n],[t[1],t[2]]),o=x([t[3],t[4]],[t[1],t[2]]);i.curveTo(r[0],r[1],o[0],o[1],t[3],t[4]);break;case"Z":i.close()}switch(t[0]){case"M":case"L":e=t[1],n=t[2];break;case"H":e=t[1];break;case"V":n=t[1];break;case"C":e=t[5],n=t[6];break;case"Q":e=t[3],n=t[4]}})),i},e}(ft),Pt=/^\s*data:(([^/,;]+\/[^/,;]+)(?:;([^,;=]+=[^,;=]+))?)?(?:;(base64))?,((?:.|\s)*)$/i,It=function(t){function e(n,r){var i=t.call(this,n,r)||this;return i.imageLoadingPromise=null,i.imageUrl=i.element.getAttribute("xlink:href")||i.element.getAttribute("href"),i.imageUrl&&(i.imageLoadingPromise=e.fetchImageData(i.imageUrl)),i}return f(e,t),e.prototype.renderCore=function(t){return p(this,void 0,void 0,(function(){var e,n,r,i,o,a,s,u,l,c,h,f;return g(this,(function(d){switch(d.label){case 0:return this.imageLoadingPromise?(t.pdf.setCurrentTransformationMatrix(t.transform),e=parseFloat(F(this.element,t.styleSheets,"width")||"0"),n=parseFloat(F(this.element,t.styleSheets,"height")||"0"),r=parseFloat(F(this.element,t.styleSheets,"x")||"0"),i=parseFloat(F(this.element,t.styleSheets,"y")||"0"),!isFinite(e)||e<=0||!isFinite(n)||n<=0?[2]:[4,this.imageLoadingPromise]):[2];case 1:return o=d.sent(),a=o.data,0!==(s=o.format).indexOf("svg")?[3,3]:(u=new DOMParser,l=u.parseFromString(a,"image/svg+xml").firstElementChild,(!(c=this.element.getAttribute("preserveAspectRatio"))||c.indexOf("defer")<0||!l.getAttribute("preserveAspectRatio"))&&l.setAttribute("preserveAspectRatio",c||""),l.setAttribute("x",String(r)),l.setAttribute("y",String(i)),l.setAttribute("width",String(e)),l.setAttribute("height",String(n)),[4,zt(l,h={}).render(new b(t.pdf,{refsHandler:new w(h),styleSheets:t.styleSheets,viewport:new mt(e,n),svg2pdfParameters:t.svg2pdfParameters,textMeasure:t.textMeasure}))]);case 2:return d.sent(),[2];case 3:f="data:image/"+s+";base64,"+btoa(a);try{t.pdf.addImage(f,"",r,i,e,n)}catch(t){"object"==typeof console&&console.warn&&console.warn("Could not load image "+this.imageUrl+". \n"+t)}d.label=4;case 4:return[2]}}))}))},e.prototype.getBoundingBoxCore=function(t){return J(this.element,t)},e.prototype.computeNodeTransformCore=function(t){return t.pdf.unitMatrix},e.prototype.isVisible=function(t,e){return T(this,t,e)},e.fetchImageData=function(t){return p(this,void 0,void 0,(function(){var n,r,i,o,a;return g(this,(function(s){switch(s.label){case 0:if(!(i=t.match(Pt)))return[3,1];if(o=i[2],"image"!==(a=o.split("/"))[0])throw new Error("Unsupported image URL: "+t);return r=a[1],n=i[5],"base64"===i[4]?(n=n.replace(/\s/g,""),n=atob(n)):n=decodeURIComponent(n),[3,3];case 1:return[4,e.fetchImage(t)];case 2:n=s.sent(),r=t.substring(t.lastIndexOf(".")+1),s.label=3;case 3:return[2,{data:n,format:r}]}}))}))},e.fetchImage=function(t){return new Promise((function(e,n){var r=new XMLHttpRequest;r.open("GET",t,!0),r.responseType="arraybuffer",r.onload=function(){if(200!==r.status)throw new Error("Error "+r.status+": Failed to load image '"+t+"'");for(var n=new Uint8Array(r.response),i="",o=0;o<n.length;o++)i+=String.fromCharCode(n[o]);e(i)},r.onerror=n,r.onabort=n,r.send(null)}))},e.getMimeType=function(t){switch(t=t.toLowerCase()){case"jpg":case"jpeg":return"image/jpeg";default:return"image/"+t}},e}(ht),Mt=function(t){function e(e,n,r){var i=t.call(this,!0,n,r)||this;return i.closed=e,i}return f(e,t),e.prototype.getPath=function(t){if(!this.element.hasAttribute("points")||""===this.element.getAttribute("points"))return null;var n=e.parsePointsString(this.element.getAttribute("points")),r=new k;if(n.length<1)return r;r.moveTo(n[0][0],n[0][1]);for(var i=1;i<n.length;i++)r.lineTo(n[i][0],n[i][1]);return this.closed&&r.close(),r},e.prototype.isVisible=function(t,e){return T(this,t,e)},e.prototype.computeNodeTransformCore=function(t){return t.pdf.unitMatrix},e.parsePointsString=function(t){for(var e=U(t),n=[],r=0;r<e.length-1;r+=2){var i=e[r],o=e[r+1];n.push([i,o])}return n},e}(ft),Bt=function(t){function e(e,n){return t.call(this,!0,e,n)||this}return f(e,t),e}(Mt),Ft=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return f(e,t),e.prototype.render=function(t){return Promise.resolve()},e.prototype.getBoundingBoxCore=function(t){return[0,0,0,0]},e.prototype.computeNodeTransformCore=function(t){return t.pdf.unitMatrix},e.prototype.isVisible=function(t,e){return T(this,t,e)},e}(Z),Tt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return f(e,t),e.prototype.apply=function(t){return p(this,void 0,void 0,(function(){var e,n,r,i,o;return g(this,(function(a){switch(a.label){case 0:e=this.computeNodeTransform(t),n=this.getBoundingBox(t),t.pdf.beginFormObject(n[0],n[1],n[2],n[3],e),function(t){var e=t.attributeState,n=t.pdf,r=1,i=1;r*=e.fillOpacity,r*=e.opacity,e.fill instanceof v&&void 0!==e.fill.color.a&&(r*=e.fill.color.a),i*=e.strokeOpacity,i*=e.opacity,e.stroke instanceof v&&void 0!==e.stroke.color.a&&(i*=e.stroke.color.a);var o,a={};if(a.opacity=r,a["stroke-opacity"]=i,n.setGState(new s.GState(a)),e.fill&&e.fill instanceof v&&e.fill.color.ok?n.setFillColor(e.fill.color.r,e.fill.color.g,e.fill.color.b):n.setFillColor(0,0,0),n.setLineWidth(e.strokeWidth),e.stroke instanceof v?n.setDrawColor(e.stroke.color.r,e.stroke.color.g,e.stroke.color.b):n.setDrawColor(0,0,0),n.setLineCap(e.strokeLinecap),n.setLineJoin(e.strokeLinejoin),e.strokeDasharray?n.setLineDashPattern(e.strokeDasharray,e.strokeDashoffset):n.setLineDashPattern([],0),n.setLineMiterLimit(e.strokeMiterlimit),o=V.hasOwnProperty(e.fontFamily)?V[e.fontFamily]:e.fontFamily,e.fill&&e.fill instanceof v&&e.fill.color.ok){var u=e.fill.color;n.setTextColor(u.r,u.g,u.b)}else n.setTextColor(0,0,0);var l="";"bold"===e.fontWeight&&(l="bold"),"italic"===e.fontStyle&&(l+="italic"),""===l&&(l="normal"),void 0!==o||void 0!==l?(void 0===o&&(o=V.hasOwnProperty(e.fontFamily)?V[e.fontFamily]:e.fontFamily),n.setFont(o,l)):n.setFont("helvetica",l),n.setFontSize(e.fontSize*n.internal.scaleFactor)}(r=new b(t.pdf,{refsHandler:t.refsHandler,styleSheets:t.styleSheets,viewport:t.viewport,svg2pdfParameters:t.svg2pdfParameters,textMeasure:t.textMeasure})),i=0,o=this.children,a.label=1;case 1:return i<o.length?[4,o[i].render(r)]:[3,4];case 2:a.sent(),a.label=3;case 3:return i++,[3,1];case 4:return t.pdf.endFormObject(this.element.getAttribute("id")),[2]}}))}))},e.prototype.getBoundingBoxCore=function(t){var e,n=this.element.getAttribute("viewBox");return n&&(e=U(n)),[e&&e[0]||0,e&&e[1]||0,e&&e[2]||parseFloat(this.element.getAttribute("markerWidth")||"3"),e&&e[3]||parseFloat(this.element.getAttribute("markerHeight")||"3")]},e.prototype.computeNodeTransformCore=function(t){var e,n=parseFloat(this.element.getAttribute("refX")||"0"),r=parseFloat(this.element.getAttribute("refY")||"0"),i=this.element.getAttribute("viewBox");if(i){var o=U(i);e=K(this.element,o,0,0,parseFloat(this.element.getAttribute("markerWidth")||"3"),parseFloat(this.element.getAttribute("markerHeight")||"3"),t,!0),e=t.pdf.matrixMult(t.pdf.Matrix(1,0,0,1,-n,-r),e)}else e=t.pdf.Matrix(1,0,0,1,-n,-r);return e},e.prototype.isVisible=function(t,e){return E(this,t,e)},e}(Q),Et=function(t){function e(e,n){return t.call(this,e,n)||this}return f(e,t),e.prototype.getR=function(t){var e;return null!==(e=this.r)&&void 0!==e?e:this.r=parseFloat(F(this.element,t.styleSheets,"r")||"0")},e.prototype.getRx=function(t){return this.getR(t)},e.prototype.getRy=function(t){return this.getR(t)},e}(bt),Ot=function(t){function e(e,n){return t.call(this,!1,e,n)||this}return f(e,t),e}(Mt),jt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return f(e,t),e.prototype.renderCore=function(t){return p(this,void 0,void 0,(function(){var e,n;return g(this,(function(r){switch(r.label){case 0:e=0,n=this.children,r.label=1;case 1:return e<n.length?[4,n[e].render(t)]:[3,4];case 2:r.sent(),r.label=3;case 3:return e++,[3,1];case 4:return[2]}}))}))},e.prototype.getBoundingBoxCore=function(t){return X(t,this)},e}(ct),Rt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return f(e,t),e.prototype.isVisible=function(t,e){return E(this,t,e)},e.prototype.render=function(e){return p(this,void 0,void 0,(function(){var n,r,i,o,a;return g(this,(function(s){switch(s.label){case 0:return this.isVisible("hidden"!==e.attributeState.visibility,e)?(n=this.getX(e),r=this.getY(e),i=this.getWidth(e),o=this.getHeight(e),e.pdf.saveGraphicsState(),a=e.transform,this.element.hasAttribute("transform")&&(a=e.pdf.matrixMult($(this.element.getAttribute("transform"),e),a)),e.pdf.setCurrentTransformationMatrix(a),e.withinUse||"visible"===F(this.element,e.styleSheets,"overflow")||e.pdf.rect(n,r,i,o).clip().discardPath(),[4,t.prototype.render.call(this,e.clone({transform:e.pdf.unitMatrix,viewport:e.withinUse?e.viewport:new mt(i,o)}))]):[2];case 1:return s.sent(),e.pdf.restoreGraphicsState(),[2]}}))}))},e.prototype.computeNodeTransform=function(t){return this.computeNodeTransformCore(t)},e.prototype.computeNodeTransformCore=function(t){if(t.withinUse)return t.pdf.unitMatrix;var e,n=this.getX(t),r=this.getY(t),i=this.getViewBox();if(i){var o=this.getWidth(t),a=this.getHeight(t);e=K(this.element,i,n,r,o,a,t)}else e=t.pdf.Matrix(1,0,0,1,n,r);return e},e.prototype.getWidth=function(t){if(void 0!==this.width)return this.width;var e,n,r=t.svg2pdfParameters;if(this.isOutermostSvg(t))if(null!=r.width)e=r.width;else if(n=F(this.element,t.styleSheets,"width"))e=parseFloat(n);else{var i=this.getViewBox();if(i&&(null!=r.height||F(this.element,t.styleSheets,"height"))){var o=i[2]/i[3];e=this.getHeight(t)*o}else e=Math.min(300,t.viewport.width,2*t.viewport.height)}else e=(n=F(this.element,t.styleSheets,"width"))?parseFloat(n):t.viewport.width;return this.width=e},e.prototype.getHeight=function(t){if(void 0!==this.height)return this.height;var e,n,r=t.svg2pdfParameters;if(this.isOutermostSvg(t))if(null!=r.height)e=r.height;else if(n=F(this.element,t.styleSheets,"height"))e=parseFloat(n);else{var i=this.getViewBox();if(i){var o=i[2]/i[3];e=this.getWidth(t)/o}else e=Math.min(150,t.viewport.width/2,t.viewport.height)}else e=(n=F(this.element,t.styleSheets,"height"))?parseFloat(n):t.viewport.height;return this.height=e},e.prototype.getX=function(t){if(void 0!==this.x)return this.x;if(this.isOutermostSvg(t))return this.x=0;var e=F(this.element,t.styleSheets,"x");return this.x=e?parseFloat(e):0},e.prototype.getY=function(t){if(void 0!==this.y)return this.y;if(this.isOutermostSvg(t))return this.y=0;var e=F(this.element,t.styleSheets,"y");return this.y=e?parseFloat(e):0},e.prototype.getViewBox=function(){if(void 0!==this.viewBox)return this.viewBox;var t=this.element.getAttribute("viewBox");return this.viewBox=t?U(t):void 0},e.prototype.isOutermostSvg=function(t){return t.svg2pdfParameters.element===this.element},e}(jt),Dt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return f(e,t),e.prototype.isVisible=function(t,e){return E(this,t,e)},e.prototype.computeNodeTransformCore=function(t){return t.pdf.unitMatrix},e}(jt),qt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return f(e,t),e.prototype.apply=function(t){return p(this,void 0,void 0,(function(){var e,n,r;return g(this,(function(i){switch(i.label){case 0:if(!this.isVisible(!0,t))return[2];e=t.pdf.matrixMult(this.computeNodeTransform(t),t.transform),t.pdf.setCurrentTransformationMatrix(e),n=0,r=this.children,i.label=1;case 1:return n<r.length?[4,r[n].render(new b(t.pdf,{refsHandler:t.refsHandler,styleSheets:t.styleSheets,viewport:t.viewport,withinClipPath:!0,svg2pdfParameters:t.svg2pdfParameters,textMeasure:t.textMeasure}))]:[3,4];case 2:i.sent(),i.label=3;case 3:return n++,[3,1];case 4:return t.pdf.clip().discardPath(),t.pdf.setCurrentTransformationMatrix(e.inversed()),[2]}}))}))},e.prototype.getBoundingBoxCore=function(t){return X(t,this)},e.prototype.isVisible=function(t,e){return E(this,t,e)},e}(Q);function zt(t,e){var n,r=[];switch(function(t,e){for(var n=[],r=0;r<t.childNodes.length;r++){var i=t.childNodes[r];"#"!==i.nodeName.charAt(0)&&n.push(i)}for(r=0;r<n.length;r++)e(0,n[r])}(t,(function(t,n){return r.push(zt(n,e))})),t.tagName.toLowerCase()){case"a":case"g":n=new Dt(t,r);break;case"circle":n=new Et(t,r);break;case"clippath":n=new qt(t,r);break;case"ellipse":n=new wt(t,r);break;case"lineargradient":n=new et(t,r);break;case"image":n=new It(t,r);break;case"line":n=new pt(t,r);break;case"marker":n=new Tt(t,r);break;case"path":n=new Ct(t,r);break;case"pattern":n=new it(t,r);break;case"polygon":n=new Bt(t,r);break;case"polyline":n=new Ot(t,r);break;case"radialgradient":n=new nt(t,r);break;case"rect":n=new yt(t,r);break;case"svg":n=new Rt(t,r);break;case"symbol":n=new gt(t,r);break;case"text":n=new kt(t,r);break;case"use":n=new vt(t,r);break;default:n=new Ft(t,r)}if(null!=e&&n.element.hasAttribute("id")){var o=i()(n.element.id,{isIdentifier:!0});e[o]=e[o]||n}return n.children.forEach((function(t){return t.setParent(n)})),n}var Ut=function(){function t(t,e){this.rootSvg=t,this.loadExternalSheets=e,this.styleSheets=[]}return t.prototype.load=function(){return p(this,void 0,void 0,(function(){var t;return g(this,(function(e){switch(e.label){case 0:return[4,this.collectStyleSheetTexts()];case 1:return t=e.sent(),this.parseCssSheets(t),[2]}}))}))},t.prototype.collectStyleSheetTexts=function(){return p(this,void 0,void 0,(function(){var e,n,r,i,o;return g(this,(function(a){switch(a.label){case 0:if(e=[],this.loadExternalSheets&&this.rootSvg.ownerDocument)for(i=0;i<this.rootSvg.ownerDocument.childNodes.length;i++)"xml-stylesheet"===(n=this.rootSvg.ownerDocument.childNodes[i]).nodeName&&"string"==typeof n.data&&e.push(t.loadSheet(n.data.match(/href=["'].*?["']/)[0].split("=")[1].slice(1,-1)));for(r=this.rootSvg.querySelectorAll("style,link"),i=0;i<r.length;i++)B(o=r[i],"style")?e.push(o.textContent):this.loadExternalSheets&&B(o,"link")&&"stylesheet"===o.getAttribute("rel")&&o.hasAttribute("href")&&e.push(t.loadSheet(o.getAttribute("href")));return[4,Promise.all(e)];case 1:return[2,a.sent().filter((function(t){return null!==t}))]}}))}))},t.prototype.parseCssSheets=function(e){for(var n=document.implementation.createHTMLDocument(""),r=0,i=e;r<i.length;r++){var o=i[r],a=n.createElement("style");a.textContent=o,n.body.appendChild(a);var s=a.sheet;if(s instanceof CSSStyleSheet){for(var u=s.cssRules.length-1;u>=0;u--){var l=s.cssRules[u];if(l instanceof CSSStyleRule){var c=l;if(c.selectorText.indexOf(",")>=0){s.deleteRule(u);for(var h=c.cssText.substring(c.selectorText.length),f=t.splitSelectorAtCommas(c.selectorText),d=0;d<f.length;d++)s.insertRule(f[d]+h,u+d)}}else s.deleteRule(u)}this.styleSheets.push(s)}}},t.splitSelectorAtCommas=function(t){for(var e,n=/,|["']/g,r=/[^\\]["]/g,i=/[^\\][']/g,o=[],a="initial",s=-1,u=r,l=0;l<t.length;)switch(a){case"initial":n.lastIndex=l,(e=n.exec(t))?(","===e[0]?(o.push(t.substring(s+1,n.lastIndex-1).trim()),s=n.lastIndex-1):(a="withinQuotes",u='"'===e[0]?r:i),l=n.lastIndex):(o.push(t.substring(s+1).trim()),l=t.length);break;case"withinQuotes":u.lastIndex=l,(e=u.exec(t))&&(l=u.lastIndex,a="initial")}return o},t.loadSheet=function(t){return new Promise((function(e,n){var r=new XMLHttpRequest;r.open("GET",t,!0),r.responseType="text",r.onload=function(){200!==r.status&&n(new Error("Error "+r.status+": Failed to load '"+t+"'")),e(r.responseText)},r.onerror=n,r.onabort=n,r.send(null)})).catch((function(){return null}))},t.prototype.getPropertyValue=function(t,e){for(var n=[],r=0,i=this.styleSheets;r<i.length;r++)for(var o=i[r],a=0;a<o.cssRules.length;a++){var s=o.cssRules[a];s.style.getPropertyValue(e)&&t.matches(s.selectorText)&&n.push(s)}if(0!==n.length)return n.reduce((function(t,n){return 1===(i=n,(o=(r=t).style.getPropertyPriority(e))!==i.style.getPropertyPriority(e)?"important"===o?1:-1:function(t,e){var n,r,i;if("string"==typeof t){if(-1!==t.indexOf(","))throw"Invalid CSS selector";n=c(t).specificityArray}else{if(!Array.isArray(t))throw"Invalid CSS selector or specificity array";if(4!==t.filter((function(t){return"number"==typeof t})).length)throw"Invalid specificity array";n=t}if("string"==typeof e){if(-1!==e.indexOf(","))throw"Invalid CSS selector";r=c(e).specificityArray}else{if(!Array.isArray(e))throw"Invalid CSS selector or specificity array";if(4!==e.filter((function(t){return"number"==typeof t})).length)throw"Invalid specificity array";r=e}for(i=0;i<4;i+=1){if(n[i]<r[i])return-1;if(n[i]>r[i])return 1}return 0}(r.selectorText,i.selectorText))?t:n;var r,i,o})).style.getPropertyValue(e)||void 0},t}(),Ht=function(){function t(){this.measureMethods={}}return t.prototype.getTextOffset=function(t,e){var n=e.textAnchor;if("start"===n)return 0;var r=this.measureTextWidth(t,e),i=0;switch(n){case"end":i=r;break;case"middle":i=r/2}return i},t.prototype.measureTextWidth=function(t,e){if(0===t.length)return 0;var n=e.fontFamily;return this.getMeasureFunction(n).call(this,t,e.fontFamily,e.fontSize+"px",e.fontStyle,e.fontWeight)},t.prototype.getMeasurementTextNode=function(){if(!this.textMeasuringTextElement){this.textMeasuringTextElement=document.createElementNS("http://www.w3.org/2000/svg","text");var t=document.createElementNS("http://www.w3.org/2000/svg","svg");t.appendChild(this.textMeasuringTextElement),t.style.setProperty("position","absolute"),t.style.setProperty("visibility","hidden"),document.body.appendChild(t)}return this.textMeasuringTextElement},t.prototype.canvasTextMeasure=function(t,e,n,r,i){var o=document.createElement("canvas").getContext("2d");return null!=o?(o.font=[r,i,n,e].join(" "),o.measureText(t).width):0},t.prototype.svgTextMeasure=function(t,e,n,r,i,o){void 0===o&&(o=this.getMeasurementTextNode());var a=o;return a.setAttribute("font-family",e),a.setAttribute("font-size",n),a.setAttribute("font-style",r),a.setAttribute("font-weight",i),a.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),a.textContent=t,a.getBBox().width},t.prototype.getMeasureFunction=function(e){var n=this.measureMethods[e];if(!n){var r=this.canvasTextMeasure(t.testString,e,"16px","normal","normal"),i=this.svgTextMeasure(t.testString,e,"16px","normal","normal");n=Math.abs(r-i)<t.epsilon?this.canvasTextMeasure:this.svgTextMeasure,this.measureMethods[e]=n}return n},t.prototype.cleanupTextMeasuring=function(){if(this.textMeasuringTextElement){var t=this.textMeasuringTextElement.parentNode;t&&document.body.removeChild(t),this.textMeasuringTextElement=void 0}},t.testString="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789!\"$%&/()=?'\\+*-_.:,;^}][{#~|<>",t.epsilon=.1,t}();function Wt(t,e,n){var r,i,o;return void 0===n&&(n={}),p(this,void 0,void 0,(function(){var a,s,u,l,c,h,f,p,m,v,y;return g(this,(function(g){switch(g.label){case 0:return a=null!==(r=n.x)&&void 0!==r?r:0,s=null!==(i=n.y)&&void 0!==i?i:0,u=null!==(o=n.loadExternalStyleSheets)&&void 0!==o&&o,c=new w(l={}),[4,(h=new Ut(t,u)).load()];case 1:return g.sent(),f=new mt(e.internal.pageSize.getWidth(),e.internal.pageSize.getHeight()),p=d(d({},n),{element:t}),m=new Ht,v=new b(e,{refsHandler:c,styleSheets:h,viewport:f,svg2pdfParameters:p,textMeasure:m}),e.advancedAPI(),e.saveGraphicsState(),e.setCurrentTransformationMatrix(e.Matrix(1,0,0,1,a,s)),e.setLineWidth(v.attributeState.strokeWidth),y=v.attributeState.fill.color,e.setFillColor(y.r,y.g,y.b),e.setFont(v.attributeState.fontFamily),e.setFontSize(v.attributeState.fontSize*e.internal.scaleFactor),[4,zt(t,l).render(v)];case 2:return g.sent(),e.restoreGraphicsState(),e.compatAPI(),v.textMeasure.cleanupTextMeasuring(),[2,e]}}))}))}s.jsPDF.API.svg=function(t,e){return void 0===e&&(e={}),Wt(t,this,e)}},6721:(t,e,n)=>{"use strict";t.exports=n(2192)},2921:t=>{"use strict";var e=2*Math.PI;function n(t,e,n,r){var i=t*n+e*r;return i>1&&(i=1),i<-1&&(i=-1),(t*r-e*n<0?-1:1)*Math.acos(i)}function r(t,e){var n=4/3*Math.tan(e/4),r=Math.cos(t),i=Math.sin(t),o=Math.cos(t+e),a=Math.sin(t+e);return[r,i,r-i*n,i+r*n,o+a*n,a-o*n,o,a]}t.exports=function(t,i,o,a,s,u,l,c,h){var f=Math.sin(h*e/360),d=Math.cos(h*e/360),p=d*(t-o)/2+f*(i-a)/2,g=-f*(t-o)/2+d*(i-a)/2;if(0===p&&0===g)return[];if(0===l||0===c)return[];l=Math.abs(l),c=Math.abs(c);var m=p*p/(l*l)+g*g/(c*c);m>1&&(l*=Math.sqrt(m),c*=Math.sqrt(m));var v=function(t,r,i,o,a,s,u,l,c,h){var f=h*(t-i)/2+c*(r-o)/2,d=-c*(t-i)/2+h*(r-o)/2,p=u*u,g=l*l,m=f*f,v=d*d,y=p*g-p*v-g*m;y<0&&(y=0),y/=p*v+g*m;var b=(y=Math.sqrt(y)*(a===s?-1:1))*u/l*d,w=y*-l/u*f,A=h*b-c*w+(t+i)/2,x=c*b+h*w+(r+o)/2,_=(f-b)/u,S=(d-w)/l,L=(-f-b)/u,N=(-d-w)/l,k=n(1,0,_,S),C=n(_,S,L,N);return 0===s&&C>0&&(C-=e),1===s&&C<0&&(C+=e),[A,x,k,C]}(t,i,o,a,s,u,l,c,f,d),y=[],b=v[2],w=v[3],A=Math.max(Math.ceil(Math.abs(w)/(e/4)),1);w/=A;for(var x=0;x<A;x++)y.push(r(b,w)),b+=w;return y.map((function(t){for(var e=0;e<t.length;e+=2){var n=t[e+0],r=t[e+1],i=d*(n*=l)-f*(r*=c),o=f*n+d*r;t[e+0]=i+v[0],t[e+1]=o+v[1]}return t}))}},6954:t=>{"use strict";var e=1e-10,n=Math.PI/180;function r(t,e,n){if(!(this instanceof r))return new r(t,e,n);this.rx=t,this.ry=e,this.ax=n}r.prototype.transform=function(t){var r=Math.cos(this.ax*n),i=Math.sin(this.ax*n),o=[this.rx*(t[0]*r+t[2]*i),this.rx*(t[1]*r+t[3]*i),this.ry*(-t[0]*i+t[2]*r),this.ry*(-t[1]*i+t[3]*r)],a=o[0]*o[0]+o[2]*o[2],s=o[1]*o[1]+o[3]*o[3],u=((o[0]-o[3])*(o[0]-o[3])+(o[2]+o[1])*(o[2]+o[1]))*((o[0]+o[3])*(o[0]+o[3])+(o[2]-o[1])*(o[2]-o[1])),l=(a+s)/2;if(u<e*l)return this.rx=this.ry=Math.sqrt(l),this.ax=0,this;var c=o[0]*o[1]+o[2]*o[3],h=l+(u=Math.sqrt(u))/2,f=l-u/2;return this.ax=Math.abs(c)<e&&Math.abs(h-s)<e?90:180*Math.atan(Math.abs(c)>Math.abs(h-s)?(h-a)/c:c/(h-s))/Math.PI,this.ax>=0?(this.rx=Math.sqrt(h),this.ry=Math.sqrt(f)):(this.ax+=90,this.rx=Math.sqrt(f),this.ry=Math.sqrt(h)),this},r.prototype.isDegenerate=function(){return this.rx<e*this.ry||this.ry<e*this.rx},t.exports=r},9480:t=>{"use strict";function e(){if(!(this instanceof e))return new e;this.queue=[],this.cache=null}e.prototype.matrix=function(t){return 1===t[0]&&0===t[1]&&0===t[2]&&1===t[3]&&0===t[4]&&0===t[5]||(this.cache=null,this.queue.push(t)),this},e.prototype.translate=function(t,e){return 0===t&&0===e||(this.cache=null,this.queue.push([1,0,0,1,t,e])),this},e.prototype.scale=function(t,e){return 1===t&&1===e||(this.cache=null,this.queue.push([t,0,0,e,0,0])),this},e.prototype.rotate=function(t,e,n){var r,i,o;return 0!==t&&(this.translate(e,n),r=t*Math.PI/180,i=Math.cos(r),o=Math.sin(r),this.queue.push([i,o,-o,i,0,0]),this.cache=null,this.translate(-e,-n)),this},e.prototype.skewX=function(t){return 0!==t&&(this.cache=null,this.queue.push([1,0,Math.tan(t*Math.PI/180),1,0,0])),this},e.prototype.skewY=function(t){return 0!==t&&(this.cache=null,this.queue.push([1,Math.tan(t*Math.PI/180),0,1,0,0])),this},e.prototype.toArray=function(){if(this.cache)return this.cache;if(!this.queue.length)return this.cache=[1,0,0,1,0,0],this.cache;if(this.cache=this.queue[0],1===this.queue.length)return this.cache;for(var t=1;t<this.queue.length;t++)this.cache=(e=this.cache,n=this.queue[t],[e[0]*n[0]+e[2]*n[1],e[1]*n[0]+e[3]*n[1],e[0]*n[2]+e[2]*n[3],e[1]*n[2]+e[3]*n[3],e[0]*n[4]+e[2]*n[5]+e[4],e[1]*n[4]+e[3]*n[5]+e[5]]);var e,n;return this.cache},e.prototype.calc=function(t,e,n){var r;return this.queue.length?(this.cache||(this.cache=this.toArray()),[t*(r=this.cache)[0]+e*r[2]+(n?0:r[4]),t*r[1]+e*r[3]+(n?0:r[5])]):[t,e]},t.exports=e},3665:t=>{"use strict";var e={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},n=[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279];function r(t){return t>=48&&t<=57}function i(t){this.index=0,this.path=t,this.max=t.length,this.result=[],this.param=0,this.err="",this.segmentStart=0,this.data=[]}function o(t){for(;t.index<t.max&&(10===(e=t.path.charCodeAt(t.index))||13===e||8232===e||8233===e||32===e||9===e||11===e||12===e||160===e||e>=5760&&n.indexOf(e)>=0);)t.index++;var e}function a(t){var e=t.path.charCodeAt(t.index);return 48===e?(t.param=0,void t.index++):49===e?(t.param=1,void t.index++):void(t.err="SvgPath: arc flag can be 0 or 1 only (at pos "+t.index+")")}function s(t){var e,n=t.index,i=n,o=t.max,a=!1,s=!1,u=!1,l=!1;if(i>=o)t.err="SvgPath: missed param (at pos "+i+")";else if(43!==(e=t.path.charCodeAt(i))&&45!==e||(e=++i<o?t.path.charCodeAt(i):0),r(e)||46===e){if(46!==e){if(a=48===e,e=++i<o?t.path.charCodeAt(i):0,a&&i<o&&e&&r(e))return void(t.err="SvgPath: numbers started with `0` such as `09` are illegal (at pos "+n+")");for(;i<o&&r(t.path.charCodeAt(i));)i++,s=!0;e=i<o?t.path.charCodeAt(i):0}if(46===e){for(l=!0,i++;r(t.path.charCodeAt(i));)i++,u=!0;e=i<o?t.path.charCodeAt(i):0}if(101===e||69===e){if(l&&!s&&!u)return void(t.err="SvgPath: invalid float exponent (at pos "+i+")");if(43!==(e=++i<o?t.path.charCodeAt(i):0)&&45!==e||i++,!(i<o&&r(t.path.charCodeAt(i))))return void(t.err="SvgPath: invalid float exponent (at pos "+i+")");for(;i<o&&r(t.path.charCodeAt(i));)i++}t.index=i,t.param=parseFloat(t.path.slice(n,i))+0}else t.err="SvgPath: param should start with 0..9 or `.` (at pos "+i+")"}function u(t){var n,r;r=(n=t.path[t.segmentStart]).toLowerCase();var i=t.data;if("m"===r&&i.length>2&&(t.result.push([n,i[0],i[1]]),i=i.slice(2),r="l",n="m"===n?"l":"L"),"r"===r)t.result.push([n].concat(i));else for(;i.length>=e[r]&&(t.result.push([n].concat(i.splice(0,e[r]))),e[r]););}function l(t){var n,r,i,l,c,h,f=t.max;if(t.segmentStart=t.index,r=97==(32|(n=t.path.charCodeAt(t.index))),function(t){switch(32|t){case 109:case 122:case 108:case 104:case 118:case 99:case 115:case 113:case 116:case 97:case 114:return!0}return!1}(n))if(l=e[t.path[t.index].toLowerCase()],t.index++,o(t),t.data=[],l){for(i=!1;;){for(c=l;c>0;c--){if(!r||3!==c&&4!==c?s(t):a(t),t.err.length)return void u(t);t.data.push(t.param),o(t),i=!1,t.index<f&&44===t.path.charCodeAt(t.index)&&(t.index++,o(t),i=!0)}if(!i){if(t.index>=t.max)break;if(!((h=t.path.charCodeAt(t.index))>=48&&h<=57||43===h||45===h||46===h))break}}u(t)}else u(t);else t.err="SvgPath: bad command "+t.path[t.index]+" (at pos "+t.index+")"}t.exports=function(t){var e=new i(t),n=e.max;for(o(e);e.index<n&&!e.err.length;)l(e);return e.result.length&&("mM".indexOf(e.result[0][0])<0?(e.err="SvgPath: string should start with `M` or `m`",e.result=[]):e.result[0][0]="M"),{err:e.err,segments:e.result}}},2192:(t,e,n)=>{"use strict";var r=n(3665),i=n(2094),o=n(9480),a=n(2921),s=n(6954);function u(t){if(!(this instanceof u))return new u(t);var e=r(t);this.segments=e.segments,this.err=e.err,this.__stack=[]}u.from=function(t){if("string"==typeof t)return new u(t);if(t instanceof u){var e=new u("");return e.err=t.err,e.segments=t.segments.map((function(t){return t.slice()})),e.__stack=t.__stack.map((function(t){return o().matrix(t.toArray())})),e}throw new Error("SvgPath.from: invalid param type "+t)},u.prototype.__matrix=function(t){var e,n=this;t.queue.length&&this.iterate((function(r,i,o,a){var u,l,c,h;switch(r[0]){case"v":l=0===(u=t.calc(0,r[1],!0))[0]?["v",u[1]]:["l",u[0],u[1]];break;case"V":l=(u=t.calc(o,r[1],!1))[0]===t.calc(o,a,!1)[0]?["V",u[1]]:["L",u[0],u[1]];break;case"h":l=0===(u=t.calc(r[1],0,!0))[1]?["h",u[0]]:["l",u[0],u[1]];break;case"H":l=(u=t.calc(r[1],a,!1))[1]===t.calc(o,a,!1)[1]?["H",u[0]]:["L",u[0],u[1]];break;case"a":case"A":var f=t.toArray(),d=s(r[1],r[2],r[3]).transform(f);if(f[0]*f[3]-f[1]*f[2]<0&&(r[5]=r[5]?"0":"1"),u=t.calc(r[6],r[7],"a"===r[0]),"A"===r[0]&&r[6]===o&&r[7]===a||"a"===r[0]&&0===r[6]&&0===r[7]){l=["a"===r[0]?"l":"L",u[0],u[1]];break}l=d.isDegenerate()?["a"===r[0]?"l":"L",u[0],u[1]]:[r[0],d.rx,d.ry,d.ax,r[4],r[5],u[0],u[1]];break;case"m":h=i>0,l=["m",(u=t.calc(r[1],r[2],h))[0],u[1]];break;default:for(l=[c=r[0]],h=c.toLowerCase()===c,e=1;e<r.length;e+=2)u=t.calc(r[e],r[e+1],h),l.push(u[0],u[1])}n.segments[i]=l}),!0)},u.prototype.__evaluateStack=function(){var t,e;if(this.__stack.length){if(1===this.__stack.length)return this.__matrix(this.__stack[0]),void(this.__stack=[]);for(t=o(),e=this.__stack.length;--e>=0;)t.matrix(this.__stack[e].toArray());this.__matrix(t),this.__stack=[]}},u.prototype.toString=function(){var t="",e="",n=!1;this.__evaluateStack();for(var r=0,i=this.segments.length;r<i;r++){var o=this.segments[r],a=o[0];a!==e||"m"===a||"M"===a?("m"===a&&"z"===e&&(t+=" "),t+=a,n=!1):n=!0;for(var s=1;s<o.length;s++){var u=o[s];1===s?n&&u>=0&&(t+=" "):u>=0&&(t+=" "),t+=u}e=a}return t},u.prototype.translate=function(t,e){return this.__stack.push(o().translate(t,e||0)),this},u.prototype.scale=function(t,e){return this.__stack.push(o().scale(t,e||0===e?e:t)),this},u.prototype.rotate=function(t,e,n){return this.__stack.push(o().rotate(t,e||0,n||0)),this},u.prototype.skewX=function(t){return this.__stack.push(o().skewX(t)),this},u.prototype.skewY=function(t){return this.__stack.push(o().skewY(t)),this},u.prototype.matrix=function(t){return this.__stack.push(o().matrix(t)),this},u.prototype.transform=function(t){return t.trim()?(this.__stack.push(i(t)),this):this},u.prototype.round=function(t){var e,n=0,r=0,i=0,o=0;return t=t||0,this.__evaluateStack(),this.segments.forEach((function(a){var s=a[0].toLowerCase()===a[0];switch(a[0]){case"H":case"h":return s&&(a[1]+=i),i=a[1]-a[1].toFixed(t),void(a[1]=+a[1].toFixed(t));case"V":case"v":return s&&(a[1]+=o),o=a[1]-a[1].toFixed(t),void(a[1]=+a[1].toFixed(t));case"Z":case"z":return i=n,void(o=r);case"M":case"m":return s&&(a[1]+=i,a[2]+=o),i=a[1]-a[1].toFixed(t),o=a[2]-a[2].toFixed(t),n=i,r=o,a[1]=+a[1].toFixed(t),void(a[2]=+a[2].toFixed(t));case"A":case"a":return s&&(a[6]+=i,a[7]+=o),i=a[6]-a[6].toFixed(t),o=a[7]-a[7].toFixed(t),a[1]=+a[1].toFixed(t),a[2]=+a[2].toFixed(t),a[3]=+a[3].toFixed(t+2),a[6]=+a[6].toFixed(t),void(a[7]=+a[7].toFixed(t));default:return e=a.length,s&&(a[e-2]+=i,a[e-1]+=o),i=a[e-2]-a[e-2].toFixed(t),o=a[e-1]-a[e-1].toFixed(t),void a.forEach((function(e,n){n&&(a[n]=+a[n].toFixed(t))}))}})),this},u.prototype.iterate=function(t,e){var n,r,i,o=this.segments,a={},s=!1,u=0,l=0,c=0,h=0;if(e||this.__evaluateStack(),o.forEach((function(e,n){var r=t(e,n,u,l);Array.isArray(r)&&(a[n]=r,s=!0);var i=e[0]===e[0].toLowerCase();switch(e[0]){case"m":case"M":return u=e[1]+(i?u:0),l=e[2]+(i?l:0),c=u,void(h=l);case"h":case"H":return void(u=e[1]+(i?u:0));case"v":case"V":return void(l=e[1]+(i?l:0));case"z":case"Z":return u=c,void(l=h);default:u=e[e.length-2]+(i?u:0),l=e[e.length-1]+(i?l:0)}})),!s)return this;for(i=[],n=0;n<o.length;n++)if(void 0!==a[n])for(r=0;r<a[n].length;r++)i.push(a[n][r]);else i.push(o[n]);return this.segments=i,this},u.prototype.abs=function(){return this.iterate((function(t,e,n,r){var i,o=t[0],a=o.toUpperCase();if(o!==a)switch(t[0]=a,o){case"v":return void(t[1]+=r);case"a":return t[6]+=n,void(t[7]+=r);default:for(i=1;i<t.length;i++)t[i]+=i%2?n:r}}),!0),this},u.prototype.rel=function(){return this.iterate((function(t,e,n,r){var i,o=t[0],a=o.toLowerCase();if(o!==a&&(0!==e||"M"!==o))switch(t[0]=a,o){case"V":return void(t[1]-=r);case"A":return t[6]-=n,void(t[7]-=r);default:for(i=1;i<t.length;i++)t[i]-=i%2?n:r}}),!0),this},u.prototype.unarc=function(){return this.iterate((function(t,e,n,r){var i,o,s,u=[],l=t[0];return"A"!==l&&"a"!==l?null:("a"===l?(o=n+t[6],s=r+t[7]):(o=t[6],s=t[7]),0===(i=a(n,r,o,s,t[4],t[5],t[1],t[2],t[3])).length?[["a"===t[0]?"l":"L",t[6],t[7]]]:(i.forEach((function(t){u.push(["C",t[2],t[3],t[4],t[5],t[6],t[7]])})),u))})),this},u.prototype.unshort=function(){var t,e,n,r,i,o=this.segments;return this.iterate((function(a,s,u,l){var c,h=a[0],f=h.toUpperCase();s&&("T"===f?(c="t"===h,"Q"===(n=o[s-1])[0]?(t=n[1]-u,e=n[2]-l):"q"===n[0]?(t=n[1]-n[3],e=n[2]-n[4]):(t=0,e=0),r=-t,i=-e,c||(r+=u,i+=l),o[s]=[c?"q":"Q",r,i,a[1],a[2]]):"S"===f&&(c="s"===h,"C"===(n=o[s-1])[0]?(t=n[3]-u,e=n[4]-l):"c"===n[0]?(t=n[3]-n[5],e=n[4]-n[6]):(t=0,e=0),r=-t,i=-e,c||(r+=u,i+=l),o[s]=[c?"c":"C",r,i,a[1],a[2],a[3],a[4]]))})),this},t.exports=u},2094:(t,e,n)=>{"use strict";var r=n(9480),i={matrix:!0,scale:!0,rotate:!0,translate:!0,skewX:!0,skewY:!0},o=/\s*(matrix|translate|scale|rotate|skewX|skewY)\s*\(\s*(.+?)\s*\)[\s,]*/,a=/[\s,]+/;t.exports=function(t){var e,n,s=new r;return t.split(o).forEach((function(t){if(t.length)if(void 0===i[t])switch(n=t.split(a).map((function(t){return+t||0})),e){case"matrix":return void(6===n.length&&s.matrix(n));case"scale":return void(1===n.length?s.scale(n[0],n[0]):2===n.length&&s.scale(n[0],n[1]));case"rotate":return void(1===n.length?s.rotate(n[0],0,0):3===n.length&&s.rotate(n[0],n[1],n[2]));case"translate":return void(1===n.length?s.translate(n[0],0):2===n.length&&s.translate(n[0],n[1]));case"skewX":return void(1===n.length&&s.skewX(n[0]));case"skewY":return void(1===n.length&&s.skewY(n[0]))}else e=t})),s}},2491:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.findZoomEvent=e.eventDescription=e.runOverlay=e.isOverlay=e.zoomSlide=e.createEventTree=void 0;const r=n(3519),i=n(1100),o=n(6358),a=n(6067),s=n(4779);e.isOverlay=function(t){return"show"==t.type||"hide"==t.type},e.zoomSlide=function(t,e="animated"){function n(t){return" "+t.x+" "+t.y+" "+t.width+" "+t.height}const r=document.getElementById("svg"),a=(0,i.applyTransform)(s.transforms.get(t),s.localRect.get(t));"silent"==e?r.setAttribute("viewBox",n(a)):new o.TimelineMax({}).to(r,1.5,{attr:{viewBox:n(a)}})},e.runOverlay=function(t,e,n){let r;r="show"==t.type&&1==e||"hide"==t.type&&-1==e?1:0;const i=s.svgMap.get(t);null!=i&&("animated"==n?o.gsap.to(i,{duration:.3,opacity:r}):i.style.opacity=r.toString())},e.createEventTree=function(){!function t(e,n){if(e.parent=n,"child"==e.type)for(const n of e.children)t(n,e)}(r.manifest.tree,void 0)},e.eventDescription=function(t){const e={type:"event",slideId:void 0,eventId:void 0};return t instanceof a.OverlayStep?(e.slideId=t.overlays[0].parent.id,e.eventId=t.overlays[0].eventId):t instanceof a.ZoomStep?(e.slideId=t.source.id,(0,a.zoomsIn)(t)?e.eventId=t.target.eventId:e.eventId="finish"):(e.slideId=r.manifest.tree.id,e.eventId="finish"),e},e.findZoomEvent=function(t){return function e(n){if(n.id==t)return n;for(const t of n.children)if("child"==t.type){const n=e(t);if(null!=n)return n}}(r.manifest.tree)}},9796:function(t,e,n){"use strict";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((r=r.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.probeServer=e.fetchJSON=e.sendToServer=e.fileName=e.presentationDir=void 0;const i=n(8915),o=n(3519);e.presentationDir=function(){return"."},e.fileName=function(t,e){return null==t?"./"+e:"./"+o.manifest.slideDict[t]+"/"+e},e.sendToServer=function(t){return r(this,void 0,void 0,(function*(){"slides"!=t.type&&"wav"!=t.type||(t.presentation=o.manifest.presentation);const e=JSON.stringify(t),n=yield fetch("http://localhost:3001",{method:"POST",body:e});if(n.ok)return n;throw"not connected"}))},e.fetchJSON=function(t){return r(this,void 0,void 0,(function*(){try{const e=yield fetch(t);if(e.ok)return e.json();throw"not connected"}catch(e){return(0,i.userAlert)("Could not load slide file "+t),null}}))},e.probeServer=function(){return r(this,void 0,void 0,(function*(){try{return yield fetch("http://localhost:3001",{method:"POST",body:JSON.stringify({type:"probe"})}),!0}catch(t){return!1}}))}},8915:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.timelineHTML=e.timelineSeen=e.soundIcon=e.markDisabled=e.userAlert=e.updatePageNumber=e.removeLoading=e.openPanelTreeRec=e.openPanelTree=e.initPanels=e.updateTimelineDisplay=e.audioPlaying=e.markSeen=void 0;const r=n(3519),i=n(6208),o=n(195),a=n(6358),s=n(4674),u=n(6067),l=new Map,c=new Map,h=new Map,f=new Map;function d(){h.clear();const t=document.getElementById("progress-line");t.innerHTML="";for(const e of(0,u.allSteps)()){const n=document.createElement("div"),r=document.createElement("div");r.classList.add("progress-filler"),r.style.width="0%",n.appendChild(r),t.appendChild(n),n.addEventListener("click",(function(t){p(e,t)}));const o=i.sounds.get(e);null!=o?(n.classList.remove("nosound"),n.style.flexGrow=o.duration.toString()):(n.classList.add("nosound"),n.style.flexGrow="10"),h.set(e,n),g(e,u.timeline.past.includes(e))}}function p(t,e){const n=e.offsetX,r=h.get(t).offsetWidth;t==(0,u.currentStep)()?(0,i.gotoAudio)(n/r):(0,u.gotoStep)(t)}function g(t,e){const n=h.get(t);null!=n&&(e?(n.firstChild.style.width="100%",n.classList.add("seen")):(n.firstChild.style.width="0%",n.classList.remove("seen")))}function m(t,e){const n=l.get(t).childNodes[0];e?(c.get(t).classList.remove("slide-stack-hidden"),n.innerHTML="expand_more"):(c.get(t).classList.add("slide-stack-hidden"),n.innerHTML="chevron_right")}function v(t){const e=Math.floor(t/60),n=Math.floor(t)%60;return n<10?e+":0"+n:e+":"+n}function y(){i.soundState==i.SoundState.Play?document.getElementById("progress-panel").classList.add("playing"):document.getElementById("progress-panel").classList.remove("playing")}function b(){const t=document.getElementById("play-button");switch((0,i.endOfSound)()?t.style.opacity="0":t.style.opacity="1",i.soundState!=i.SoundState.None&&document.body.classList.add("has-sound"),i.soundState){case i.SoundState.Play:t.style.color="black",t.innerHTML="pause";break;case i.SoundState.None:{t.style.color="black";const e=i.sounds.get((0,u.currentStep)());null==e?t.innerHTML="play_disabled":null!=e.audio?t.innerHTML="play_arrow":t.innerHTML="cached";for(const t of(0,u.allSteps)())h.get(t).classList.remove("recording");break}case i.SoundState.Recording:t.style.color="black",t.innerHTML="mic",h.get((0,u.currentStep)()).classList.add("recording");break;case i.SoundState.Live:t.style.color="red",t.innerHTML="mic_none"}y()}function w(t){const e=document.getElementById("left-panel");t?a.gsap.to(e,{width:"30%",duration:.3}):a.gsap.to(e,{width:0,duration:.3})}function A(){document.getElementById("left-panel").clientWidth>0?w(!1):w(!0)}function x(t){if(1==t.touches.length&&"none"==s.currentTool){const e=document.getElementById("svg").getBoundingClientRect(),n=(t.touches[0].clientX-e.x)/e.width;n>.9&&(0,r.nextButton)(),n<.1&&(0,r.prevButton)()}2==t.touches.length&&(0,s.toggleSketchpad)()}e.timelineHTML=d,e.timelineSeen=g,e.markSeen=function(t,e){let n;t instanceof u.OverlayStep&&(n=l.get(t.overlays[0])),t instanceof u.ZoomStep&&(0,u.zoomsIn)(t)&&(n=l.get(t.target));const r=h.get(t);1==e?(null!=n&&n.classList.add("tree-view-item-seen"),g(t,!0)):(null!=n&&n.classList.remove("tree-view-item-seen"),null!=r&&g(t,!1))},e.markDisabled=function(t){const e=l.get(t);null!=e&&(e.classList.add("disabled-event"),e.classList.remove("tree-view-item-loading"))},e.openPanelTree=m,e.openPanelTreeRec=function t(e){null!=e.parent&&("child"==e.type&&m(e,!0),t(e.parent))},e.removeLoading=function(t){null!=l.get(t)&&l.get(t).classList.remove("tree-view-item-loading");for(const e of t.children)"show"!=e.type&&"hide"!=e.type||null!=l.get(e)&&l.get(e).classList.remove("tree-view-item-loading")},e.audioPlaying=function(t){try{if(t==(0,i.stepAudio)((0,u.currentStep)())){const e=t.currentTime,n=t.duration,r=e+i.sounds.get((0,u.currentStep)()).previousDuration;document.getElementById("time-elapsed").innerHTML=v(r)+"/"+v(i.totalSoundDuration),h.get((0,u.currentStep)()).firstChild.style.width=100*e/n+"%"}}catch(t){console.log("tried to play illegally")}},e.updateTimelineDisplay=y,e.soundIcon=b,e.initPanels=function(){document.getElementById("svg").addEventListener("touchstart",x),document.getElementById("open-menu").addEventListener("click",A),document.getElementById("prev-event").addEventListener("click",r.prevButton),document.getElementById("next-event").addEventListener("click",r.nextButton),document.getElementById("play-button").addEventListener("click",r.playButton),document.getElementById("sound-speed").addEventListener("click",i.playbackRateChange),function t(e){if(f.set(e,!1),null==e.parent)c.set(e,document.getElementById("slide-stack"));else if(e.merged&&"child"!=e.type);else{const t=c.get(e.parent),n=document.createElement("div");let r;if(l.set(e,n),n.classList.add("tree-view-item"),n.classList.add("tree-view-item-loading"),"show"==e.type&&(r="visibility"),"hide"==e.type&&(r="visibility_off"),"child"==e.type&&(r="chevron_right"),n.innerHTML='<i class="material-icons">'+r+"</i> "+e.name,n.addEventListener("click",(function(t){if("I"==t.target.nodeName){if("child"==e.type){const t=!f.get(e);f.set(e,t),m(e,t)}}else(0,u.gotoEvent)(e)})),t.appendChild(n),"child"==e.type){const n=document.createElement("div");n.classList.add("slide-stack"),n.classList.add("slide-stack-hidden"),t.appendChild(n),c.set(e,n)}}if("child"==e.type)for(const n of e.children)t(n)}(r.manifest.tree),d(),(0,o.initSearch)(),Object.keys(r.manifest.soundDict).length>0&&document.body.classList.add("has-sound"),b()},e.userAlert=function(t){document.getElementById("text-alert").innerHTML=t,function(t){const e=a.gsap.timeline();t.style.display="inherit",e.to(t,{opacity:"100%",duration:.1}).to(t,{duration:2}).to(t,{opacity:"0",duration:1}),e.eventCallback("onComplete",(function(){t.style.display="none"}))}(document.getElementById("text-alert-box"))},e.updatePageNumber=function(){!function(){const t=new URL(window.location.href).searchParams;let e="?";for(const n of t.keys())"step"!=n&&(e+=`${n}=${t.get(n)}&`);t.keys()&&history.pushState({},null,e+"step="+u.timeline.past.length.toString())}(),document.getElementById("page-count-enumerator").innerHTML=(0,u.currentStep)().pageNumber.toString(),document.getElementById("page-count-denominator").innerHTML=" / "+u.timeline.lastStep.pageNumber.toString(),0==u.timeline.past.length?document.getElementById("prev-event").style.visibility="hidden":document.getElementById("prev-event").style.visibility="visible",0==u.timeline.future.length?document.getElementById("next-event").style.visibility="hidden":document.getElementById("next-event").style.visibility="visible"}},4779:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.transforms=e.localRect=e.svgMap=e.addToQueue=void 0;const r=n(2491),i=n(9796),o=n(8915),a=n(6067),s=n(1100),u=n(3519),l={waiting:new Set,loading:new Set,onceEmpty:[],onError:[]},c=new Map;e.transforms=c;const h=new Map;e.svgMap=h;const f=new Map,d=new Map;function p(){const t=new Set;for(const e of l.waiting)if(null==e.parent||null!=h.get(e.parent)){const t=document.createElement("object"),n=(0,i.fileName)(e.id,"image.svg");t.setAttribute("data",n),t.setAttribute("type","image/svg+xml"),t.classList.add("hidden-svg"),document.body.appendChild(t),t.onload=function(){g(e,t)},l.loading.add(e)}else t.add(e);if(l.waiting=t,0==l.waiting.size&&0==l.loading.size){for(const t of l.onceEmpty)t();l.onceEmpty=[],l.onError=[]}}function g(t,e){try{let n,i;for(const t of e.contentDocument.firstElementChild.children)if("g"==t.nodeName){n=t;break}if(null==n)throw new Error("No apppropriate svg element found.");for(const n of e.contentDocument.firstElementChild.children)if("defs"==n.nodeName){i=n,f.set(t,i),m(i,t);break}for(const e of n.querySelectorAll("rect")){let n,r=e.getAttribute("fill");if(null!=r&&r.startsWith("url(#")?(r="url(#"+t.id+r.slice(5),e.setAttribute("fill",r)):r=null,null!=i&&null!=r){let t=r.slice(5).slice(0,-1);for(const e of i.childNodes)if("pattern"==e.nodeName){const r=e;r.id==t&&(n=r)}}if(null!=n)for(const t of n.childNodes)if("use"==t.nodeName){let r,o=t.getAttribute("xlink:href");if(null!=o)for(const t of i.childNodes)if("image"==t.nodeName){const e=t;e.id==o.slice(1)&&(r=e)}if(null!=r){let t=document.createElementNS("http://www.w3.org/2000/svg","g");const i=parseFloat(e.getAttribute("x")||"0"),o=parseFloat(e.getAttribute("y")||"0"),a=parseFloat(e.getAttribute("width")||"1"),s=parseFloat(e.getAttribute("height")||"1"),u=parseFloat(r.getAttribute("width")||"1"),l=parseFloat(r.getAttribute("height")||"1"),c=a/u,h=s/l;t.id=e.id,t.setAttribute("transform","translate("+i+" "+o+") scale("+c+" "+h+")");let f=r.cloneNode(!0),d=e.parentNode;d.insertBefore(t,e),t.appendChild(f),d.removeChild(e),n.remove();break}}}for(const t of n.querySelectorAll("a")){let e=t.firstElementChild,n=t.previousElementSibling;if(null!=n&&null!=e){let t=n.getBBox();const r=t.x||0,i=t.y||0;e.setAttribute("x",r.toString()),e.setAttribute("y",i.toString())}}h.set(t,n);const l=n.children;for(const e of t.children)if((0,r.isOverlay)(e))for(const t of l)t.id==e.id&&h.set(e,t);for(const e of l)for(const n of t.children)"child"==n.type&&n.id==e.id&&(e.style.opacity="0");if((0,a.futureSlide)(t))for(const e of(0,a.allSteps)().reverse())e instanceof a.OverlayStep&&e.event().parent==t&&e.reverse().run("silent");else for(const e of(0,a.allSteps)())e instanceof a.OverlayStep&&e.event().parent==t&&e.run("silent");(0,o.removeLoading)(t),function(t){const e=h.get(t);if(d.set(t,(0,s.getBoundRect)(e)),null==t.parent)c.set(t,(0,s.idTransform)());else{let e;for(const n of h.get(t.parent).children)if(n.id==t.id){let t=null;if("rect"==n.nodeName)t=n;else for(const e of n.children)"rect"==e.nodeName&&(t=e);e={x:t.x.baseVal.value,y:t.y.baseVal.value,width:t.width.baseVal.value,height:t.height.baseVal.value}}const n=(0,s.applyTransform)(c.get(t.parent),e),r=(0,s.getTransform)(d.get(t),n);c.set(t,r)}e.setAttribute("transform",(0,s.transformToString)(c.get(t))),document.getElementById("svg").appendChild(e),null!=f.get(t)&&document.getElementById("svg").appendChild(f.get(t)),null==t.parent&&((0,r.zoomSlide)(t,"silent"),(0,u.updatePageNumber)())}(t)}catch(e){!function(){console.log("error");for(const t of l.onError)t();l.onceEmpty=[],l.onError=[]}(),(0,o.markDisabled)(t),(0,o.userAlert)("Failed to load svg for "+t.name),console.log(e)}l.loading.delete(t),p()}function m(t,e){for(const n of t.childNodes){let t=n;if(t.id=e.id+t.id,"clipPath"==t.nodeName&&t.remove(),"pattern"==t.nodeName)for(const n of t.getElementsByTagName("use")){const t=n.getAttribute("xlink:href"),r="#"+e.id+t.slice(1);n.setAttribute("xlink:href",r)}}}e.localRect=d,e.addToQueue=function(t){return new Promise(((e,n)=>{l.onceEmpty.push(e),l.onError.push(n);for(const e of t)if("child"==e.type){let t=e;for(;null!=t&&null==h.get(t);)l.waiting.has(t)||l.loading.has(t)||l.waiting.add(e),t=t.parent}p()}))}},5674:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.exportPdf=void 0;const r=n(1006);function i(t=void 0){const e=document.getElementById("svg"),n=e.viewBox.baseVal,i=1*n.width,o=1*n.height,a={orientation:i>o?"landscape":"portrait",unit:"pt",format:[i,o],compress:!0},s=new r.jsPDF(a);null==t&&(t={width:i,height:o}),s.svg(e,t).then((()=>s.save("printout.pdf")))}n(3730),e.exportPdf=i,window.exportPdf=i},195:function(t,e,n){"use strict";var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.initSearch=void 0;const i=r(n(4221)),o=n(6067),a=n(3519);let s;function u(){const t=document.getElementById("search-input").value,e=document.getElementById("search-results");e.innerHTML="";for(const n of s.search(t)){const t=n.item.slide;let r;r="child"==t.type?t.name:t.parent.name;const i=document.createElement("div");i.classList.add("one-result"),i.innerHTML=`<div class='search-result-slide'> ${r}</div> <div class='search-result-text'>${n.item.text}</div>`,i.addEventListener("click",(()=>{(0,o.gotoEvent)(t)})),e.appendChild(i)}}e.initSearch=function(){const t=[];!function e(n){for(const e of n.keywords)t.push({slide:n,text:e});if("child"==n.type)for(const t of n.children)e(t)}(a.manifest.tree),s=new i.default(t,{keys:["text"]});const e=document.getElementById("search-input");e.addEventListener("input",u),e.addEventListener("keyup",(t=>{"Escape"==t.key&&(e.value="",u())}))}},4674:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.currentTool=e.toggleSketchpad=void 0;let n="none";e.currentTool=n;const r=[];let i=-1;const o={sigCanvas:void 0,matrix:void 0,point:void 0,curPath:void 0,curPathText:void 0,original:{x:0,y:0},rect:void 0};function a(){i>=0&&(r[i].remove(),i-=1),u()}function s(){if(i<r.length-1){i+=1;const t=r[i];o.sigCanvas.appendChild(t)}u()}function u(){i>=0?document.getElementById("sketch-undo").classList.remove("disabled"):document.getElementById("sketch-undo").classList.add("disabled"),i<r.length-1?document.getElementById("sketch-redo").classList.remove("disabled"):document.getElementById("sketch-redo").classList.add("disabled")}function l(t){document.getElementById("sketch-red").classList.remove("selected"),document.getElementById("sketch-blue").classList.remove("selected"),"red"==t?document.getElementById("sketch-red").classList.add("selected"):"blue"==t&&document.getElementById("sketch-blue").classList.add("selected"),e.currentTool=n=t}e.toggleSketchpad=function(){switch(n){case"red":case"blue":document.getElementById("sketch-panel").style.display="none",l("none");break;case"none":l("red"),document.getElementById("sketch-panel").style.display="flex",u();break;default:throw"unsupported sketchpad case"}},document.getElementById("sketch-panel").addEventListener("click",(function(t){const e=t.target;"sketch-undo"==e.id&&a(),"sketch-redo"==e.id&&s(),"sketch-red"==e.id&&l("red"),"sketch-blue"==e.id&&l("blue")})),document.addEventListener("keydown",(function(t){"u"==t.key&&a(),"i"==t.key&&s()})),"ontouchstart"in document.documentElement&&document.getElementById("svg").addEventListener("touchmove",(function(t){t.preventDefault()})),document.getElementById("svg").addEventListener("pointerdown",(function t(e){if("pointerdown"==e.type&&(o.sigCanvas=document.getElementById("svg"),o.point=o.sigCanvas.createSVGPoint(),o.matrix=o.sigCanvas.getScreenCTM().inverse(),o.sigCanvas.addEventListener("pointermove",t,!1),o.sigCanvas.addEventListener("pointerup",t,!1)),o.point.x=e.clientX,o.point.y=e.clientY,o.point=o.point.matrixTransform(o.matrix),"none"==n){if("pointerdown"==e.type&&(o.original={x:o.point.x,y:o.point.y},o.rect=document.createElementNS("http://www.w3.org/2000/svg","rect"),o.rect.setAttributeNS(null,"x",o.point.x.toString()),o.rect.setAttributeNS(null,"y",o.point.y.toString()),o.rect.setAttributeNS(null,"fill","yellow"),o.rect.setAttributeNS(null,"opacity","20%"),o.sigCanvas.appendChild(o.rect)),"pointermove"==e.type){let t,e,n=o.point.y-o.original.y,r=o.point.x-o.original.x;n>=0?e=o.original.y:(n=-n,e=o.point.y),r>=0?t=o.original.x:(r=-r,t=o.point.x),o.rect.setAttributeNS(null,"x",t.toString()),o.rect.setAttributeNS(null,"y",e.toString()),o.rect.setAttributeNS(null,"height",n.toString()),o.rect.setAttributeNS(null,"width",r.toString())}"pointerup"==e.type&&o.rect.remove()}if("blue"==n||"red"==n){if("pointerdown"==e.type){o.curPath=document.createElementNS("http://www.w3.org/2000/svg","path"),o.curPathText="M "+o.point.x+" "+o.point.y,o.curPath.setAttributeNS(null,"d",o.curPathText);const t="blue"==n?"blue":"red";o.curPath.setAttributeNS(null,"stroke",t),o.curPath.setAttributeNS(null,"stroke-width",o.matrix.a.toString()),o.sigCanvas.appendChild(o.curPath),r.splice(i+1),r.push(o.curPath),i+=1,u()}"pointermove"==e.type&&(o.curPathText+=" L "+o.point.x+" "+o.point.y,o.curPath.setAttributeNS(null,"d",o.curPathText))}"pointerup"!=e.type&&"pointerout"!=e.type||(o.sigCanvas.removeEventListener("pointermove",t,!1),o.sigCanvas.removeEventListener("pointerup",t,!1))}),!1)},6208:function(t,e,n){"use strict";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((r=r.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.stepAudio=e.endRecording=e.soundLive=e.SoundState=e.cacheFlush=e.endOfSound=e.soundPaused=e.resetSound=e.initSoundTimeline=e.totalSoundDuration=e.sounds=e.soundAdvance=e.gotoAudio=e.playbackRateChange=e.soundState=e.loadSound=e.soundRecord=e.soundPlay=e.soundStop=void 0;const i=n(3519),o=n(9796),a=n(2491),s=n(8915),u=n(6067);var l;!function(t){t.Recording="Record",t.Live="Live",t.Play="Play",t.None="Right"}(l||(l={})),e.SoundState=l;let c=l.None;e.soundState=c;let h=0;e.totalSoundDuration=h;const f=new Map;e.sounds=f;let d,p,g="";function m(){g+="?"+Date.now()}function v(){if(c==l.Play){const t=L((0,u.currentStep)());null!=t&&(t.pause(),(0,s.audioPlaying)(t))}c!=l.Recording&&c!=l.Live||y(0),e.soundState=c=l.None,(0,s.soundIcon)()}function y(t){if(null==p||"recording"!=p.state)return;let e;switch(c){case l.Recording:e=!1;break;case l.Live:e=!0;break;default:throw"should not be in this state"}const n={presentation:void 0,type:"wav",forWhat:void 0,file:void 0};if(e)switch(n.forWhat={type:"step",description:void 0},t){case 1:n.forWhat.description=(0,u.currentStep)().description();break;case-1:{const t=u.timeline.past[u.timeline.past.length-1];n.forWhat.description=t.reverse().description();break}case 0:n.forWhat.description={type:"last",page:(0,u.currentStep)().pageNumber}}else n.forWhat=(0,a.eventDescription)((0,u.currentStep)());p.onstop=()=>{const t=new Blob(d),e=new FileReader;e.onload=function(t){const e=t.target.result,a=new Uint8Array(e);n.file=Array.from(a),function(){r(this,void 0,void 0,(function*(){try{const t=yield(0,o.sendToServer)(n),e=(yield t.json()).status;if("Sound recorded successfully"!=e)throw e;if(c==l.None){const t=yield(0,i.getManifest)();i.manifest.soundDict=t.soundDict,m(),S(void 0),(0,u.loadNearbySounds)(),(0,s.timelineHTML)()}}catch(t){console.log(t),(0,s.userAlert)("Failed to record sound. "+t)}}))}()},e.readAsArrayBuffer(t)},p.stop()}function b(t){(function(){return r(this,void 0,void 0,(function*(){const t=yield navigator.mediaDevices.getUserMedia({audio:!0});p=new MediaRecorder(t),d=[],p.start(),p.addEventListener("dataavailable",(t=>{d.push(t.data)}))}))})().then((()=>{e.soundState=c="live"==t?l.Live:l.Recording,(0,s.soundIcon)()})).catch((t=>{e.soundState=c=l.None,(0,s.soundIcon)(),"Safari"==(0,i.userAgent)()?(0,s.userAlert)("To enable Mediarecorder  in Safari, use Develop/Experimental features"):(0,s.userAlert)(t)}))}function w(){u.timeline.future.length>0?(N(),(0,u.moveHead)(1),_()):v()}e.cacheFlush=m,e.soundPaused=function(){const t=L((0,u.currentStep)());return null!=t&&t.currentTime>0},e.soundStop=v,e.endRecording=y,e.soundRecord=b,e.soundLive=function(){console.log("starting live recording"),console.log((new Error).stack);const t={type:"startLive",presentation:i.manifest.presentation};(0,u.gotoStep)((0,u.allSteps)()[0]).then((()=>{(0,o.sendToServer)(t),b("live"),(0,s.soundIcon)()}))};const A=[1,1.5,2,.7];let x=0;function _(t="normal"){try{const n=L((0,u.currentStep)());if(null==n)throw"no audio";return n.playbackRate=A[x],"fromEnd"==t&&(n.currentTime=Math.max(0,n.duration-10)),n.play(),e.soundState=c=l.Play,(0,s.soundIcon)(),!0}catch(t){return null!=f.get((0,u.currentStep)())&&(0,s.userAlert)("No sounds for this event"),v(),!1}}function S(t){null!=new URL(window.location.href).searchParams.get("nocache")&&m(),f.clear(),e.totalSoundDuration=h=0;let n=0;for(const r of(0,u.allSteps)())try{const s={filename:void 0,audio:void 0,duration:void 0,previousDuration:h};if(null==t){const t=(0,a.eventDescription)(r);s.duration=i.manifest.soundDict[t.slideId][t.eventId],s.filename=(0,o.fileName)(t.slideId,t.eventId+".mp3"+g)}else s.duration=t.steps[n].duration,s.filename=`${t.dir}/${n}.mp3${g}`,n++;if(null==s.duration)throw"no duration";f.set(r,s),e.totalSoundDuration=h+=s.duration}catch(t){console.log("found no sound file")}}function L(t){const e=f.get(t);return null!=e?e.audio:void 0}function N(){const t=L((0,u.currentStep)());null!=t&&(t.pause(),t.currentTime=0,(0,s.audioPlaying)(t),(0,s.soundIcon)())}e.playbackRateChange=function(){x=(x+1)%A.length;const t=L((0,u.currentStep)());null!=t&&(t.playbackRate=A[x]),document.getElementById("sound-speed").innerHTML="×"+A[x]},e.soundPlay=_,e.initSoundTimeline=S,e.loadSound=function(t){return new Promise(((e,n)=>{const r=f.get(t);if(null==r||null!=r.audio)e();else{const i=r.filename,o=new Audio(i);o.addEventListener("ended",w),o.addEventListener("progress",(()=>{r.audio=o,t==(0,u.currentStep)()&&(0,s.soundIcon)(),e()})),o.addEventListener("error",(()=>{f.delete(t),t==(0,u.currentStep)()&&(0,s.soundIcon)(),n()})),o.addEventListener("timeupdate",(t=>{(0,s.audioPlaying)(t.target)}))}}))},e.gotoAudio=function(t){const e=L((0,u.currentStep)());null!=e&&(e.currentTime=e.duration*t)},e.soundAdvance=function(t){const e=L((0,u.currentStep)());t<0?e.currentTime<1?(N(),(0,u.moveHead)(-1),_("fromEnd")):(e.currentTime=Math.max(0,e.currentTime-10),(0,s.soundIcon)()):e.currentTime=Math.min(e.duration-.01,e.currentTime+10)},e.stepAudio=L,e.resetSound=N,e.endOfSound=function(){const t=L((0,u.currentStep)());return 0==u.timeline.future.length&&null!=t&&t.currentTime==t.duration}},6067:function(t,e,n){"use strict";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((r=r.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.loadNearbySounds=e.allSteps=e.futureSlide=e.gotoStep=e.gotoEvent=e.currentStep=e.zoomsIn=e.ZoomStep=e.OverlayStep=e.Step=e.timeline=e.moveHead=e.createTimeline=void 0;const i=n(2491),o=n(8915),a=n(3519),s=n(6208),u=n(4779);class l{constructor(){}event(){return a.manifest.tree}description(){return{type:"last",page:this.pageNumber}}reverse(){return new l}run(t){}}e.Step=l;class c extends l{constructor(t,e){super(),this.direction=e,this.overlays=t}event(){return this.overlays[0]}description(){return{type:"overlays",page:this.pageNumber,slide:this.overlays[0].parent.id,direction:this.direction,overlays:this.overlays.map((t=>t.eventId))}}reverse(){return new c(this.overlays,1==this.direction?-1:1)}run(t){for(const e of this.overlays)(0,i.runOverlay)(e,this.direction,t)}}e.OverlayStep=c;class h extends l{constructor(t,e){super(),this.source=t,this.target=e}reverse(){return new h(this.target,this.source)}event(){return this.source}description(){return{type:"zoom",page:this.pageNumber,source:this.source.id,target:this.target.id}}run(t){(0,u.addToQueue)(this.target.children),(0,i.zoomSlide)(this.target,t),null!=this.target.parent&&(0,o.openPanelTree)(this.target,!0),this.source!=this.target.parent&&(0,o.openPanelTree)(this.source,!1)}}e.ZoomStep=h;const f={type:void 0,past:[],future:[],lastStep:new l};function d(t=0){if(f.future.length>t)return f.future[f.future.length-1-t];if(f.future.length==t)return f.lastStep;throw"tried to access step that does not exist"}function p(t){if(t==a.manifest.tree)return f.lastStep;const e=f.past.concat(f.future);if("child"==t.type)for(const n of e)if(n instanceof h&&n.target==t)return n;if("show"==t.type||"hide"==t.type)for(const n of e)if(n instanceof c&&n.overlays.includes(t))return n}function g(t){return t instanceof h&&t.source==t.target.parent}function m(t){let e,n;if(1==t?(e=f.future,n=f.past):(e=f.past,n=f.future),0==e.length)return void console.log("cannot fall off the tape");(0,s.endRecording)(t);let r=e.pop();n.push(r),(0,o.markSeen)(r,t),-1==t&&(r=r.reverse()),r.run("animated"),b(),(0,o.soundIcon)(),(0,a.updatePageNumber)()}function v(){for(;f.past.length>0;){const t=f.past.pop();f.future.push(t)}}function y(t,e="animated"){return r(this,void 0,void 0,(function*(){let n;if(t instanceof c)n=t.overlays[0];else if(t instanceof h)n=t.source;else{if(t!=f.lastStep)throw"Wanted to go to a step that does not exist";n=a.manifest.tree}const r=[];let s;for(s="child"==n.type?n:n.parent;null!=s;){r.push(s);for(const t of s.children)"child"==t.type&&r.push(t);s=s.parent}for(yield(0,u.addToQueue)(r),(0,o.openPanelTreeRec)(n),v();d()!=t;){const t=f.future.pop();t instanceof c&&t.run("silent"),(0,o.markSeen)(t,1),f.past.push(t)}for(const t of f.future)(0,o.markSeen)(t,-1),t instanceof c&&t.reverse().run("silent");null!=f.lastStep&&(0,o.timelineSeen)(f.lastStep,!1);let l=n;"child"!=n.type&&(l=n.parent),"silent"==e?(0,i.zoomSlide)(l,"silent"):(0,i.zoomSlide)(l),b(),(0,o.soundIcon)(),(0,a.updatePageNumber)()}))}function b(){(0,s.loadSound)(d()),f.past.length>0&&(0,s.loadSound)(f.past[f.past.length-1]),f.future.length>1&&(0,s.loadSound)(f.future[f.future.length-2]),1==f.future.length&&(0,s.loadSound)(f.lastStep)}function w(){const t=f.past.slice().concat(f.future.slice().reverse());return Object.keys(a.manifest.soundDict).length>0&&t.push(f.lastStep),t}e.timeline=f,e.currentStep=d,e.createTimeline=function(t){if(null==t?function t(e){f.type="default";const n=[];for(const t of e.children)if(t.merged){const e=n.pop();e.push(t),n.push(e)}else n.push([t]);for(const r of n)if((0,i.isOverlay)(r[0]))f.past.push(new c(r,1));else{const n=r;f.past.push(new h(e,n[0])),t(n[0]);for(let e=1;e<n.length;e++)f.past.push(new h(n[e-1],n[e])),t(n[e]);f.past.push(new h(n[n.length-1],e))}}(a.manifest.tree):function(){f.type="recorded";for(const e of t.steps){let t;switch(e.step.type){case"zoom":t=new h((0,i.findZoomEvent)(e.step.source),(0,i.findZoomEvent)(e.step.target));break;case"overlays":{const n=[],r=(0,i.findZoomEvent)(e.step.slide);for(const t of e.step.overlays)for(const e of r.children)"child"!=e.type&&e.eventId==t&&n.push(e);t=new c(n,e.step.direction);break}case"last":t=new l}t.pageNumber=e.step.page,f.past.push(t)}f.lastStep=f.past.pop()}(),v(),null==t){const t=new Set;let e=1;for(const n of w())n.pageNumber=e,n instanceof h&&!t.has(n.target)&&g(n)&&(e++,t.add(n.target));f.lastStep.pageNumber=e}},e.futureSlide=function(t){const e=p(t);return f.future.includes(e)},e.zoomsIn=g,e.moveHead=m,e.gotoStep=y,e.gotoEvent=function(t){const e=p(t);null!=e?y(e).then((()=>m(1))):console.log("this event has no associated step",t)},e.loadNearbySounds=b,e.allSteps=w},1100:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getBoundRect=e.idTransform=e.transformToString=e.getTransform=e.applyTransform=void 0,e.applyTransform=function(t,e){return{x:e.x*t.scalex+t.deltax,y:e.y*t.scaley+t.deltay,width:e.width*t.scalex,height:e.height*t.scaley}},e.getTransform=function(t,e){const n=e.width/t.width,r=e.height/t.height;return{scalex:n,scaley:r,deltax:e.x-t.x*n,deltay:e.y-t.y*r}},e.transformToString=function(t){return"translate("+t.deltax+" "+t.deltay+") scale("+t.scalex+" "+t.scaley+")"},e.idTransform=function(){return{scalex:1,scaley:1,deltax:0,deltay:0}},e.getBoundRect=function(t){const e=t.firstElementChild,n={width:e.width.baseVal.value,height:e.height.baseVal.value,x:0,y:0},r=e.transform.baseVal;return r.length>0&&(n.x=r[0].matrix.e,n.y=r[0].matrix.f),e.remove(),n}},3519:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.playButton=e.prevButton=e.nextButton=e.userAgent=e.updatePageNumber=e.getManifest=e.manifest=void 0,n(7233),n(4339),n(8932),n(3430);const r=n(2491),i=n(8915);Object.defineProperty(e,"updatePageNumber",{enumerable:!0,get:function(){return i.updatePageNumber}});const o=n(6208),a=n(9796),s=n(4674),u=n(6067),l=n(5674);let c;function h(){switch(o.soundState){case o.SoundState.Play:case o.SoundState.Recording:case o.SoundState.Live:(0,o.soundStop)();break;case o.SoundState.None:(0,o.endOfSound)()||(0,o.soundPlay)()}}function f(){if(u.timeline.future.length>0)switch(o.soundState){case o.SoundState.Play:(0,o.soundAdvance)(1);break;case o.SoundState.Recording:case o.SoundState.Live:(0,u.moveHead)(1),o.soundState==o.SoundState.Live?(0,o.soundRecord)("live"):(0,o.soundRecord)("event");break;case o.SoundState.None:(0,o.resetSound)(),(0,u.moveHead)(1)}}function d(){if(u.timeline.past.length>0)switch(o.soundState){case o.SoundState.Play:(0,o.soundAdvance)(-1);break;case o.SoundState.Recording:(0,o.soundStop)();break;case o.SoundState.Live:(0,u.moveHead)(-1),(0,o.soundRecord)("live");break;case o.SoundState.None:(0,o.soundPaused)()?(0,o.resetSound)():(0,u.moveHead)(-1)}}function p(t){if(t.target!=document.getElementById("search-input"))switch(t.key){case"ArrowRight":f();break;case"ArrowLeft":d();break;case" ":h();break;case"d":(0,s.toggleSketchpad)();break;case"r":"default"==u.timeline.type&&v()&&(o.soundState==o.SoundState.Recording?(0,o.soundStop)():((0,o.soundStop)(),(0,o.soundRecord)("event")));break;case"l":"default"==u.timeline.type&&v()&&(o.soundState==o.SoundState.Live?(0,o.soundStop)():o.soundState==o.SoundState.None&&(0,o.soundLive)());break;case"p":(0,l.exportPdf)()}}function g(){return(0,a.fetchJSON)((0,a.presentationDir)()+"/manifest.json").then((t=>{if(null==t)throw"The manifest is missing for the presentation";return t}))}e.manifest=c,e.userAgent=function(){return-1!==navigator.userAgent.indexOf("Chrome")?"Chrome":-1!==navigator.userAgent.indexOf("Firefox")?"Firefox":-1!==navigator.userAgent.indexOf("Safari")?"Safari":null},e.playButton=h,e.nextButton=f,e.prevButton=d,e.getManifest=g;let m=!1;function v(){return m}window.onload=function(){document.getElementById("loader-text").remove(),document.getElementById("upper-panel").style.opacity="",document.getElementById("progress-panel").style.opacity="",("ontouchstart"in window||navigator.maxTouchPoints>0)&&document.body.classList.add("tablet"),(0,a.probeServer)().then((t=>{m=t})),g().then((t=>{e.manifest=c=t,document.title=c.presentation,(0,r.createEventTree)();const n=function(){const t=new URL(window.location.href).searchParams;try{const e=parseInt(t.get("live"));return c.live[e]}catch(t){return}}();(0,u.createTimeline)(n),(0,o.initSoundTimeline)(n),(0,i.initPanels)(),document.addEventListener("keydown",p);const a=function(){const t=new URL(window.location.href).searchParams;try{return(0,u.currentStep)(parseInt(t.get("step")))}catch(t){return(0,u.currentStep)()}}();(0,u.gotoStep)(a).then((()=>{document.getElementById("svg").style.opacity="1"}))})).catch((t=>(0,i.userAlert)(t)))}},8698:t=>{function e(n){return t.exports=e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t.exports.__esModule=!0,t.exports.default=t.exports,e(n)}t.exports=e,t.exports.__esModule=!0,t.exports.default=t.exports}},n={};function r(t){var i=n[t];if(void 0!==i)return i.exports;var o=n[t]={id:t,exports:{}};return e[t].call(o.exports,o,o.exports,r),o.exports}r.m=e,r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.f={},r.e=t=>Promise.all(Object.keys(r.f).reduce(((e,n)=>(r.f[n](t,e),e)),[])),r.u=t=>t+".js",r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.nc=void 0,t={428:1},r.f.require=(e,n)=>{t[e]||(e=>{var n=e.modules,i=e.ids,o=e.runtime;for(var a in n)r.o(n,a)&&(r.m[a]=n[a]);o&&o(r);for(var s=0;s<i.length;s++)t[i[s]]=1})(require("./"+r.u(e)))},r(3519)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,